{
  "openapi": "3.0.1",
  "info": {
    "title": "UniEconomy API",
    "contact": {
      "name": "Not relevant",
      "url": "http://nonexisting.notgonnahappen"
    },
    "license": {
      "name": "MIT"
    },
    "version": "1.0"
  },
  "servers": [
    {
      "url": "http://test-api.softrig.com/api/biz"
    }
  ],
  "paths": {
    "/workers?action=create-worker-from-user": {
      "post": {
        "tags": [
          "Worker"
        ],
        "description": "create-worker-from-user Action",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Worker"
                }
              }
            }
          }
        }
      }
    },
    "/workers/{id}": {
      "get": {
        "tags": [
          "Worker"
        ],
        "description": "Get Worker",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Worker"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Worker"
        ],
        "description": "Update Worker",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Worker"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Worker"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Worker"
      },
      "delete": {
        "tags": [
          "Worker"
        ],
        "description": "Delete Worker",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Worker"
                }
              }
            }
          }
        }
      }
    },
    "/workers": {
      "get": {
        "tags": [
          "Worker"
        ],
        "description": "Query Worker",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Worker"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Worker"
        ],
        "description": "Create Worker",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Worker"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Worker"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Worker"
      }
    },
    "/workitems/{id}": {
      "get": {
        "tags": [
          "WorkItem"
        ],
        "description": "Get WorkItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkItem"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "WorkItem"
        ],
        "description": "Update WorkItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkItem"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkItem"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "WorkItem"
      },
      "delete": {
        "tags": [
          "WorkItem"
        ],
        "description": "Delete WorkItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkItem"
                }
              }
            }
          }
        }
      }
    },
    "/workitems": {
      "get": {
        "tags": [
          "WorkItem"
        ],
        "description": "Query WorkItem",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkItem"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "WorkItem"
        ],
        "description": "Create WorkItem",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkItem"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkItem"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "WorkItem"
      }
    },
    "/worktypes/{id}": {
      "get": {
        "tags": [
          "WorkType"
        ],
        "description": "Get WorkType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkType"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "WorkType"
        ],
        "description": "Update WorkType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkType"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkType"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "WorkType"
      },
      "delete": {
        "tags": [
          "WorkType"
        ],
        "description": "Delete WorkType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkType"
                }
              }
            }
          }
        }
      }
    },
    "/worktypes": {
      "get": {
        "tags": [
          "WorkType"
        ],
        "description": "Query WorkType",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkType"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "WorkType"
        ],
        "description": "Create WorkType",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkType"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkType"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "WorkType"
      }
    },
    "/workprofiles/{id}": {
      "get": {
        "tags": [
          "WorkProfile"
        ],
        "description": "Get WorkProfile",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkProfile"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "WorkProfile"
        ],
        "description": "Update WorkProfile",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkProfile"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkProfile"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "WorkProfile"
      },
      "delete": {
        "tags": [
          "WorkProfile"
        ],
        "description": "Delete WorkProfile",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkProfile"
                }
              }
            }
          }
        }
      }
    },
    "/workprofiles": {
      "get": {
        "tags": [
          "WorkProfile"
        ],
        "description": "Query WorkProfile",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkProfile"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "WorkProfile"
        ],
        "description": "Create WorkProfile",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkProfile"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkProfile"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "WorkProfile"
      }
    },
    "/workbalances/{id}": {
      "get": {
        "tags": [
          "WorkBalance"
        ],
        "description": "Get WorkBalance",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkBalance"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "WorkBalance"
        ],
        "description": "Update WorkBalance",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkBalance"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkBalance"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "WorkBalance"
      },
      "delete": {
        "tags": [
          "WorkBalance"
        ],
        "description": "Delete WorkBalance",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkBalance"
                }
              }
            }
          }
        }
      }
    },
    "/workbalances": {
      "get": {
        "tags": [
          "WorkBalance"
        ],
        "description": "Query WorkBalance",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkBalance"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "WorkBalance"
        ],
        "description": "Create WorkBalance",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkBalance"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkBalance"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "WorkBalance"
      }
    },
    "/worktimeoff/{id}": {
      "get": {
        "tags": [
          "WorkTimeOff"
        ],
        "description": "Get WorkTimeOff",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkTimeOff"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "WorkTimeOff"
        ],
        "description": "Update WorkTimeOff",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkTimeOff"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkTimeOff"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "WorkTimeOff"
      },
      "delete": {
        "tags": [
          "WorkTimeOff"
        ],
        "description": "Delete WorkTimeOff",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkTimeOff"
                }
              }
            }
          }
        }
      }
    },
    "/worktimeoff": {
      "get": {
        "tags": [
          "WorkTimeOff"
        ],
        "description": "Query WorkTimeOff",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkTimeOff"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "WorkTimeOff"
        ],
        "description": "Create WorkTimeOff",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkTimeOff"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkTimeOff"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "WorkTimeOff"
      }
    },
    "/workitemgroups?action=create-from-items": {
      "post": {
        "tags": [
          "WorkItemGroup"
        ],
        "description": "create-from-items Action",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkItemGroup"
                }
              }
            }
          }
        }
      }
    },
    "/workitemgroups/{id}?action=AssignTo": {
      "post": {
        "tags": [
          "WorkItemGroup"
        ],
        "description": "AssignTo Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentDetails"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "details"
      }
    },
    "/workitemgroups/{id}?action=Assign": {
      "post": {
        "tags": [
          "WorkItemGroup"
        ],
        "description": "Assign Transition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/workitemgroups/{id}?action=Approve": {
      "post": {
        "tags": [
          "WorkItemGroup"
        ],
        "description": "Approve Transition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/workitemgroups/{id}?action=Reject": {
      "post": {
        "tags": [
          "WorkItemGroup"
        ],
        "description": "Reject Transition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/workitemgroups/{id}": {
      "get": {
        "tags": [
          "WorkItemGroup"
        ],
        "description": "Get WorkItemGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkItemGroup"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "WorkItemGroup"
        ],
        "description": "Update WorkItemGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkItemGroup"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkItemGroup"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "WorkItemGroup"
      },
      "delete": {
        "tags": [
          "WorkItemGroup"
        ],
        "description": "Delete WorkItemGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkItemGroup"
                }
              }
            }
          }
        }
      }
    },
    "/workitemgroups": {
      "get": {
        "tags": [
          "WorkItemGroup"
        ],
        "description": "Query WorkItemGroup",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkItemGroup"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "WorkItemGroup"
        ],
        "description": "Create WorkItemGroup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkItemGroup"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkItemGroup"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "WorkItemGroup"
      }
    },
    "/workrelations/{id}?action=timesheet": {
      "get": {
        "tags": [
          "WorkRelation"
        ],
        "description": "timesheet Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeSheet"
                }
              }
            }
          }
        }
      }
    },
    "/workrelations/{id}?action=calc-flex-balance": {
      "get": {
        "tags": [
          "WorkRelation"
        ],
        "description": "calc-flex-balance Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkBalanceDto"
                }
              }
            }
          }
        }
      }
    },
    "/workrelations/{id}": {
      "get": {
        "tags": [
          "WorkRelation"
        ],
        "description": "Get WorkRelation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkRelation"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "WorkRelation"
        ],
        "description": "Update WorkRelation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkRelation"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkRelation"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "WorkRelation"
      },
      "delete": {
        "tags": [
          "WorkRelation"
        ],
        "description": "Delete WorkRelation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkRelation"
                }
              }
            }
          }
        }
      }
    },
    "/workrelations": {
      "get": {
        "tags": [
          "WorkRelation"
        ],
        "description": "Query WorkRelation",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkRelation"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "WorkRelation"
        ],
        "description": "Create WorkRelation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkRelation"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkRelation"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "WorkRelation"
      }
    },
    "/batchinvoices/{id}?action=addCustomerOrder": {
      "put": {
        "tags": [
          "BatchInvoice"
        ],
        "description": "addCustomerOrder Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "integer"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "orderids"
      }
    },
    "/batchinvoices/{id}?action=addCustomerInvoice": {
      "put": {
        "tags": [
          "BatchInvoice"
        ],
        "description": "addCustomerInvoice Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "integer"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "customerInvoiceDratIds"
      }
    },
    "/batchinvoices/{id}?action=invoice": {
      "put": {
        "tags": [
          "BatchInvoice"
        ],
        "description": "invoice Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/batchinvoices/{id}": {
      "get": {
        "tags": [
          "BatchInvoice"
        ],
        "description": "Get BatchInvoice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchInvoice"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "BatchInvoice"
        ],
        "description": "Update BatchInvoice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchInvoice"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchInvoice"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "BatchInvoice"
      },
      "delete": {
        "tags": [
          "BatchInvoice"
        ],
        "description": "Delete BatchInvoice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchInvoice"
                }
              }
            }
          }
        }
      }
    },
    "/batchinvoices": {
      "get": {
        "tags": [
          "BatchInvoice"
        ],
        "description": "Query BatchInvoice",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BatchInvoice"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "BatchInvoice"
        ],
        "description": "Create BatchInvoice",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchInvoice"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchInvoice"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "BatchInvoice"
      }
    },
    "/business-relations?action=search-data-hotel": {
      "get": {
        "tags": [
          "BusinessRelation"
        ],
        "description": "search-data-hotel Action",
        "parameters": [
          {
            "name": "searchText",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactSearchServiceResponse"
                }
              }
            }
          }
        }
      }
    },
    "/business-relations/{id}": {
      "get": {
        "tags": [
          "BusinessRelation"
        ],
        "description": "Get BusinessRelation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessRelation"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "BusinessRelation"
        ],
        "description": "Update BusinessRelation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BusinessRelation"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessRelation"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "BusinessRelation"
      },
      "delete": {
        "tags": [
          "BusinessRelation"
        ],
        "description": "Delete BusinessRelation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessRelation"
                }
              }
            }
          }
        }
      }
    },
    "/business-relations": {
      "get": {
        "tags": [
          "BusinessRelation"
        ],
        "description": "Query BusinessRelation",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BusinessRelation"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "BusinessRelation"
        ],
        "description": "Create BusinessRelation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BusinessRelation"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessRelation"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "BusinessRelation"
      }
    },
    "/campaigntemplate/{id}": {
      "get": {
        "tags": [
          "CampaignTemplate"
        ],
        "description": "Get CampaignTemplate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignTemplate"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CampaignTemplate"
        ],
        "description": "Update CampaignTemplate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignTemplate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignTemplate"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "CampaignTemplate"
      },
      "delete": {
        "tags": [
          "CampaignTemplate"
        ],
        "description": "Delete CampaignTemplate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignTemplate"
                }
              }
            }
          }
        }
      }
    },
    "/campaigntemplate": {
      "get": {
        "tags": [
          "CampaignTemplate"
        ],
        "description": "Query CampaignTemplate",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CampaignTemplate"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CampaignTemplate"
        ],
        "description": "Create CampaignTemplate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignTemplate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignTemplate"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "CampaignTemplate"
      }
    },
    "/contacts/{id}": {
      "get": {
        "tags": [
          "Contact"
        ],
        "description": "Get Contact",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Contact"
        ],
        "description": "Update Contact",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Contact"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Contact"
      },
      "delete": {
        "tags": [
          "Contact"
        ],
        "description": "Delete Contact",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          }
        }
      }
    },
    "/contacts": {
      "get": {
        "tags": [
          "Contact"
        ],
        "description": "Query Contact",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Contact"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Contact"
        ],
        "description": "Create Contact",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Contact"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Contact"
      }
    },
    "/customers/{id}?action=next": {
      "get": {
        "tags": [
          "Customer"
        ],
        "description": "next Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{id}?action=previous": {
      "get": {
        "tags": [
          "Customer"
        ],
        "description": "previous Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          }
        }
      }
    },
    "/customers?action=activate": {
      "put": {
        "tags": [
          "Customer"
        ],
        "description": "activate Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/customers?action=deactivate": {
      "put": {
        "tags": [
          "Customer"
        ],
        "description": "deactivate Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/customers?action=block": {
      "put": {
        "tags": [
          "Customer"
        ],
        "description": "block Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/customers?action=validate-customer-KID-Alias": {
      "get": {
        "tags": [
          "Customer"
        ],
        "description": "validate-customer-KID-Alias Action",
        "parameters": [
          {
            "name": "customerKidAlias",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/customers?action=bulk-save": {
      "put": {
        "tags": [
          "Customer"
        ],
        "description": "bulk-save Action",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "customers"
      }
    },
    "/customers/{id}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "description": "Get Customer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Customer"
        ],
        "description": "Update Customer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Customer"
      },
      "delete": {
        "tags": [
          "Customer"
        ],
        "description": "Delete Customer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          }
        }
      }
    },
    "/customers": {
      "get": {
        "tags": [
          "Customer"
        ],
        "description": "Query Customer",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Customer"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Customer"
        ],
        "description": "Create Customer",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Customer"
      }
    },
    "/invoicereminders?action=get-customer-invoices-ready-for-reminding": {
      "get": {
        "tags": [
          "CustomerInvoiceReminder"
        ],
        "description": "get-customer-invoices-ready-for-reminding Action",
        "parameters": [
          {
            "name": "includeInvoiceWithReminderStop",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/invoicereminders?action=get-customer-invoices-ready-for-debt-collection": {
      "get": {
        "tags": [
          "CustomerInvoiceReminder"
        ],
        "description": "get-customer-invoices-ready-for-debt-collection Action",
        "parameters": [
          {
            "name": "includeInvoiceWithReminderStop",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/invoicereminders?action=get-customer-invoices-sent-to-debt-collection": {
      "get": {
        "tags": [
          "CustomerInvoiceReminder"
        ],
        "description": "get-customer-invoices-sent-to-debt-collection Action",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/invoicereminders?action=create-invoicereminders-for-invoicelist": {
      "post": {
        "tags": [
          "CustomerInvoiceReminder"
        ],
        "description": "create-invoicereminders-for-invoicelist Action",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "integer"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerInvoiceReminder"
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "customerInvoiceIDs"
      }
    },
    "/invoicereminders?action=create-invoicereminders-from-reminder-rules": {
      "post": {
        "tags": [
          "CustomerInvoiceReminder"
        ],
        "description": "create-invoicereminders-from-reminder-rules Action",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerInvoiceReminder"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/invoicereminders?action=get-invoicereminders-for-invoicelist": {
      "post": {
        "tags": [
          "CustomerInvoiceReminder"
        ],
        "description": "get-invoicereminders-for-invoicelist Action",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "integer"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerInvoiceReminder"
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "customerInvoiceIDs"
      }
    },
    "/invoicereminders?action=get-invoicereminders-from-reminder-rules": {
      "post": {
        "tags": [
          "CustomerInvoiceReminder"
        ],
        "description": "get-invoicereminders-from-reminder-rules Action",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerInvoiceReminder"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/invoicereminders?action=queue-for-debt-collection": {
      "put": {
        "tags": [
          "CustomerInvoiceReminder"
        ],
        "description": "queue-for-debt-collection Action",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "integer"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "customerInvoiceIDs"
      }
    },
    "/invoicereminders?action=get-sum-reminders-to-debt-collection": {
      "get": {
        "tags": [
          "CustomerInvoiceReminder"
        ],
        "description": "get-sum-reminders-to-debt-collection Action",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/invoicereminders?action=get-sum-customer-invoices-ready-for-reminding": {
      "get": {
        "tags": [
          "CustomerInvoiceReminder"
        ],
        "description": "get-sum-customer-invoices-ready-for-reminding Action",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/invoicereminders?action=send": {
      "put": {
        "tags": [
          "CustomerInvoiceReminder"
        ],
        "description": "send Action",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "integer"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "reminderIDs"
      }
    },
    "/invoicereminders?action=send-invoice-print": {
      "put": {
        "tags": [
          "CustomerInvoiceReminder"
        ],
        "description": "send-invoice-print Action",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "integer"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "reminderIDs"
      }
    },
    "/invoicereminders?action=set-status-to-sent": {
      "put": {
        "tags": [
          "CustomerInvoiceReminder"
        ],
        "description": "set-status-to-sent Action",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "integer"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "reminderIDs"
      }
    },
    "/invoicereminders?action=create-notification-ready-for-debt-collection": {
      "post": {
        "tags": [
          "CustomerInvoiceReminder"
        ],
        "description": "create-notification-ready-for-debt-collection Action",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "integer"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "reminderIDs"
      }
    },
    "/invoicereminders/{id}?action=send": {
      "post": {
        "tags": [
          "CustomerInvoiceReminder"
        ],
        "description": "send Transition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/invoicereminders/{id}": {
      "get": {
        "tags": [
          "CustomerInvoiceReminder"
        ],
        "description": "Get CustomerInvoiceReminder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerInvoiceReminder"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CustomerInvoiceReminder"
        ],
        "description": "Update CustomerInvoiceReminder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerInvoiceReminder"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerInvoiceReminder"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "CustomerInvoiceReminder"
      },
      "delete": {
        "tags": [
          "CustomerInvoiceReminder"
        ],
        "description": "Delete CustomerInvoiceReminder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerInvoiceReminder"
                }
              }
            }
          }
        }
      }
    },
    "/invoicereminders": {
      "get": {
        "tags": [
          "CustomerInvoiceReminder"
        ],
        "description": "Query CustomerInvoiceReminder",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerInvoiceReminder"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CustomerInvoiceReminder"
        ],
        "description": "Create CustomerInvoiceReminder",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerInvoiceReminder"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerInvoiceReminder"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "CustomerInvoiceReminder"
      }
    },
    "/invoicereminderrules/{id}": {
      "get": {
        "tags": [
          "CustomerInvoiceReminderRule"
        ],
        "description": "Get CustomerInvoiceReminderRule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerInvoiceReminderRule"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CustomerInvoiceReminderRule"
        ],
        "description": "Update CustomerInvoiceReminderRule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerInvoiceReminderRule"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerInvoiceReminderRule"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "CustomerInvoiceReminderRule"
      },
      "delete": {
        "tags": [
          "CustomerInvoiceReminderRule"
        ],
        "description": "Delete CustomerInvoiceReminderRule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerInvoiceReminderRule"
                }
              }
            }
          }
        }
      }
    },
    "/invoicereminderrules": {
      "get": {
        "tags": [
          "CustomerInvoiceReminderRule"
        ],
        "description": "Query CustomerInvoiceReminderRule",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerInvoiceReminderRule"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CustomerInvoiceReminderRule"
        ],
        "description": "Create CustomerInvoiceReminderRule",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerInvoiceReminderRule"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerInvoiceReminderRule"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "CustomerInvoiceReminderRule"
      }
    },
    "/invoiceremindersettings/{id}": {
      "get": {
        "tags": [
          "CustomerInvoiceReminderSettings"
        ],
        "description": "Get CustomerInvoiceReminderSettings",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerInvoiceReminderSettings"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CustomerInvoiceReminderSettings"
        ],
        "description": "Update CustomerInvoiceReminderSettings",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerInvoiceReminderSettings"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerInvoiceReminderSettings"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "CustomerInvoiceReminderSettings"
      },
      "delete": {
        "tags": [
          "CustomerInvoiceReminderSettings"
        ],
        "description": "Delete CustomerInvoiceReminderSettings",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerInvoiceReminderSettings"
                }
              }
            }
          }
        }
      }
    },
    "/invoiceremindersettings": {
      "get": {
        "tags": [
          "CustomerInvoiceReminderSettings"
        ],
        "description": "Query CustomerInvoiceReminderSettings",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerInvoiceReminderSettings"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CustomerInvoiceReminderSettings"
        ],
        "description": "Create CustomerInvoiceReminderSettings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerInvoiceReminderSettings"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerInvoiceReminderSettings"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "CustomerInvoiceReminderSettings"
      }
    },
    "/debtcollectionautomation/{id}": {
      "get": {
        "tags": [
          "DebtCollectionAutomation"
        ],
        "description": "Get DebtCollectionAutomation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DebtCollectionAutomation"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "DebtCollectionAutomation"
        ],
        "description": "Update DebtCollectionAutomation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DebtCollectionAutomation"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DebtCollectionAutomation"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "DebtCollectionAutomation"
      },
      "delete": {
        "tags": [
          "DebtCollectionAutomation"
        ],
        "description": "Delete DebtCollectionAutomation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DebtCollectionAutomation"
                }
              }
            }
          }
        }
      }
    },
    "/debtcollectionautomation": {
      "get": {
        "tags": [
          "DebtCollectionAutomation"
        ],
        "description": "Query DebtCollectionAutomation",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DebtCollectionAutomation"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "DebtCollectionAutomation"
        ],
        "description": "Create DebtCollectionAutomation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DebtCollectionAutomation"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DebtCollectionAutomation"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "DebtCollectionAutomation"
      }
    },
    "/debtcollectionsettings/{id}": {
      "get": {
        "tags": [
          "DebtCollectionSettings"
        ],
        "description": "Get DebtCollectionSettings",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DebtCollectionSettings"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "DebtCollectionSettings"
        ],
        "description": "Update DebtCollectionSettings",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DebtCollectionSettings"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DebtCollectionSettings"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "DebtCollectionSettings"
      },
      "delete": {
        "tags": [
          "DebtCollectionSettings"
        ],
        "description": "Delete DebtCollectionSettings",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DebtCollectionSettings"
                }
              }
            }
          }
        }
      }
    },
    "/debtcollectionsettings": {
      "get": {
        "tags": [
          "DebtCollectionSettings"
        ],
        "description": "Query DebtCollectionSettings",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DebtCollectionSettings"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "DebtCollectionSettings"
        ],
        "description": "Create DebtCollectionSettings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DebtCollectionSettings"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DebtCollectionSettings"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "DebtCollectionSettings"
      }
    },
    "/invoices?action=regular": {
      "post": {
        "tags": [
          "CustomerInvoice"
        ],
        "description": "regular Action",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerInvoice"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerInvoice"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "entity"
      }
    },
    "/invoices?action=calculate-invoice-summary": {
      "post": {
        "tags": [
          "CustomerInvoice"
        ],
        "description": "calculate-invoice-summary Action",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CustomerInvoiceItem"
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TradeHeaderCalculationSummary"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "invoiceItems"
      }
    },
    "/invoices/{id}?action=calculate-vat-summary": {
      "get": {
        "tags": [
          "CustomerInvoice"
        ],
        "description": "calculate-vat-summary Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VatCalculationSummary"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/invoices?action=calculate-vat-summary": {
      "get": {
        "tags": [
          "CustomerInvoice"
        ],
        "description": "calculate-vat-summary Action",
        "parameters": [
          {
            "name": "InvoiceNumber",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VatCalculationSummary"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/invoices/{id}?action=next": {
      "get": {
        "tags": [
          "CustomerInvoice"
        ],
        "description": "next Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerInvoice"
                }
              }
            }
          }
        }
      }
    },
    "/invoices/{id}?action=previous": {
      "get": {
        "tags": [
          "CustomerInvoice"
        ],
        "description": "previous Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerInvoice"
                }
              }
            }
          }
        }
      }
    },
    "/invoices/{id}?action=create-invoice-journalentrydraft": {
      "put": {
        "tags": [
          "CustomerInvoice"
        ],
        "description": "create-invoice-journalentrydraft Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JournalEntry"
                }
              }
            }
          }
        }
      }
    },
    "/invoices/{id}?action=create-credit-draft-invoice": {
      "put": {
        "tags": [
          "CustomerInvoice"
        ],
        "description": "create-credit-draft-invoice Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerInvoice"
                }
              }
            }
          }
        }
      }
    },
    "/invoices/{id}?action=payInvoice": {
      "put": {
        "tags": [
          "CustomerInvoice"
        ],
        "description": "payInvoice Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoicePaymentData"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JournalEntry"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "data"
      }
    },
    "/invoices/{id}?action=pay-invoice-with-number-series-id": {
      "put": {
        "tags": [
          "CustomerInvoice"
        ],
        "description": "pay-invoice-with-number-series-id Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "numberSeriesID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoicePaymentData"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JournalEntry"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "data"
      }
    },
    "/invoices?action=match-invoices-manual": {
      "put": {
        "tags": [
          "CustomerInvoice"
        ],
        "description": "match-invoices-manual Action",
        "parameters": [
          {
            "name": "paymentID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JournalEntry"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "customerInvoiceIDs"
      }
    },
    "/invoices?action=get-customer-invoice-summary": {
      "get": {
        "tags": [
          "CustomerInvoice"
        ],
        "description": "get-customer-invoice-summary Action",
        "parameters": [
          {
            "name": "odataFilter",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceSummary"
                }
              }
            }
          }
        }
      }
    },
    "/invoices/{id}?action=set-customer-invoice-printstatus": {
      "put": {
        "tags": [
          "CustomerInvoice"
        ],
        "description": "set-customer-invoice-printstatus Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "printStatus",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/invoices/{id}?action=toggle-reminder-stop": {
      "put": {
        "tags": [
          "CustomerInvoice"
        ],
        "description": "toggle-reminder-stop Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/invoices/{id}?action=validate-vipps-user": {
      "get": {
        "tags": [
          "CustomerInvoice"
        ],
        "description": "validate-vipps-user Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/invoices/{id}?action=update-external-status": {
      "put": {
        "tags": [
          "CustomerInvoice"
        ],
        "description": "update-external-status Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "integer"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "newStatus"
      }
    },
    "/invoices?action=get-barnepass-data": {
      "get": {
        "tags": [
          "CustomerInvoice"
        ],
        "description": "get-barnepass-data Action",
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BarnepassOppgave"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/invoices?action=get-customer": {
      "get": {
        "tags": [
          "CustomerInvoice"
        ],
        "description": "get-customer Action",
        "parameters": [
          {
            "name": "orgNumber",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          }
        }
      }
    },
    "/invoices?action=get-customers": {
      "get": {
        "tags": [
          "CustomerInvoice"
        ],
        "description": "get-customers Action",
        "parameters": [
          {
            "name": "customersNrAndName",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Customer"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/invoices/{id}?action=get-payments": {
      "get": {
        "tags": [
          "CustomerInvoice"
        ],
        "description": "get-payments Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvoicePayment"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/invoices/{id}?action=get-aprila-offer": {
      "get": {
        "tags": [
          "CustomerInvoice"
        ],
        "description": "get-aprila-offer Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/invoices/{id}?action=accept-decline-aprila-offer": {
      "post": {
        "tags": [
          "CustomerInvoice"
        ],
        "description": "accept-decline-aprila-offer Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "aprilaOrderId",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "acceptOffer",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderOffer"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "offer"
      }
    },
    "/invoices/{id}?action=fulfill-aprila-offer": {
      "post": {
        "tags": [
          "CustomerInvoice"
        ],
        "description": "fulfill-aprila-offer Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/invoices/{id}?action=invoice": {
      "post": {
        "tags": [
          "CustomerInvoice"
        ],
        "description": "invoice Transition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/invoices/{id}?action=pay": {
      "post": {
        "tags": [
          "CustomerInvoice"
        ],
        "description": "pay Transition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/invoices/{id}": {
      "get": {
        "tags": [
          "CustomerInvoice"
        ],
        "description": "Get CustomerInvoice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerInvoice"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CustomerInvoice"
        ],
        "description": "Update CustomerInvoice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerInvoice"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerInvoice"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "CustomerInvoice"
      },
      "delete": {
        "tags": [
          "CustomerInvoice"
        ],
        "description": "Delete CustomerInvoice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerInvoice"
                }
              }
            }
          }
        }
      }
    },
    "/invoices": {
      "get": {
        "tags": [
          "CustomerInvoice"
        ],
        "description": "Query CustomerInvoice",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerInvoice"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CustomerInvoice"
        ],
        "description": "Create CustomerInvoice",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerInvoice"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerInvoice"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "CustomerInvoice"
      }
    },
    "/invoiceitems/{id}?action=invoice": {
      "post": {
        "tags": [
          "CustomerInvoiceItem"
        ],
        "description": "invoice Transition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/invoiceitems/{id}": {
      "get": {
        "tags": [
          "CustomerInvoiceItem"
        ],
        "description": "Get CustomerInvoiceItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerInvoiceItem"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CustomerInvoiceItem"
        ],
        "description": "Update CustomerInvoiceItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerInvoiceItem"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerInvoiceItem"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "CustomerInvoiceItem"
      },
      "delete": {
        "tags": [
          "CustomerInvoiceItem"
        ],
        "description": "Delete CustomerInvoiceItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerInvoiceItem"
                }
              }
            }
          }
        }
      }
    },
    "/invoiceitems": {
      "get": {
        "tags": [
          "CustomerInvoiceItem"
        ],
        "description": "Query CustomerInvoiceItem",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerInvoiceItem"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CustomerInvoiceItem"
        ],
        "description": "Create CustomerInvoiceItem",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerInvoiceItem"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerInvoiceItem"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "CustomerInvoiceItem"
      }
    },
    "/orders?action=calculate-order-summary": {
      "post": {
        "tags": [
          "CustomerOrder"
        ],
        "description": "calculate-order-summary Action",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CustomerOrderItem"
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TradeHeaderCalculationSummary"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "orderItems"
      }
    },
    "/orders/{id}?action=set-customer-order-printstatus": {
      "put": {
        "tags": [
          "CustomerOrder"
        ],
        "description": "set-customer-order-printstatus Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "printStatus",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/orders/{id}?action=calculate-vat-summary": {
      "get": {
        "tags": [
          "CustomerOrder"
        ],
        "description": "calculate-vat-summary Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VatCalculationSummary"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/orders?action=calculate-vat-summary": {
      "get": {
        "tags": [
          "CustomerOrder"
        ],
        "description": "calculate-vat-summary Action",
        "parameters": [
          {
            "name": "OrderNumber",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VatCalculationSummary"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/orders/{id}?action=next": {
      "get": {
        "tags": [
          "CustomerOrder"
        ],
        "description": "next Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerOrder"
                }
              }
            }
          }
        }
      }
    },
    "/orders/{id}?action=previous": {
      "get": {
        "tags": [
          "CustomerOrder"
        ],
        "description": "previous Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerOrder"
                }
              }
            }
          }
        }
      }
    },
    "/orders/{id}?action=transfer-to-invoice": {
      "put": {
        "tags": [
          "CustomerOrder"
        ],
        "description": "transfer-to-invoice Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "copyFiles",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerOrder"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerInvoice"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "data"
      }
    },
    "/orders/{id}?action=register": {
      "post": {
        "tags": [
          "CustomerOrder"
        ],
        "description": "register Transition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/orders/{id}?action=partlyTransferToInvoice": {
      "post": {
        "tags": [
          "CustomerOrder"
        ],
        "description": "partlyTransferToInvoice Transition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/orders/{id}?action=transferToInvoice": {
      "post": {
        "tags": [
          "CustomerOrder"
        ],
        "description": "transferToInvoice Transition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/orders/{id}?action=complete": {
      "post": {
        "tags": [
          "CustomerOrder"
        ],
        "description": "complete Transition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/orders/{id}": {
      "get": {
        "tags": [
          "CustomerOrder"
        ],
        "description": "Get CustomerOrder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerOrder"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CustomerOrder"
        ],
        "description": "Update CustomerOrder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerOrder"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerOrder"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "CustomerOrder"
      },
      "delete": {
        "tags": [
          "CustomerOrder"
        ],
        "description": "Delete CustomerOrder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerOrder"
                }
              }
            }
          }
        }
      }
    },
    "/orders": {
      "get": {
        "tags": [
          "CustomerOrder"
        ],
        "description": "Query CustomerOrder",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerOrder"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CustomerOrder"
        ],
        "description": "Create CustomerOrder",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerOrder"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerOrder"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "CustomerOrder"
      }
    },
    "/orderitems/{id}?action=register": {
      "post": {
        "tags": [
          "CustomerOrderItem"
        ],
        "description": "register Transition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/orderitems/{id}?action=toInvoice": {
      "post": {
        "tags": [
          "CustomerOrderItem"
        ],
        "description": "toInvoice Transition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/orderitems/{id}?action=complete": {
      "post": {
        "tags": [
          "CustomerOrderItem"
        ],
        "description": "complete Transition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/orderitems/{id}": {
      "get": {
        "tags": [
          "CustomerOrderItem"
        ],
        "description": "Get CustomerOrderItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerOrderItem"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CustomerOrderItem"
        ],
        "description": "Update CustomerOrderItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerOrderItem"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerOrderItem"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "CustomerOrderItem"
      },
      "delete": {
        "tags": [
          "CustomerOrderItem"
        ],
        "description": "Delete CustomerOrderItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerOrderItem"
                }
              }
            }
          }
        }
      }
    },
    "/orderitems": {
      "get": {
        "tags": [
          "CustomerOrderItem"
        ],
        "description": "Query CustomerOrderItem",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerOrderItem"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CustomerOrderItem"
        ],
        "description": "Create CustomerOrderItem",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerOrderItem"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerOrderItem"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "CustomerOrderItem"
      }
    },
    "/paymentinfotype?action=get-paymentinfotype-parts-macros": {
      "get": {
        "tags": [
          "PaymentInfoType"
        ],
        "description": "get-paymentinfotype-parts-macros Action",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/paymentinfotype?action=validate-get-paymentinfo": {
      "get": {
        "tags": [
          "PaymentInfoType"
        ],
        "description": "validate-get-paymentinfo Action",
        "parameters": [
          {
            "name": "customerInvoice",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "paymentInfoTypeID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/paymentinfotype?action=activate-paymentinfotype": {
      "put": {
        "tags": [
          "PaymentInfoType"
        ],
        "description": "activate-paymentinfotype Action",
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/paymentinfotype?action=deactivate-paymentinfotype": {
      "put": {
        "tags": [
          "PaymentInfoType"
        ],
        "description": "deactivate-paymentinfotype Action",
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/paymentinfotype/{id}": {
      "get": {
        "tags": [
          "PaymentInfoType"
        ],
        "description": "Get PaymentInfoType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentInfoType"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PaymentInfoType"
        ],
        "description": "Update PaymentInfoType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInfoType"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentInfoType"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "PaymentInfoType"
      },
      "delete": {
        "tags": [
          "PaymentInfoType"
        ],
        "description": "Delete PaymentInfoType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentInfoType"
                }
              }
            }
          }
        }
      }
    },
    "/paymentinfotype": {
      "get": {
        "tags": [
          "PaymentInfoType"
        ],
        "description": "Query PaymentInfoType",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentInfoType"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PaymentInfoType"
        ],
        "description": "Create PaymentInfoType",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInfoType"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentInfoType"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "PaymentInfoType"
      }
    },
    "/productcategories/{id}": {
      "get": {
        "tags": [
          "ProductCategory"
        ],
        "description": "Get ProductCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductCategory"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProductCategory"
        ],
        "description": "Update ProductCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCategory"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductCategory"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "ProductCategory"
      },
      "delete": {
        "tags": [
          "ProductCategory"
        ],
        "description": "Delete ProductCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductCategory"
                }
              }
            }
          }
        }
      }
    },
    "/productcategories": {
      "get": {
        "tags": [
          "ProductCategory"
        ],
        "description": "Query ProductCategory",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductCategory"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ProductCategory"
        ],
        "description": "Create ProductCategory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCategory"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductCategory"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "ProductCategory"
      }
    },
    "/productcategorylinks/{id}": {
      "get": {
        "tags": [
          "ProductCategoryLink"
        ],
        "description": "Get ProductCategoryLink",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductCategoryLink"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProductCategoryLink"
        ],
        "description": "Update ProductCategoryLink",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCategoryLink"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductCategoryLink"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "ProductCategoryLink"
      },
      "delete": {
        "tags": [
          "ProductCategoryLink"
        ],
        "description": "Delete ProductCategoryLink",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductCategoryLink"
                }
              }
            }
          }
        }
      }
    },
    "/productcategorylinks": {
      "get": {
        "tags": [
          "ProductCategoryLink"
        ],
        "description": "Query ProductCategoryLink",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductCategoryLink"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ProductCategoryLink"
        ],
        "description": "Create ProductCategoryLink",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCategoryLink"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductCategoryLink"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "ProductCategoryLink"
      }
    },
    "/products/{id}?action=transitions": {
      "get": {
        "tags": [
          "Product"
        ],
        "description": "transitions Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/products?action=calculateprice": {
      "post": {
        "tags": [
          "Product"
        ],
        "description": "calculateprice Action",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "product"
      }
    },
    "/products?action=getnewpartname": {
      "get": {
        "tags": [
          "Product"
        ],
        "description": "getnewpartname Action",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/products/{id}?action=first": {
      "get": {
        "tags": [
          "Product"
        ],
        "description": "first Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          }
        }
      }
    },
    "/products/{id}?action=last": {
      "get": {
        "tags": [
          "Product"
        ],
        "description": "last Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          }
        }
      }
    },
    "/products/{id}?action=previous": {
      "get": {
        "tags": [
          "Product"
        ],
        "description": "previous Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          }
        }
      }
    },
    "/products/{id}?action=next": {
      "get": {
        "tags": [
          "Product"
        ],
        "description": "next Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          }
        }
      }
    },
    "/products?action=bulk-save": {
      "put": {
        "tags": [
          "Product"
        ],
        "description": "bulk-save Action",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "products"
      }
    },
    "/products/{id}?action=is-used": {
      "get": {
        "tags": [
          "Product"
        ],
        "description": "is-used Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/products?action=get-barnepass-products": {
      "get": {
        "tags": [
          "Product"
        ],
        "description": "get-barnepass-products Action",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products?action=save-barnepass-products": {
      "put": {
        "tags": [
          "Product"
        ],
        "description": "save-barnepass-products Action",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "integer"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "productIDs"
      }
    },
    "/products/{id}?action=Delete": {
      "post": {
        "tags": [
          "Product"
        ],
        "description": "Delete Transition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/products/{id}?action=Discard": {
      "post": {
        "tags": [
          "Product"
        ],
        "description": "Discard Transition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/products/{id}?action=Reactivate": {
      "post": {
        "tags": [
          "Product"
        ],
        "description": "Reactivate Transition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "tags": [
          "Product"
        ],
        "description": "Get Product",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Product"
        ],
        "description": "Update Product",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Product"
      },
      "delete": {
        "tags": [
          "Product"
        ],
        "description": "Delete Product",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          }
        }
      }
    },
    "/products": {
      "get": {
        "tags": [
          "Product"
        ],
        "description": "Query Product",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Product"
        ],
        "description": "Create Product",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Product"
      }
    },
    "/quotes?action=calculate-quote-summary": {
      "post": {
        "tags": [
          "CustomerQuote"
        ],
        "description": "calculate-quote-summary Action",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CustomerQuoteItem"
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TradeHeaderCalculationSummary"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "quoteItems"
      }
    },
    "/quotes/{id}?action=calculate-vat-summary": {
      "get": {
        "tags": [
          "CustomerQuote"
        ],
        "description": "calculate-vat-summary Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VatCalculationSummary"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/quotes?action=calculate-vat-summary": {
      "get": {
        "tags": [
          "CustomerQuote"
        ],
        "description": "calculate-vat-summary Action",
        "parameters": [
          {
            "name": "QuoteNumber",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VatCalculationSummary"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/quotes/{id}?action=next": {
      "get": {
        "tags": [
          "CustomerQuote"
        ],
        "description": "next Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerQuote"
                }
              }
            }
          }
        }
      }
    },
    "/quotes/{id}?action=set-customer-quote-printstatus": {
      "put": {
        "tags": [
          "CustomerQuote"
        ],
        "description": "set-customer-quote-printstatus Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "printStatus",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/quotes/{id}?action=previous": {
      "get": {
        "tags": [
          "CustomerQuote"
        ],
        "description": "previous Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerQuote"
                }
              }
            }
          }
        }
      }
    },
    "/quotes/{id}?action=register": {
      "post": {
        "tags": [
          "CustomerQuote"
        ],
        "description": "register Transition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/quotes/{id}?action=shipToCustomer": {
      "post": {
        "tags": [
          "CustomerQuote"
        ],
        "description": "shipToCustomer Transition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/quotes/{id}?action=customerAccept": {
      "post": {
        "tags": [
          "CustomerQuote"
        ],
        "description": "customerAccept Transition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/quotes/{id}?action=toOrder": {
      "post": {
        "tags": [
          "CustomerQuote"
        ],
        "description": "toOrder Transition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/quotes/{id}?action=toInvoice": {
      "post": {
        "tags": [
          "CustomerQuote"
        ],
        "description": "toInvoice Transition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/quotes/{id}?action=complete": {
      "post": {
        "tags": [
          "CustomerQuote"
        ],
        "description": "complete Transition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/quotes/{id}": {
      "get": {
        "tags": [
          "CustomerQuote"
        ],
        "description": "Get CustomerQuote",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerQuote"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CustomerQuote"
        ],
        "description": "Update CustomerQuote",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerQuote"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerQuote"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "CustomerQuote"
      },
      "delete": {
        "tags": [
          "CustomerQuote"
        ],
        "description": "Delete CustomerQuote",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerQuote"
                }
              }
            }
          }
        }
      }
    },
    "/quotes": {
      "get": {
        "tags": [
          "CustomerQuote"
        ],
        "description": "Query CustomerQuote",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerQuote"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CustomerQuote"
        ],
        "description": "Create CustomerQuote",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerQuote"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerQuote"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "CustomerQuote"
      }
    },
    "/quoteitems/{id}": {
      "get": {
        "tags": [
          "CustomerQuoteItem"
        ],
        "description": "Get CustomerQuoteItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerQuoteItem"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CustomerQuoteItem"
        ],
        "description": "Update CustomerQuoteItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerQuoteItem"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerQuoteItem"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "CustomerQuoteItem"
      },
      "delete": {
        "tags": [
          "CustomerQuoteItem"
        ],
        "description": "Delete CustomerQuoteItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerQuoteItem"
                }
              }
            }
          }
        }
      }
    },
    "/quoteitems": {
      "get": {
        "tags": [
          "CustomerQuoteItem"
        ],
        "description": "Query CustomerQuoteItem",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerQuoteItem"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CustomerQuoteItem"
        ],
        "description": "Create CustomerQuoteItem",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerQuoteItem"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerQuoteItem"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "CustomerQuoteItem"
      }
    },
    "/recurringinvoices/{id}?action=execute": {
      "post": {
        "tags": [
          "RecurringInvoice"
        ],
        "description": "execute Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecurringInvoiceLog"
                }
              }
            }
          }
        }
      }
    },
    "/recurringinvoices/{id}?action=activate": {
      "post": {
        "tags": [
          "RecurringInvoice"
        ],
        "description": "activate Transition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/recurringinvoices/{id}?action=deactivate": {
      "post": {
        "tags": [
          "RecurringInvoice"
        ],
        "description": "deactivate Transition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/recurringinvoices/{id}": {
      "get": {
        "tags": [
          "RecurringInvoice"
        ],
        "description": "Get RecurringInvoice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecurringInvoice"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "RecurringInvoice"
        ],
        "description": "Update RecurringInvoice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecurringInvoice"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecurringInvoice"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "RecurringInvoice"
      },
      "delete": {
        "tags": [
          "RecurringInvoice"
        ],
        "description": "Delete RecurringInvoice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecurringInvoice"
                }
              }
            }
          }
        }
      }
    },
    "/recurringinvoices": {
      "get": {
        "tags": [
          "RecurringInvoice"
        ],
        "description": "Query RecurringInvoice",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecurringInvoice"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "RecurringInvoice"
        ],
        "description": "Create RecurringInvoice",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecurringInvoice"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecurringInvoice"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "RecurringInvoice"
      }
    },
    "/recurringinvoiceitems/{id}": {
      "get": {
        "tags": [
          "RecurringInvoiceItem"
        ],
        "description": "Get RecurringInvoiceItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecurringInvoiceItem"
                }
              }
            }
          }
        }
      }
    },
    "/recurringinvoiceitems": {
      "get": {
        "tags": [
          "RecurringInvoiceItem"
        ],
        "description": "Query RecurringInvoiceItem",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecurringInvoiceItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/RecurringInvoicelogs/{id}": {
      "get": {
        "tags": [
          "RecurringInvoiceLog"
        ],
        "description": "Get RecurringInvoiceLog",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecurringInvoiceLog"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "RecurringInvoiceLog"
        ],
        "description": "Delete RecurringInvoiceLog",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecurringInvoiceLog"
                }
              }
            }
          }
        }
      }
    },
    "/RecurringInvoicelogs": {
      "get": {
        "tags": [
          "RecurringInvoiceLog"
        ],
        "description": "Query RecurringInvoiceLog",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecurringInvoiceLog"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/sellers/{id}": {
      "get": {
        "tags": [
          "Seller"
        ],
        "description": "Get Seller",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Seller"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Seller"
        ],
        "description": "Update Seller",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Seller"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Seller"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Seller"
      },
      "delete": {
        "tags": [
          "Seller"
        ],
        "description": "Delete Seller",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Seller"
                }
              }
            }
          }
        }
      }
    },
    "/sellers": {
      "get": {
        "tags": [
          "Seller"
        ],
        "description": "Query Seller",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Seller"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Seller"
        ],
        "description": "Create Seller",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Seller"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Seller"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Seller"
      }
    },
    "/sellerlinks/{id}": {
      "get": {
        "tags": [
          "SellerLink"
        ],
        "description": "Get SellerLink",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SellerLink"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "SellerLink"
        ],
        "description": "Update SellerLink",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SellerLink"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SellerLink"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "SellerLink"
      },
      "delete": {
        "tags": [
          "SellerLink"
        ],
        "description": "Delete SellerLink",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SellerLink"
                }
              }
            }
          }
        }
      }
    },
    "/sellerlinks": {
      "get": {
        "tags": [
          "SellerLink"
        ],
        "description": "Query SellerLink",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SellerLink"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "SellerLink"
        ],
        "description": "Create SellerLink",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SellerLink"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SellerLink"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "SellerLink"
      }
    },
    "/subcompanies/{id}": {
      "get": {
        "tags": [
          "SubCompany"
        ],
        "description": "Get SubCompany",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubCompany"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "SubCompany"
        ],
        "description": "Update SubCompany",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubCompany"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubCompany"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "SubCompany"
      },
      "delete": {
        "tags": [
          "SubCompany"
        ],
        "description": "Delete SubCompany",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubCompany"
                }
              }
            }
          }
        }
      }
    },
    "/subcompanies": {
      "get": {
        "tags": [
          "SubCompany"
        ],
        "description": "Query SubCompany",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubCompany"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "SubCompany"
        ],
        "description": "Create SubCompany",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubCompany"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubCompany"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "SubCompany"
      }
    },
    "/contacts/{contactid}/addresses/{id}": {
      "get": {
        "tags": [
          "Address"
        ],
        "description": "Get Address",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Address"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Address"
        ],
        "description": "Update Address",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Address"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Address"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Address"
      },
      "delete": {
        "tags": [
          "Address"
        ],
        "description": "Delete Address",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Address"
                }
              }
            }
          }
        }
      }
    },
    "/contacts/{contactid}/addresses": {
      "get": {
        "tags": [
          "Address"
        ],
        "description": "Query Address",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Address"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Address"
        ],
        "description": "Create Address",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Address"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Address"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Address"
      }
    },
    "/suppliers/{id}?action=next": {
      "get": {
        "tags": [
          "Supplier"
        ],
        "description": "next Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Supplier"
                }
              }
            }
          }
        }
      }
    },
    "/suppliers/{id}?action=previous": {
      "get": {
        "tags": [
          "Supplier"
        ],
        "description": "previous Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Supplier"
                }
              }
            }
          }
        }
      }
    },
    "/suppliers?action=activate": {
      "put": {
        "tags": [
          "Supplier"
        ],
        "description": "activate Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/suppliers?action=deactivate": {
      "put": {
        "tags": [
          "Supplier"
        ],
        "description": "deactivate Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/suppliers?action=block": {
      "put": {
        "tags": [
          "Supplier"
        ],
        "description": "block Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/suppliers?action=unblock": {
      "put": {
        "tags": [
          "Supplier"
        ],
        "description": "unblock Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/suppliers?action=delete": {
      "put": {
        "tags": [
          "Supplier"
        ],
        "description": "delete Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/suppliers?action=bulk-save": {
      "put": {
        "tags": [
          "Supplier"
        ],
        "description": "bulk-save Action",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Supplier"
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "suppliers"
      }
    },
    "/suppliers/{id}": {
      "get": {
        "tags": [
          "Supplier"
        ],
        "description": "Get Supplier",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Supplier"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Supplier"
        ],
        "description": "Update Supplier",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Supplier"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Supplier"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Supplier"
      },
      "delete": {
        "tags": [
          "Supplier"
        ],
        "description": "Delete Supplier",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Supplier"
                }
              }
            }
          }
        }
      }
    },
    "/suppliers": {
      "get": {
        "tags": [
          "Supplier"
        ],
        "description": "Query Supplier",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Supplier"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Supplier"
        ],
        "description": "Create Supplier",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Supplier"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Supplier"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Supplier"
      }
    },
    "/terms?action=get-payment-terms": {
      "get": {
        "tags": [
          "Terms"
        ],
        "description": "get-payment-terms Action",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Terms"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/terms?action=get-delivery-terms": {
      "get": {
        "tags": [
          "Terms"
        ],
        "description": "get-delivery-terms Action",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Terms"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/terms/{id}": {
      "get": {
        "tags": [
          "Terms"
        ],
        "description": "Get Terms",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Terms"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Terms"
        ],
        "description": "Update Terms",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Terms"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Terms"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Terms"
      },
      "delete": {
        "tags": [
          "Terms"
        ],
        "description": "Delete Terms",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Terms"
                }
              }
            }
          }
        }
      }
    },
    "/terms": {
      "get": {
        "tags": [
          "Terms"
        ],
        "description": "Query Terms",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Terms"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Terms"
        ],
        "description": "Create Terms",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Terms"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Terms"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Terms"
      }
    },
    "/amelding/{id}?action=get-amelding": {
      "get": {
        "tags": [
          "AmeldingData"
        ],
        "description": "get-amelding Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/amelding/{id}?action=get-feedback": {
      "get": {
        "tags": [
          "AmeldingData"
        ],
        "description": "get-feedback Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/amelding/{id}?action=send": {
      "put": {
        "tags": [
          "AmeldingData"
        ],
        "description": "send Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AmeldingData"
                }
              }
            }
          }
        }
      }
    },
    "/amelding/{id}?action=feedback": {
      "put": {
        "tags": [
          "AmeldingData"
        ],
        "description": "feedback Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AmeldingData"
                }
              }
            }
          }
        }
      }
    },
    "/amelding?action=amelding-feedback-in-period": {
      "get": {
        "tags": [
          "AmeldingData"
        ],
        "description": "amelding-feedback-in-period Action",
        "parameters": [
          {
            "name": "fromPeriod",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "toPeriod",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "year",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/amelding?action=payrollruns-in-amelding-period": {
      "get": {
        "tags": [
          "AmeldingData"
        ],
        "description": "payrollruns-in-amelding-period Action",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/amelding/{id}?action=pay-aga-tax": {
      "post": {
        "tags": [
          "AmeldingData"
        ],
        "description": "pay-aga-tax Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PayAgaTaxDTO"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "dto"
      }
    },
    "/amelding/{id}?action=rebuild-logs": {
      "get": {
        "tags": [
          "AmeldingData"
        ],
        "description": "rebuild-logs Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/amelding/{id}": {
      "get": {
        "tags": [
          "AmeldingData"
        ],
        "description": "Get AmeldingData",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AmeldingData"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AmeldingData"
        ],
        "description": "Delete AmeldingData",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AmeldingData"
                }
              }
            }
          }
        }
      }
    },
    "/amelding": {
      "get": {
        "tags": [
          "AmeldingData"
        ],
        "description": "Query AmeldingData",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AmeldingData"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "AmeldingData"
        ],
        "description": "Create AmeldingData",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AmeldingData"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AmeldingData"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "AmeldingData"
      }
    },
    "/ameldingsums/{id}?action=get-sumup": {
      "get": {
        "tags": [
          "AmeldingSumUp"
        ],
        "description": "get-sumup Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AmeldingSumUp"
                }
              }
            }
          }
        }
      }
    },
    "/ameldingsums/{id}": {},
    "/ameldingsums": {},
    "/annual-statement?action=inselection": {
      "get": {
        "tags": [
          "AnnualStatement"
        ],
        "description": "inselection Action",
        "parameters": [
          {
            "name": "employees",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "year",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/annual-statement?action=email": {
      "put": {
        "tags": [
          "AnnualStatement"
        ],
        "description": "email Action",
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnnualStatementReportSetup"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "setup"
      }
    },
    "/annual-statement?action=generate-zip": {
      "put": {
        "tags": [
          "AnnualStatement"
        ],
        "description": "generate-zip Action",
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/annual-statement/{id}": {},
    "/annual-statement": {},
    "/basicamounts/{id}": {
      "get": {
        "tags": [
          "BasicAmount"
        ],
        "description": "Get BasicAmount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicAmount"
                }
              }
            }
          }
        }
      }
    },
    "/basicamounts": {
      "get": {
        "tags": [
          "BasicAmount"
        ],
        "description": "Query BasicAmount",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BasicAmount"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/companysalary/{id}": {
      "get": {
        "tags": [
          "CompanySalary"
        ],
        "description": "Get CompanySalary",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanySalary"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CompanySalary"
        ],
        "description": "Update CompanySalary",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanySalary"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanySalary"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "CompanySalary"
      },
      "delete": {
        "tags": [
          "CompanySalary"
        ],
        "description": "Delete CompanySalary",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanySalary"
                }
              }
            }
          }
        }
      }
    },
    "/companysalary": {
      "get": {
        "tags": [
          "CompanySalary"
        ],
        "description": "Query CompanySalary",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanySalary"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CompanySalary"
        ],
        "description": "Create CompanySalary",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanySalary"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanySalary"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "CompanySalary"
      }
    },
    "/companyvacationrates?action=current": {
      "get": {
        "tags": [
          "CompanyVacationRate"
        ],
        "description": "current Action",
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyVacationRate"
                }
              }
            }
          }
        }
      }
    },
    "/companyvacationrates/{id}": {
      "get": {
        "tags": [
          "CompanyVacationRate"
        ],
        "description": "Get CompanyVacationRate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyVacationRate"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CompanyVacationRate"
        ],
        "description": "Update CompanyVacationRate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyVacationRate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyVacationRate"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "CompanyVacationRate"
      },
      "delete": {
        "tags": [
          "CompanyVacationRate"
        ],
        "description": "Delete CompanyVacationRate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyVacationRate"
                }
              }
            }
          }
        }
      }
    },
    "/companyvacationrates": {
      "get": {
        "tags": [
          "CompanyVacationRate"
        ],
        "description": "Query CompanyVacationRate",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyVacationRate"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CompanyVacationRate"
        ],
        "description": "Create CompanyVacationRate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyVacationRate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyVacationRate"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "CompanyVacationRate"
      }
    },
    "/employeecategories/{id}?action=employeesoncategory": {
      "get": {
        "tags": [
          "EmployeeCategory"
        ],
        "description": "employeesoncategory Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/employeecategories/{id}?action=payrollrunsoncategory": {
      "get": {
        "tags": [
          "EmployeeCategory"
        ],
        "description": "payrollrunsoncategory Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/employeecategories/{id}": {
      "get": {
        "tags": [
          "EmployeeCategory"
        ],
        "description": "Get EmployeeCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeCategory"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "EmployeeCategory"
        ],
        "description": "Update EmployeeCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeCategory"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeCategory"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "EmployeeCategory"
      },
      "delete": {
        "tags": [
          "EmployeeCategory"
        ],
        "description": "Delete EmployeeCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeCategory"
                }
              }
            }
          }
        }
      }
    },
    "/employeecategories": {
      "get": {
        "tags": [
          "EmployeeCategory"
        ],
        "description": "Query EmployeeCategory",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeCategory"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "EmployeeCategory"
        ],
        "description": "Create EmployeeCategory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeCategory"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeCategory"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "EmployeeCategory"
      }
    },
    "/employees/{empno}/category/{id}": {
      "get": {
        "tags": [
          "EmployeeCategory"
        ],
        "description": "Get EmployeeCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeCategory"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "EmployeeCategory"
        ],
        "description": "Update EmployeeCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeCategory"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeCategory"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "EmployeeCategory"
      },
      "delete": {
        "tags": [
          "EmployeeCategory"
        ],
        "description": "Delete EmployeeCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeCategory"
                }
              }
            }
          }
        }
      }
    },
    "/employees/{empno}/category": {
      "get": {
        "tags": [
          "EmployeeCategory"
        ],
        "description": "Query EmployeeCategory",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeCategory"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "EmployeeCategory"
        ],
        "description": "Create EmployeeCategory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeCategory"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeCategory"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "EmployeeCategory"
      }
    },
    "/payrollrun/{runid}/category/{id}": {
      "get": {
        "tags": [
          "EmployeeCategory"
        ],
        "description": "Get EmployeeCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeCategory"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "EmployeeCategory"
        ],
        "description": "Update EmployeeCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeCategory"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeCategory"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "EmployeeCategory"
      },
      "delete": {
        "tags": [
          "EmployeeCategory"
        ],
        "description": "Delete EmployeeCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeCategory"
                }
              }
            }
          }
        }
      }
    },
    "/payrollrun/{runid}/category": {
      "get": {
        "tags": [
          "EmployeeCategory"
        ],
        "description": "Query EmployeeCategory",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeCategory"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "EmployeeCategory"
        ],
        "description": "Create EmployeeCategory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeCategory"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeCategory"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "EmployeeCategory"
      }
    },
    "/employees/{id}?action=vacationpay-create": {
      "put": {
        "tags": [
          "Employee"
        ],
        "description": "vacationpay-create Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "year",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "sixth",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "payrollRunID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/employees/{id}?action=vacationpay-closure": {
      "put": {
        "tags": [
          "Employee"
        ],
        "description": "vacationpay-closure Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sixth",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "payrollRunID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/employees/{id}?action=next": {
      "get": {
        "tags": [
          "Employee"
        ],
        "description": "next Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Employee"
                }
              }
            }
          }
        }
      }
    },
    "/employees/{id}?action=previous": {
      "get": {
        "tags": [
          "Employee"
        ],
        "description": "previous Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Employee"
                }
              }
            }
          }
        }
      }
    },
    "/employees?action=read-tax-cards": {
      "get": {
        "tags": [
          "Employee"
        ],
        "description": "read-tax-cards Action",
        "parameters": [
          {
            "name": "receiptID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxCardReadStatus"
                }
              }
            }
          }
        }
      }
    },
    "/employees/{id}?action=setcategories": {
      "put": {
        "tags": [
          "Employee"
        ],
        "description": "setcategories Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "categories",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/employees?action=emps-on-transes": {
      "get": {
        "tags": [
          "Employee"
        ],
        "description": "emps-on-transes Action",
        "parameters": [
          {
            "name": "status",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "expand",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Employee"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/employees/{id}": {
      "get": {
        "tags": [
          "Employee"
        ],
        "description": "Get Employee",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Employee"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Employee"
        ],
        "description": "Update Employee",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Employee"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Employee"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Employee"
      },
      "delete": {
        "tags": [
          "Employee"
        ],
        "description": "Delete Employee",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Employee"
                }
              }
            }
          }
        }
      }
    },
    "/employees": {
      "get": {
        "tags": [
          "Employee"
        ],
        "description": "Query Employee",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Employee"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Employee"
        ],
        "description": "Create Employee",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Employee"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Employee"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Employee"
      }
    },
    "/EmployeeLeave/{id}": {
      "get": {
        "tags": [
          "EmployeeLeave"
        ],
        "description": "Get EmployeeLeave",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeLeave"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "EmployeeLeave"
        ],
        "description": "Update EmployeeLeave",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeLeave"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeLeave"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "EmployeeLeave"
      },
      "delete": {
        "tags": [
          "EmployeeLeave"
        ],
        "description": "Delete EmployeeLeave",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeLeave"
                }
              }
            }
          }
        }
      }
    },
    "/EmployeeLeave": {
      "get": {
        "tags": [
          "EmployeeLeave"
        ],
        "description": "Query EmployeeLeave",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeLeave"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "EmployeeLeave"
        ],
        "description": "Create EmployeeLeave",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeLeave"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeLeave"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "EmployeeLeave"
      }
    },
    "/taxcards/{id}": {
      "get": {
        "tags": [
          "EmployeeTaxCard"
        ],
        "description": "Get EmployeeTaxCard",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeTaxCard"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "EmployeeTaxCard"
        ],
        "description": "Update EmployeeTaxCard",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeTaxCard"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeTaxCard"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "EmployeeTaxCard"
      },
      "delete": {
        "tags": [
          "EmployeeTaxCard"
        ],
        "description": "Delete EmployeeTaxCard",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeTaxCard"
                }
              }
            }
          }
        }
      }
    },
    "/taxcards": {
      "get": {
        "tags": [
          "EmployeeTaxCard"
        ],
        "description": "Query EmployeeTaxCard",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeTaxCard"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "EmployeeTaxCard"
        ],
        "description": "Create EmployeeTaxCard",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeTaxCard"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeTaxCard"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "EmployeeTaxCard"
      }
    },
    "/employments/{id}?action=history": {
      "get": {
        "tags": [
          "Employment"
        ],
        "description": "history Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmploymentHistoryRecord"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/employments/{id}": {
      "get": {
        "tags": [
          "Employment"
        ],
        "description": "Get Employment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Employment"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Employment"
        ],
        "description": "Update Employment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Employment"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Employment"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Employment"
      },
      "delete": {
        "tags": [
          "Employment"
        ],
        "description": "Delete Employment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Employment"
                }
              }
            }
          }
        }
      }
    },
    "/employments": {
      "get": {
        "tags": [
          "Employment"
        ],
        "description": "Query Employment",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Employment"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Employment"
        ],
        "description": "Create Employment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Employment"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Employment"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Employment"
      }
    },
    "/grants/{id}": {
      "get": {
        "tags": [
          "Grant"
        ],
        "description": "Get Grant",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Grant"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Grant"
        ],
        "description": "Update Grant",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Grant"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Grant"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Grant"
      },
      "delete": {
        "tags": [
          "Grant"
        ],
        "description": "Delete Grant",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Grant"
                }
              }
            }
          }
        }
      }
    },
    "/grants": {
      "get": {
        "tags": [
          "Grant"
        ],
        "description": "Query Grant",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Grant"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Grant"
        ],
        "description": "Create Grant",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Grant"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Grant"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Grant"
      }
    },
    "/mysalarytranses?action=getall": {
      "get": {
        "tags": [
          "Object"
        ],
        "description": "getall Action",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/mysalarytranses/{id}": {},
    "/mysalarytranses": {},
    "/otpexportwagetypes/{id}": {
      "get": {
        "tags": [
          "OtpExportWagetype"
        ],
        "description": "Get OtpExportWagetype",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OtpExportWagetype"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "OtpExportWagetype"
        ],
        "description": "Update OtpExportWagetype",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OtpExportWagetype"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OtpExportWagetype"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "OtpExportWagetype"
      },
      "delete": {
        "tags": [
          "OtpExportWagetype"
        ],
        "description": "Delete OtpExportWagetype",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OtpExportWagetype"
                }
              }
            }
          }
        }
      }
    },
    "/otpexportwagetypes": {
      "get": {
        "tags": [
          "OtpExportWagetype"
        ],
        "description": "Query OtpExportWagetype",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OtpExportWagetype"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "OtpExportWagetype"
        ],
        "description": "Create OtpExportWagetype",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OtpExportWagetype"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OtpExportWagetype"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "OtpExportWagetype"
      }
    },
    "/paycheck?action=all": {
      "get": {
        "tags": [
          "Paycheck"
        ],
        "description": "all Action",
        "parameters": [
          {
            "name": "payrollID",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "grouped",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/paycheck?action=fromto": {
      "get": {
        "tags": [
          "Paycheck"
        ],
        "description": "fromto Action",
        "parameters": [
          {
            "name": "payrollID",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "empnoFrom",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "empnoTo",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "grouped",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/paycheck?action=inselection": {
      "get": {
        "tags": [
          "Paycheck"
        ],
        "description": "inselection Action",
        "parameters": [
          {
            "name": "payrollID",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "employees",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "grouped",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/paycheck?action=regeneratezip": {
      "put": {
        "tags": [
          "Paycheck"
        ],
        "description": "regeneratezip Action",
        "parameters": [
          {
            "name": "payrollID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/paycheck/{id}": {
      "get": {
        "tags": [
          "Paycheck"
        ],
        "description": "Get Paycheck",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Paycheck"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Paycheck"
        ],
        "description": "Update Paycheck",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Paycheck"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Paycheck"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Paycheck"
      },
      "delete": {
        "tags": [
          "Paycheck"
        ],
        "description": "Delete Paycheck",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Paycheck"
                }
              }
            }
          }
        }
      }
    },
    "/paycheck": {
      "get": {
        "tags": [
          "Paycheck"
        ],
        "description": "Query Paycheck",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Paycheck"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Paycheck"
        ],
        "description": "Create Paycheck",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Paycheck"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Paycheck"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Paycheck"
      }
    },
    "/payrollrun?action=PayrollJob": {
      "post": {
        "tags": [
          "PayrollRun"
        ],
        "description": "PayrollJob Action",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PayrollRun"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "entity"
      }
    },
    "/payrollrun/{id}?action=calculatejob": {
      "put": {
        "tags": [
          "PayrollRun"
        ],
        "description": "calculatejob Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/payrollrun/{id}?action=calculate": {
      "put": {
        "tags": [
          "PayrollRun"
        ],
        "description": "calculate Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/payrollrun/{id}?action=postingsummarydraft": {
      "get": {
        "tags": [
          "PayrollRun"
        ],
        "description": "postingsummarydraft Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostingSummaryDraft"
                }
              }
            }
          }
        }
      }
    },
    "/payrollrun/{id}?action=rebuildpostings": {
      "put": {
        "tags": [
          "PayrollRun"
        ],
        "description": "rebuildpostings Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "bookingType",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "forceRegeneration",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostingSummaryDraft"
                }
              }
            }
          }
        }
      }
    },
    "/payrollrun/{id}?action=calculateonemp": {
      "put": {
        "tags": [
          "PayrollRun"
        ],
        "description": "calculateonemp Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "empID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/payrollrun?action=calculateonemp": {
      "put": {
        "tags": [
          "PayrollRun"
        ],
        "description": "calculateonemp Action",
        "parameters": [
          {
            "name": "empID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/payrollrun/{id}?action=recalculatetax": {
      "put": {
        "tags": [
          "PayrollRun"
        ],
        "description": "recalculatetax Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/payrollrun/{id}?action=control": {
      "put": {
        "tags": [
          "PayrollRun"
        ],
        "description": "control Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/payrollrun/{id}?action=paymentlist": {
      "get": {
        "tags": [
          "PayrollRun"
        ],
        "description": "paymentlist Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalaryTransactionPay"
                }
              }
            }
          }
        }
      }
    },
    "/payrollrun/{id}?action=sendpaymentlist": {
      "post": {
        "tags": [
          "PayrollRun"
        ],
        "description": "sendpaymentlist Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/payrollrun/{id}?action=postingsummary": {
      "get": {
        "tags": [
          "PayrollRun"
        ],
        "description": "postingsummary Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "bookingType",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "refresh",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostingSummary"
                }
              }
            }
          }
        }
      }
    },
    "/payrollrun/{id}?action=postingsummary-lines": {
      "get": {
        "tags": [
          "PayrollRun"
        ],
        "description": "postingsummary-lines Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "bookingType",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "refresh",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JournalEntryLine"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/payrollrun/{id}?action=book": {
      "put": {
        "tags": [
          "PayrollRun"
        ],
        "description": "book Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "accountingDate",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "numberseriesID",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "bookingType",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "refresh",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JournalEntryLine"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/payrollrun/{id}?action=rebuildBalances": {
      "put": {
        "tags": [
          "PayrollRun"
        ],
        "description": "rebuildBalances Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/payrollrun/{id}?action=resetrun": {
      "put": {
        "tags": [
          "PayrollRun"
        ],
        "description": "resetrun Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/payrollrun/{id}?action=next": {
      "get": {
        "tags": [
          "PayrollRun"
        ],
        "description": "next Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "RunID",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "expand",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayrollRun"
                }
              }
            }
          }
        }
      }
    },
    "/payrollrun/{id}?action=previous": {
      "get": {
        "tags": [
          "PayrollRun"
        ],
        "description": "previous Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "RunID",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "expand",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayrollRun"
                }
              }
            }
          }
        }
      }
    },
    "/payrollrun/{id}?action=latest": {
      "get": {
        "tags": [
          "PayrollRun"
        ],
        "description": "latest Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayrollRun"
                }
              }
            }
          }
        }
      }
    },
    "/payrollrun/{id}?action=latestperiod": {
      "get": {
        "tags": [
          "PayrollRun"
        ],
        "description": "latestperiod Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "currYear",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          }
        }
      }
    },
    "/payrollrun/{id}?action=vacationpay-list": {
      "get": {
        "tags": [
          "PayrollRun"
        ],
        "description": "vacationpay-list Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "year",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "lastyear",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "filter",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "showAll",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/payrollrun/{id}?action=vacationpay-from-emp-list": {
      "put": {
        "tags": [
          "PayrollRun"
        ],
        "description": "vacationpay-from-emp-list Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "year",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "SplitOnSixth",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "employeeIDs"
      }
    },
    "/payrollrun/{id}?action=vacationpay-from-vacationpayinfo-list": {
      "put": {
        "tags": [
          "PayrollRun"
        ],
        "description": "vacationpay-from-vacationpayinfo-list Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "year",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "payList"
      }
    },
    "/payrollrun/{id}?action=vacationpay-closure": {
      "put": {
        "tags": [
          "PayrollRun"
        ],
        "description": "vacationpay-closure Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "year",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "SplitOnSixth",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "employeeIDs"
      }
    },
    "/payrollrun?action=rebuild": {
      "put": {
        "tags": [
          "PayrollRun"
        ],
        "description": "rebuild Action",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/payrollrun/{id}?action=employeesonrun": {
      "get": {
        "tags": [
          "PayrollRun"
        ],
        "description": "employeesonrun Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/payrollrun/{id}?action=setcategories": {
      "put": {
        "tags": [
          "PayrollRun"
        ],
        "description": "setcategories Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "categories"
      }
    },
    "/payrollrun/{id}?action=email-paychecks": {
      "put": {
        "tags": [
          "PayrollRun"
        ],
        "description": "email-paychecks Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "grouped",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaycheckReportSetup"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "setup"
      }
    },
    "/payrollrun/{id}?action=payments-on-runs": {
      "get": {
        "tags": [
          "PayrollRun"
        ],
        "description": "payments-on-runs Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/payrollrun/{id}?action=time-to-salary-selection": {
      "get": {
        "tags": [
          "PayrollRun"
        ],
        "description": "time-to-salary-selection Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "toDate",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkItemToSalary"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/payrollrun/{id}?action=work-items-to-transes": {
      "put": {
        "tags": [
          "PayrollRun"
        ],
        "description": "work-items-to-transes Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "integer"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalaryTransaction"
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "workItemIDs"
      }
    },
    "/payrollrun?action=otp-export": {
      "get": {
        "tags": [
          "PayrollRun"
        ],
        "description": "otp-export Action",
        "parameters": [
          {
            "name": "runs",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "month",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "year",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "asXml",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/payrollrun/{id}": {
      "get": {
        "tags": [
          "PayrollRun"
        ],
        "description": "Get PayrollRun",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayrollRun"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PayrollRun"
        ],
        "description": "Update PayrollRun",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PayrollRun"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayrollRun"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "PayrollRun"
      },
      "delete": {
        "tags": [
          "PayrollRun"
        ],
        "description": "Delete PayrollRun",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayrollRun"
                }
              }
            }
          }
        }
      }
    },
    "/payrollrun": {
      "get": {
        "tags": [
          "PayrollRun"
        ],
        "description": "Query PayrollRun",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PayrollRun"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PayrollRun"
        ],
        "description": "Create PayrollRun",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PayrollRun"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayrollRun"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "PayrollRun"
      }
    },
    "/pensionschemes/{id}": {
      "get": {
        "tags": [
          "PensionScheme"
        ],
        "description": "Get PensionScheme",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PensionScheme"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PensionScheme"
        ],
        "description": "Update PensionScheme",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PensionScheme"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PensionScheme"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "PensionScheme"
      },
      "delete": {
        "tags": [
          "PensionScheme"
        ],
        "description": "Delete PensionScheme",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PensionScheme"
                }
              }
            }
          }
        }
      }
    },
    "/pensionschemes": {
      "get": {
        "tags": [
          "PensionScheme"
        ],
        "description": "Query PensionScheme",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PensionScheme"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PensionScheme"
        ],
        "description": "Create PensionScheme",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PensionScheme"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PensionScheme"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "PensionScheme"
      }
    },
    "/pensionschemesuppliers/{id}": {
      "get": {
        "tags": [
          "PensionSchemeSupplier"
        ],
        "description": "Get PensionSchemeSupplier",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PensionSchemeSupplier"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PensionSchemeSupplier"
        ],
        "description": "Update PensionSchemeSupplier",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PensionSchemeSupplier"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PensionSchemeSupplier"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "PensionSchemeSupplier"
      },
      "delete": {
        "tags": [
          "PensionSchemeSupplier"
        ],
        "description": "Delete PensionSchemeSupplier",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PensionSchemeSupplier"
                }
              }
            }
          }
        }
      }
    },
    "/pensionschemesuppliers": {
      "get": {
        "tags": [
          "PensionSchemeSupplier"
        ],
        "description": "Query PensionSchemeSupplier",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PensionSchemeSupplier"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PensionSchemeSupplier"
        ],
        "description": "Create PensionSchemeSupplier",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PensionSchemeSupplier"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PensionSchemeSupplier"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "PensionSchemeSupplier"
      }
    },
    "/reconciliation?action=from-to": {
      "get": {
        "tags": [
          "Reconciliation"
        ],
        "description": "from-to Action",
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "fromMonth",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "toMonth",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "includeNotPayed",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "onlyBooked",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reconciliation"
                }
              }
            }
          }
        }
      }
    },
    "/reconciliation/{id}": {},
    "/reconciliation": {},
    "/regulativegroups/{id}": {
      "get": {
        "tags": [
          "RegulativeGroup"
        ],
        "description": "Get RegulativeGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegulativeGroup"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "RegulativeGroup"
        ],
        "description": "Update RegulativeGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegulativeGroup"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegulativeGroup"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "RegulativeGroup"
      },
      "delete": {
        "tags": [
          "RegulativeGroup"
        ],
        "description": "Delete RegulativeGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegulativeGroup"
                }
              }
            }
          }
        }
      }
    },
    "/regulativegroups": {
      "get": {
        "tags": [
          "RegulativeGroup"
        ],
        "description": "Query RegulativeGroup",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RegulativeGroup"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "RegulativeGroup"
        ],
        "description": "Create RegulativeGroup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegulativeGroup"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegulativeGroup"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "RegulativeGroup"
      }
    },
    "/salarybalances/{id}?action=balance": {
      "get": {
        "tags": [
          "SalaryBalance"
        ],
        "description": "balance Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/salarybalances?action=unionreport": {
      "get": {
        "tags": [
          "SalaryBalance"
        ],
        "description": "unionreport Action",
        "parameters": [
          {
            "name": "fromPeriod",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "toPeriod",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "fromSupplier",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "toSupplier",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnionReport"
                }
              }
            }
          }
        }
      }
    },
    "/salarybalances?action=update-from-employments": {
      "put": {
        "tags": [
          "SalaryBalance"
        ],
        "description": "update-from-employments Action",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "integer"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalaryTransaction"
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "employmentIDs"
      }
    },
    "/salarybalances?action=fill": {
      "post": {
        "tags": [
          "SalaryBalance"
        ],
        "description": "fill Action",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalaryBalance"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalaryBalance"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "salaryBalance"
      }
    },
    "/salarybalances/{id}": {
      "get": {
        "tags": [
          "SalaryBalance"
        ],
        "description": "Get SalaryBalance",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalaryBalance"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "SalaryBalance"
        ],
        "description": "Update SalaryBalance",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalaryBalance"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalaryBalance"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "SalaryBalance"
      },
      "delete": {
        "tags": [
          "SalaryBalance"
        ],
        "description": "Delete SalaryBalance",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalaryBalance"
                }
              }
            }
          }
        }
      }
    },
    "/salarybalances": {
      "get": {
        "tags": [
          "SalaryBalance"
        ],
        "description": "Query SalaryBalance",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalaryBalance"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "SalaryBalance"
        ],
        "description": "Create SalaryBalance",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalaryBalance"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalaryBalance"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "SalaryBalance"
      }
    },
    "/salarybalancelines/{id}": {
      "get": {
        "tags": [
          "SalaryBalanceLine"
        ],
        "description": "Get SalaryBalanceLine",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalaryBalanceLine"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "SalaryBalanceLine"
        ],
        "description": "Update SalaryBalanceLine",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalaryBalanceLine"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalaryBalanceLine"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "SalaryBalanceLine"
      },
      "delete": {
        "tags": [
          "SalaryBalanceLine"
        ],
        "description": "Delete SalaryBalanceLine",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalaryBalanceLine"
                }
              }
            }
          }
        }
      }
    },
    "/salarybalancelines": {
      "get": {
        "tags": [
          "SalaryBalanceLine"
        ],
        "description": "Query SalaryBalanceLine",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalaryBalanceLine"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "SalaryBalanceLine"
        ],
        "description": "Create SalaryBalanceLine",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalaryBalanceLine"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalaryBalanceLine"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "SalaryBalanceLine"
      }
    },
    "/salarybalancetemplates/{id}": {
      "get": {
        "tags": [
          "SalaryBalanceTemplate"
        ],
        "description": "Get SalaryBalanceTemplate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalaryBalanceTemplate"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "SalaryBalanceTemplate"
        ],
        "description": "Update SalaryBalanceTemplate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalaryBalanceTemplate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalaryBalanceTemplate"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "SalaryBalanceTemplate"
      },
      "delete": {
        "tags": [
          "SalaryBalanceTemplate"
        ],
        "description": "Delete SalaryBalanceTemplate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalaryBalanceTemplate"
                }
              }
            }
          }
        }
      }
    },
    "/salarybalancetemplates": {
      "get": {
        "tags": [
          "SalaryBalanceTemplate"
        ],
        "description": "Query SalaryBalanceTemplate",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalaryBalanceTemplate"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "SalaryBalanceTemplate"
        ],
        "description": "Create SalaryBalanceTemplate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalaryBalanceTemplate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalaryBalanceTemplate"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "SalaryBalanceTemplate"
      }
    },
    "/salarysums?action=getall": {
      "get": {
        "tags": [
          "SalaryTransactionSums"
        ],
        "description": "getall Action",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/salarysums?action=get-sums": {
      "get": {
        "tags": [
          "SalaryTransactionSums"
        ],
        "description": "get-sums Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalaryTransactionSums"
                }
              }
            }
          }
        }
      }
    },
    "/salarysums/{id}?action=yearly-sums-on-payrollrun": {
      "get": {
        "tags": [
          "SalaryTransactionSums"
        ],
        "description": "yearly-sums-on-payrollrun Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "empNo",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "empID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalaryTransactionSums"
                }
              }
            }
          }
        }
      }
    },
    "/salarysums?action=sums-in-period": {
      "get": {
        "tags": [
          "SalaryTransactionSums"
        ],
        "description": "sums-in-period Action",
        "parameters": [
          {
            "name": "fromPeriod",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "toPeriod",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "year",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/salarysums?action=sum-aga-lines": {
      "get": {
        "tags": [
          "SalaryTransactionSums"
        ],
        "description": "sum-aga-lines Action",
        "parameters": [
          {
            "name": "fromPeriod",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "toPeriod",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "year",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxAndAgaSums"
                }
              }
            }
          }
        }
      }
    },
    "/salarysums/{id}": {
      "get": {
        "tags": [
          "SalaryTransactionSums"
        ],
        "description": "Get SalaryTransactionSums",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalaryTransactionSums"
                }
              }
            }
          }
        }
      }
    },
    "/salarysums": {
      "get": {
        "tags": [
          "SalaryTransactionSums"
        ],
        "description": "Query SalaryTransactionSums",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalaryTransactionSums"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/supplements/{id}": {
      "get": {
        "tags": [
          "SalaryTransactionSupplement"
        ],
        "description": "Get SalaryTransactionSupplement",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalaryTransactionSupplement"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "SalaryTransactionSupplement"
        ],
        "description": "Update SalaryTransactionSupplement",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalaryTransactionSupplement"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalaryTransactionSupplement"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "SalaryTransactionSupplement"
      }
    },
    "/supplements": {
      "get": {
        "tags": [
          "SalaryTransactionSupplement"
        ],
        "description": "Query SalaryTransactionSupplement",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalaryTransactionSupplement"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subentities?action=sub-entities-from-brreg": {
      "get": {
        "tags": [
          "SubEntity"
        ],
        "description": "sub-entities-from-brreg Action",
        "parameters": [
          {
            "name": "orgno",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubEntity"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subentities/{id}": {
      "get": {
        "tags": [
          "SubEntity"
        ],
        "description": "Get SubEntity",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubEntity"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "SubEntity"
        ],
        "description": "Update SubEntity",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubEntity"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubEntity"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "SubEntity"
      },
      "delete": {
        "tags": [
          "SubEntity"
        ],
        "description": "Delete SubEntity",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubEntity"
                }
              }
            }
          }
        }
      }
    },
    "/subentities": {
      "get": {
        "tags": [
          "SubEntity"
        ],
        "description": "Query SubEntity",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubEntity"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "SubEntity"
        ],
        "description": "Create SubEntity",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubEntity"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubEntity"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "SubEntity"
      }
    },
    "/travels?action=traveltext": {
      "post": {
        "tags": [
          "Travel"
        ],
        "description": "traveltext Action",
        "parameters": [
          {
            "name": "apikeyID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Travel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/travels?action=ttpdf": {
      "put": {
        "tags": [
          "Travel"
        ],
        "description": "ttpdf Action",
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "apikeyID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              }
            }
          }
        }
      }
    },
    "/travels?action=tosalary": {
      "put": {
        "tags": [
          "Travel"
        ],
        "description": "tosalary Action",
        "parameters": [
          {
            "name": "runID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalaryTransaction"
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "travelIDs"
      }
    },
    "/travels?action=toinvoice": {
      "put": {
        "tags": [
          "Travel"
        ],
        "description": "toinvoice Action",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SupplierInvoice"
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "travelIDs"
      }
    },
    "/travels/{id}": {
      "get": {
        "tags": [
          "Travel"
        ],
        "description": "Get Travel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Travel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Travel"
        ],
        "description": "Update Travel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Travel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Travel"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Travel"
      },
      "delete": {
        "tags": [
          "Travel"
        ],
        "description": "Delete Travel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Travel"
                }
              }
            }
          }
        }
      }
    },
    "/travels": {
      "get": {
        "tags": [
          "Travel"
        ],
        "description": "Query Travel",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Travel"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Travel"
        ],
        "description": "Create Travel",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Travel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Travel"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Travel"
      }
    },
    "/travellines/{id}?action=attachment": {
      "put": {
        "tags": [
          "TravelLine"
        ],
        "description": "attachment Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              }
            }
          }
        }
      }
    },
    "/travellines/{id}": {
      "get": {
        "tags": [
          "TravelLine"
        ],
        "description": "Get TravelLine",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TravelLine"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "TravelLine"
        ],
        "description": "Update TravelLine",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TravelLine"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TravelLine"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "TravelLine"
      },
      "delete": {
        "tags": [
          "TravelLine"
        ],
        "description": "Delete TravelLine",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TravelLine"
                }
              }
            }
          }
        }
      }
    },
    "/travellines": {
      "get": {
        "tags": [
          "TravelLine"
        ],
        "description": "Query TravelLine",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TravelLine"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "TravelLine"
        ],
        "description": "Create TravelLine",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TravelLine"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TravelLine"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "TravelLine"
      }
    },
    "/traveltype/{id}": {
      "get": {
        "tags": [
          "TravelType"
        ],
        "description": "Get TravelType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TravelType"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "TravelType"
        ],
        "description": "Update TravelType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TravelType"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TravelType"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "TravelType"
      },
      "delete": {
        "tags": [
          "TravelType"
        ],
        "description": "Delete TravelType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TravelType"
                }
              }
            }
          }
        }
      }
    },
    "/traveltype": {
      "get": {
        "tags": [
          "TravelType"
        ],
        "description": "Query TravelType",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TravelType"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "TravelType"
        ],
        "description": "Create TravelType",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TravelType"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TravelType"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "TravelType"
      }
    },
    "/VacationPayLines?action=lines": {
      "get": {
        "tags": [
          "VacationPayLine"
        ],
        "description": "lines Action",
        "parameters": [
          {
            "name": "payrunID",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "year",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "expandEmps",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "showAll",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/VacationPayLines?action=pay-emps": {
      "put": {
        "tags": [
          "VacationPayLine"
        ],
        "description": "pay-emps Action",
        "parameters": [
          {
            "name": "payrollID",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "year",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "hasSixthWeek",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "employeeIDs"
      }
    },
    "/VacationPayLines?action=pay-fromlines": {
      "put": {
        "tags": [
          "VacationPayLine"
        ],
        "description": "pay-fromlines Action",
        "parameters": [
          {
            "name": "payrollID",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "year",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "hasSixthWeek",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "payList"
      }
    },
    "/VacationPayLines?action=to-salary": {
      "put": {
        "tags": [
          "VacationPayLine"
        ],
        "description": "to-salary Action",
        "parameters": [
          {
            "name": "payrollID",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "baseYear",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "payList"
      }
    },
    "/VacationPayLines?action=close": {
      "put": {
        "tags": [
          "VacationPayLine"
        ],
        "description": "close Action",
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "payrollID",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "hasSixthWeek",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "employeeIDs"
      }
    },
    "/VacationPayLines/{id}": {
      "get": {
        "tags": [
          "VacationPayLine"
        ],
        "description": "Get VacationPayLine",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VacationPayLine"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "VacationPayLine"
        ],
        "description": "Update VacationPayLine",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VacationPayLine"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VacationPayLine"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "VacationPayLine"
      },
      "delete": {
        "tags": [
          "VacationPayLine"
        ],
        "description": "Delete VacationPayLine",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VacationPayLine"
                }
              }
            }
          }
        }
      }
    },
    "/VacationPayLines": {
      "get": {
        "tags": [
          "VacationPayLine"
        ],
        "description": "Query VacationPayLine",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VacationPayLine"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "VacationPayLine"
        ],
        "description": "Create VacationPayLine",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VacationPayLine"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VacationPayLine"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "VacationPayLine"
      }
    },
    "/employeevacationrates/{id}": {
      "get": {
        "tags": [
          "VacationRateEmployee"
        ],
        "description": "Get VacationRateEmployee",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VacationRateEmployee"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "VacationRateEmployee"
        ],
        "description": "Update VacationRateEmployee",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VacationRateEmployee"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VacationRateEmployee"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "VacationRateEmployee"
      },
      "delete": {
        "tags": [
          "VacationRateEmployee"
        ],
        "description": "Delete VacationRateEmployee",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VacationRateEmployee"
                }
              }
            }
          }
        }
      }
    },
    "/employeevacationrates": {
      "get": {
        "tags": [
          "VacationRateEmployee"
        ],
        "description": "Query VacationRateEmployee",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VacationRateEmployee"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "VacationRateEmployee"
        ],
        "description": "Create VacationRateEmployee",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VacationRateEmployee"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VacationRateEmployee"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "VacationRateEmployee"
      }
    },
    "/wagetypes?action=validamelding": {
      "get": {
        "tags": [
          "WageType"
        ],
        "description": "validamelding Action",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "fordel",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "beskrivelse",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/wagetypes?action=synchronize": {
      "put": {
        "tags": [
          "WageType"
        ],
        "description": "synchronize Action",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/wagetypes?action=create-wagetypes-for-year": {
      "put": {
        "tags": [
          "WageType"
        ],
        "description": "create-wagetypes-for-year Action",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/wagetypes?action=create-and-update-standard-wagetypes": {
      "put": {
        "tags": [
          "WageType"
        ],
        "description": "create-and-update-standard-wagetypes Action",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/wagetypes/{id}?action=used-in-payrollrun": {
      "get": {
        "tags": [
          "WageType"
        ],
        "description": "used-in-payrollrun Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/wagetypes?action=get-rate": {
      "get": {
        "tags": [
          "WageType"
        ],
        "description": "get-rate Action",
        "parameters": [
          {
            "name": "wagetypeID",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "employmentID",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "employeeID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/wagetypes/{id}?action=sync-supplements": {
      "put": {
        "tags": [
          "WageType"
        ],
        "description": "sync-supplements Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/wagetypes/{id}": {
      "get": {
        "tags": [
          "WageType"
        ],
        "description": "Get WageType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WageType"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "WageType"
        ],
        "description": "Update WageType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WageType"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WageType"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "WageType"
      },
      "delete": {
        "tags": [
          "WageType"
        ],
        "description": "Delete WageType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WageType"
                }
              }
            }
          }
        }
      }
    },
    "/wagetypes": {
      "get": {
        "tags": [
          "WageType"
        ],
        "description": "Query WageType",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WageType"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "WageType"
        ],
        "description": "Create WageType",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WageType"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WageType"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "WageType"
      }
    },
    "/wagetypetranslations/{id}": {
      "get": {
        "tags": [
          "WageTypeTranslation"
        ],
        "description": "Get WageTypeTranslation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WageTypeTranslation"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "WageTypeTranslation"
        ],
        "description": "Update WageTypeTranslation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WageTypeTranslation"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WageTypeTranslation"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "WageTypeTranslation"
      },
      "delete": {
        "tags": [
          "WageTypeTranslation"
        ],
        "description": "Delete WageTypeTranslation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WageTypeTranslation"
                }
              }
            }
          }
        }
      }
    },
    "/wagetypetranslations": {
      "get": {
        "tags": [
          "WageTypeTranslation"
        ],
        "description": "Query WageTypeTranslation",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WageTypeTranslation"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "WageTypeTranslation"
        ],
        "description": "Create WageTypeTranslation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WageTypeTranslation"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WageTypeTranslation"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "WageTypeTranslation"
      }
    },
    "/salarytrans?action=complete-trans": {
      "post": {
        "tags": [
          "SalaryTransaction"
        ],
        "description": "complete-trans Action",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalaryTransaction"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalaryTransaction"
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "trans"
      }
    },
    "/salarytrans?action=update-from-employments": {
      "put": {
        "tags": [
          "SalaryTransaction"
        ],
        "description": "update-from-employments Action",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "integer"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalaryTransaction"
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "employmentIDs"
      }
    },
    "/salarytrans/{id}": {
      "get": {
        "tags": [
          "SalaryTransaction"
        ],
        "description": "Get SalaryTransaction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalaryTransaction"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "SalaryTransaction"
        ],
        "description": "Update SalaryTransaction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalaryTransaction"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalaryTransaction"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "SalaryTransaction"
      },
      "delete": {
        "tags": [
          "SalaryTransaction"
        ],
        "description": "Delete SalaryTransaction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalaryTransaction"
                }
              }
            }
          }
        }
      }
    },
    "/salarytrans": {
      "get": {
        "tags": [
          "SalaryTransaction"
        ],
        "description": "Query SalaryTransaction",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalaryTransaction"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "SalaryTransaction"
        ],
        "description": "Create SalaryTransaction",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalaryTransaction"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalaryTransaction"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "SalaryTransaction"
      }
    },
    "/regulatives/{id}?action=import": {
      "post": {
        "tags": [
          "Regulative"
        ],
        "description": "import Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "fileID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Regulative"
                }
              }
            }
          }
        }
      }
    },
    "/regulatives/{id}?action=export": {
      "get": {
        "tags": [
          "Regulative"
        ],
        "description": "export Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IActionResult"
                }
              }
            }
          }
        }
      }
    },
    "/regulatives?action=template": {
      "get": {
        "tags": [
          "Regulative"
        ],
        "description": "template Action",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IActionResult"
                }
              }
            }
          }
        }
      }
    },
    "/regulatives/{id}": {
      "get": {
        "tags": [
          "Regulative"
        ],
        "description": "Get Regulative",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Regulative"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Regulative"
        ],
        "description": "Update Regulative",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Regulative"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Regulative"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Regulative"
      },
      "delete": {
        "tags": [
          "Regulative"
        ],
        "description": "Delete Regulative",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Regulative"
                }
              }
            }
          }
        }
      }
    },
    "/regulatives": {
      "get": {
        "tags": [
          "Regulative"
        ],
        "description": "Query Regulative",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Regulative"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Regulative"
        ],
        "description": "Create Regulative",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Regulative"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Regulative"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Regulative"
      }
    },
    "/thresholds/{id}": {
      "get": {
        "tags": [
          "TransitionThreshold"
        ],
        "description": "Get TransitionThreshold",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransitionThreshold"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "TransitionThreshold"
        ],
        "description": "Update TransitionThreshold",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransitionThreshold"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransitionThreshold"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "TransitionThreshold"
      },
      "delete": {
        "tags": [
          "TransitionThreshold"
        ],
        "description": "Delete TransitionThreshold",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransitionThreshold"
                }
              }
            }
          }
        }
      }
    },
    "/thresholds": {
      "get": {
        "tags": [
          "TransitionThreshold"
        ],
        "description": "Query TransitionThreshold",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TransitionThreshold"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "TransitionThreshold"
        ],
        "description": "Create TransitionThreshold",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransitionThreshold"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransitionThreshold"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "TransitionThreshold"
      }
    },
    "/approvalrules/{id}": {
      "get": {
        "tags": [
          "ApprovalRule"
        ],
        "description": "Get ApprovalRule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApprovalRule"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ApprovalRule"
        ],
        "description": "Update ApprovalRule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApprovalRule"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApprovalRule"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "ApprovalRule"
      },
      "delete": {
        "tags": [
          "ApprovalRule"
        ],
        "description": "Delete ApprovalRule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApprovalRule"
                }
              }
            }
          }
        }
      }
    },
    "/approvalrules": {
      "get": {
        "tags": [
          "ApprovalRule"
        ],
        "description": "Query ApprovalRule",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApprovalRule"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ApprovalRule"
        ],
        "description": "Create ApprovalRule",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApprovalRule"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApprovalRule"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "ApprovalRule"
      }
    },
    "/approvalsubstitutes/{id}": {
      "get": {
        "tags": [
          "ApprovalSubstitute"
        ],
        "description": "Get ApprovalSubstitute",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApprovalSubstitute"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ApprovalSubstitute"
        ],
        "description": "Update ApprovalSubstitute",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApprovalSubstitute"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApprovalSubstitute"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "ApprovalSubstitute"
      },
      "delete": {
        "tags": [
          "ApprovalSubstitute"
        ],
        "description": "Delete ApprovalSubstitute",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApprovalSubstitute"
                }
              }
            }
          }
        }
      }
    },
    "/approvalsubstitutes": {
      "get": {
        "tags": [
          "ApprovalSubstitute"
        ],
        "description": "Query ApprovalSubstitute",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApprovalSubstitute"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ApprovalSubstitute"
        ],
        "description": "Create ApprovalSubstitute",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApprovalSubstitute"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApprovalSubstitute"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "ApprovalSubstitute"
      }
    },
    "/approvals/{id}?action=approve": {
      "post": {
        "tags": [
          "Approval"
        ],
        "description": "approve Transition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/approvals/{id}?action=reject": {
      "post": {
        "tags": [
          "Approval"
        ],
        "description": "reject Transition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/approvals/{id}": {
      "get": {
        "tags": [
          "Approval"
        ],
        "description": "Get Approval",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Approval"
                }
              }
            }
          }
        }
      }
    },
    "/approvals": {
      "get": {
        "tags": [
          "Approval"
        ],
        "description": "Query Approval",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Approval"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auditlogs/{id}": {
      "get": {
        "tags": [
          "AuditLog"
        ],
        "description": "Get AuditLog",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLog"
                }
              }
            }
          }
        }
      }
    },
    "/auditlogs": {
      "get": {
        "tags": [
          "AuditLog"
        ],
        "description": "Query AuditLog",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuditLog"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/companies-access/{id}": {
      "get": {
        "tags": [
          "CompanyAccess"
        ],
        "description": "Get CompanyAccess",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyAccess"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CompanyAccess"
        ],
        "description": "Update CompanyAccess",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyAccess"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyAccess"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "CompanyAccess"
      },
      "delete": {
        "tags": [
          "CompanyAccess"
        ],
        "description": "Delete CompanyAccess",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyAccess"
                }
              }
            }
          }
        }
      }
    },
    "/companies-access": {
      "get": {
        "tags": [
          "CompanyAccess"
        ],
        "description": "Query CompanyAccess",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyAccess"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CompanyAccess"
        ],
        "description": "Create CompanyAccess",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyAccess"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyAccess"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "CompanyAccess"
      }
    },
    "/companies?action=undelete-company": {
      "put": {
        "tags": [
          "Company"
        ],
        "description": "undelete-company Action",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/companies/{id}?action=undelete-company": {
      "put": {
        "tags": [
          "Company"
        ],
        "description": "undelete-company Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/companies?action=delete-company": {
      "delete": {
        "tags": [
          "Company"
        ],
        "description": "delete-company Action",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/companies/{id}?action=delete-company": {
      "delete": {
        "tags": [
          "Company"
        ],
        "description": "delete-company Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/companies?action=reset-company": {
      "put": {
        "tags": [
          "Company"
        ],
        "description": "reset-company Action",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/companies?action=create-company": {
      "put": {
        "tags": [
          "Company"
        ],
        "description": "create-company Action",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCompanyDetails"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Company"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "ccp"
      }
    },
    "/companies/{id}?action=create-update-email": {
      "put": {
        "tags": [
          "Company"
        ],
        "description": "create-update-email Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "customEmail",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Company"
                }
              }
            }
          }
        }
      }
    },
    "/companies/{id}?action=disable-email": {
      "put": {
        "tags": [
          "Company"
        ],
        "description": "disable-email Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Company"
                }
              }
            }
          }
        }
      }
    },
    "/companies/{id}?action=create-orgnr-email": {
      "put": {
        "tags": [
          "Company"
        ],
        "description": "create-orgnr-email Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Company"
                }
              }
            }
          }
        }
      }
    },
    "/companies/{id}?action=disable-orgnr-email": {
      "put": {
        "tags": [
          "Company"
        ],
        "description": "disable-orgnr-email Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Company"
                }
              }
            }
          }
        }
      }
    },
    "/companies/{id}?action=check-email-changed": {
      "get": {
        "tags": [
          "Company"
        ],
        "description": "check-email-changed Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "email",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/companies/{id}?action=check-email-valid-available": {
      "get": {
        "tags": [
          "Company"
        ],
        "description": "check-email-valid-available Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "email",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/companies/{id}?action=check-email-changed-valid-available": {
      "get": {
        "tags": [
          "Company"
        ],
        "description": "check-email-changed-valid-available Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "email",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/companies/{id}?action=email-domain": {
      "get": {
        "tags": [
          "Company"
        ],
        "description": "email-domain Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/companies/{id}?action=clientnumber": {
      "put": {
        "tags": [
          "Company"
        ],
        "description": "clientnumber Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "clientnumber",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Company"
                }
              }
            }
          }
        }
      }
    },
    "/companies/{id}": {
      "get": {
        "tags": [
          "Company"
        ],
        "description": "Get Company",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Company"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Company"
        ],
        "description": "Delete Company",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Company"
                }
              }
            }
          }
        }
      }
    },
    "/companies": {
      "get": {
        "tags": [
          "Company"
        ],
        "description": "Query Company",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Company"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/custom-fields/{id}?action=activate": {
      "post": {
        "tags": [
          "CustomField"
        ],
        "description": "activate Transition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/custom-fields/{id}": {
      "get": {
        "tags": [
          "CustomField"
        ],
        "description": "Get CustomField",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomField"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CustomField"
        ],
        "description": "Update CustomField",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomField"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomField"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "CustomField"
      },
      "delete": {
        "tags": [
          "CustomField"
        ],
        "description": "Delete CustomField",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "/custom-fields": {
      "get": {
        "tags": [
          "CustomField"
        ],
        "description": "Query CustomField",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CustomField"
        ],
        "description": "Create CustomField",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomField"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomField"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "CustomField"
      }
    },
    "/models/{id}": {
      "get": {
        "tags": [
          "Model"
        ],
        "description": "Get Model",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Model"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Model"
        ],
        "description": "Update Model",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Model"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Model"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Model"
      }
    },
    "/models": {
      "get": {
        "tags": [
          "Model"
        ],
        "description": "Query Model",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Model"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/statuslogs/{id}": {
      "get": {
        "tags": [
          "StatusLog"
        ],
        "description": "Get StatusLog",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusLog"
                }
              }
            }
          }
        }
      }
    },
    "/statuslogs": {
      "get": {
        "tags": [
          "StatusLog"
        ],
        "description": "Query StatusLog",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StatusLog"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tasks/{id}?action=complete": {
      "post": {
        "tags": [
          "Task"
        ],
        "description": "complete Transition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/tasks/{id}?action=pending": {
      "post": {
        "tags": [
          "Task"
        ],
        "description": "pending Transition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/tasks/{id}?action=activate": {
      "post": {
        "tags": [
          "Task"
        ],
        "description": "activate Transition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/tasks/{id}": {
      "get": {
        "tags": [
          "Task"
        ],
        "description": "Get Task",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Task"
        ],
        "description": "Update Task",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Task"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Task"
      },
      "delete": {
        "tags": [
          "Task"
        ],
        "description": "Delete Task",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          }
        }
      }
    },
    "/tasks": {
      "get": {
        "tags": [
          "Task"
        ],
        "description": "Query Task",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Task"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Task"
        ],
        "description": "Create Task",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Task"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Task"
      }
    },
    "/users?action=subjectandemail": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "subjectandemail Action",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/users?action=current-session": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "current-session Action",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          }
        }
      }
    },
    "/users?action=current-roles": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "current-roles Action",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/users?action=accept-CustomerAgreement": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "accept-CustomerAgreement Action",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/users?action=accept-UserLicenseAgreement": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "accept-UserLicenseAgreement Action",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}?action=inactivate": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "inactivate Transition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}?action=activate": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "activate Transition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}?action=make-autobank-user": {
      "put": {
        "tags": [
          "User"
        ],
        "description": "make-autobank-user Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBankUserDTO"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "autobankUser"
      }
    },
    "/users/{id}?action=reset-autobank-password": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "reset-autobank-password Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/users?action=self-reset-autobank-password": {
      "put": {
        "tags": [
          "User"
        ],
        "description": "self-reset-autobank-password Action",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/users?action=change-autobank-password": {
      "put": {
        "tags": [
          "User"
        ],
        "description": "change-autobank-password Action",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeAutobankPasswordDTO"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "changPassword"
      }
    },
    "/users?action=add-user": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "add-user Action",
        "parameters": [
          {
            "name": "globalIdentity",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "supportuser",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/users?action=adminusers": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "adminusers Action",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Get User",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "description": "Update User",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "User"
      },
      "delete": {
        "tags": [
          "User"
        ],
        "description": "Delete User",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Query User",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "User"
        ],
        "description": "Create User",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "User"
      }
    },
    "/user-verifications?action=create": {
      "post": {
        "tags": [
          "UserVerification"
        ],
        "description": "create Action",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserVerification"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserVerification"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "userVerfication"
      }
    },
    "/user-verifications?action=cancel-invitation": {
      "post": {
        "tags": [
          "UserVerification"
        ],
        "description": "cancel-invitation Action",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserVerification"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserVerification"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "userVerfication"
      }
    },
    "/user-verifications/{id}": {
      "get": {
        "tags": [
          "UserVerification"
        ],
        "description": "Get UserVerification",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserVerification"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "UserVerification"
        ],
        "description": "Delete UserVerification",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserVerification"
                }
              }
            }
          }
        }
      }
    },
    "/user-verifications": {
      "get": {
        "tags": [
          "UserVerification"
        ],
        "description": "Query UserVerification",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserVerification"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "UserVerification"
        ],
        "description": "Create UserVerification",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserVerification"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserVerification"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "UserVerification"
      }
    },
    "/valuelists/{id}": {
      "get": {
        "tags": [
          "ValueList"
        ],
        "description": "Get ValueList",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValueList"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ValueList"
        ],
        "description": "Update ValueList",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValueList"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValueList"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "ValueList"
      },
      "delete": {
        "tags": [
          "ValueList"
        ],
        "description": "Delete ValueList",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValueList"
                }
              }
            }
          }
        }
      }
    },
    "/valuelists": {
      "get": {
        "tags": [
          "ValueList"
        ],
        "description": "Query ValueList",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValueList"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ValueList"
        ],
        "description": "Create ValueList",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValueList"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValueList"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "ValueList"
      }
    },
    "/valueitems/{id}": {
      "get": {
        "tags": [
          "ValueItem"
        ],
        "description": "Get ValueItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValueItem"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ValueItem"
        ],
        "description": "Update ValueItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValueItem"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValueItem"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "ValueItem"
      },
      "delete": {
        "tags": [
          "ValueItem"
        ],
        "description": "Delete ValueItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValueItem"
                }
              }
            }
          }
        }
      }
    },
    "/valueitems": {
      "get": {
        "tags": [
          "ValueItem"
        ],
        "description": "Query ValueItem",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValueItem"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ValueItem"
        ],
        "description": "Create ValueItem",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValueItem"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValueItem"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "ValueItem"
      }
    },
    "/translations/{id}": {
      "get": {
        "tags": [
          "Translation"
        ],
        "description": "Get Translation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Translation"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Translation"
        ],
        "description": "Update Translation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Translation"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Translation"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Translation"
      },
      "delete": {
        "tags": [
          "Translation"
        ],
        "description": "Delete Translation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Translation"
                }
              }
            }
          }
        }
      }
    },
    "/translations": {
      "get": {
        "tags": [
          "Translation"
        ],
        "description": "Query Translation",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Translation"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Translation"
        ],
        "description": "Create Translation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Translation"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Translation"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Translation"
      }
    },
    "/translatables/{id}": {
      "get": {
        "tags": [
          "Translatable"
        ],
        "description": "Get Translatable",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Translatable"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Translatable"
        ],
        "description": "Update Translatable",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Translatable"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Translatable"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Translatable"
      },
      "delete": {
        "tags": [
          "Translatable"
        ],
        "description": "Delete Translatable",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Translatable"
                }
              }
            }
          }
        }
      }
    },
    "/translatables": {
      "get": {
        "tags": [
          "Translatable"
        ],
        "description": "Query Translatable",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Translatable"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Translatable"
        ],
        "description": "Create Translatable",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Translatable"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Translatable"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Translatable"
      }
    },
    "/languages/{id}": {
      "get": {
        "tags": [
          "Language"
        ],
        "description": "Get Language",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Language"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Language"
        ],
        "description": "Update Language",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Language"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Language"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Language"
      },
      "delete": {
        "tags": [
          "Language"
        ],
        "description": "Delete Language",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Language"
                }
              }
            }
          }
        }
      }
    },
    "/languages": {
      "get": {
        "tags": [
          "Language"
        ],
        "description": "Query Language",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Language"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Language"
        ],
        "description": "Create Language",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Language"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Language"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Language"
      }
    },
    "/number-series?action=get-active-numberseries": {
      "get": {
        "tags": [
          "NumberSeries"
        ],
        "description": "get-active-numberseries Action",
        "parameters": [
          {
            "name": "entityType",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "year",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NumberSeries"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/number-series?action=get-numberseries-asinvoice": {
      "get": {
        "tags": [
          "NumberSeries"
        ],
        "description": "get-numberseries-asinvoice Action",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NumberSeries"
                }
              }
            }
          }
        }
      }
    },
    "/number-series?action=reset-numberseries-next-number": {
      "put": {
        "tags": [
          "NumberSeries"
        ],
        "description": "reset-numberseries-next-number Action",
        "parameters": [
          {
            "name": "numberSeriesID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/number-series?action=get-max-used-number": {
      "get": {
        "tags": [
          "NumberSeries"
        ],
        "description": "get-max-used-number Action",
        "parameters": [
          {
            "name": "numberSeriesID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/number-series?action=get-available-numbers-in-numberseries": {
      "get": {
        "tags": [
          "NumberSeries"
        ],
        "description": "get-available-numbers-in-numberseries Action",
        "parameters": [
          {
            "name": "numberSeriesID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/number-series/{id}": {
      "get": {
        "tags": [
          "NumberSeries"
        ],
        "description": "Get NumberSeries",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NumberSeries"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "NumberSeries"
        ],
        "description": "Update NumberSeries",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NumberSeries"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NumberSeries"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "NumberSeries"
      },
      "delete": {
        "tags": [
          "NumberSeries"
        ],
        "description": "Delete NumberSeries",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NumberSeries"
                }
              }
            }
          }
        }
      }
    },
    "/number-series": {
      "get": {
        "tags": [
          "NumberSeries"
        ],
        "description": "Query NumberSeries",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NumberSeries"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "NumberSeries"
        ],
        "description": "Create NumberSeries",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NumberSeries"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NumberSeries"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "NumberSeries"
      }
    },
    "/number-series-invalid-overlaps/{id}": {
      "get": {
        "tags": [
          "NumberSeriesInvalidOverlap"
        ],
        "description": "Get NumberSeriesInvalidOverlap",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NumberSeriesInvalidOverlap"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "NumberSeriesInvalidOverlap"
        ],
        "description": "Update NumberSeriesInvalidOverlap",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NumberSeriesInvalidOverlap"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NumberSeriesInvalidOverlap"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "NumberSeriesInvalidOverlap"
      },
      "delete": {
        "tags": [
          "NumberSeriesInvalidOverlap"
        ],
        "description": "Delete NumberSeriesInvalidOverlap",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NumberSeriesInvalidOverlap"
                }
              }
            }
          }
        }
      }
    },
    "/number-series-invalid-overlaps": {
      "get": {
        "tags": [
          "NumberSeriesInvalidOverlap"
        ],
        "description": "Query NumberSeriesInvalidOverlap",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NumberSeriesInvalidOverlap"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "NumberSeriesInvalidOverlap"
        ],
        "description": "Create NumberSeriesInvalidOverlap",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NumberSeriesInvalidOverlap"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NumberSeriesInvalidOverlap"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "NumberSeriesInvalidOverlap"
      }
    },
    "/number-series-tasks?action=get-active-numberseriestasks": {
      "get": {
        "tags": [
          "NumberSeriesTask"
        ],
        "description": "get-active-numberseriestasks Action",
        "parameters": [
          {
            "name": "entityType",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "year",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ActiveNumberSeriesTask"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/number-series-tasks/{id}": {
      "get": {
        "tags": [
          "NumberSeriesTask"
        ],
        "description": "Get NumberSeriesTask",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NumberSeriesTask"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "NumberSeriesTask"
        ],
        "description": "Update NumberSeriesTask",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NumberSeriesTask"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NumberSeriesTask"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "NumberSeriesTask"
      },
      "delete": {
        "tags": [
          "NumberSeriesTask"
        ],
        "description": "Delete NumberSeriesTask",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NumberSeriesTask"
                }
              }
            }
          }
        }
      }
    },
    "/number-series-tasks": {
      "get": {
        "tags": [
          "NumberSeriesTask"
        ],
        "description": "Query NumberSeriesTask",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NumberSeriesTask"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "NumberSeriesTask"
        ],
        "description": "Create NumberSeriesTask",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NumberSeriesTask"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NumberSeriesTask"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "NumberSeriesTask"
      }
    },
    "/number-series-types/{id}": {
      "get": {
        "tags": [
          "NumberSeriesType"
        ],
        "description": "Get NumberSeriesType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NumberSeriesType"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "NumberSeriesType"
        ],
        "description": "Update NumberSeriesType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NumberSeriesType"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NumberSeriesType"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "NumberSeriesType"
      },
      "delete": {
        "tags": [
          "NumberSeriesType"
        ],
        "description": "Delete NumberSeriesType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NumberSeriesType"
                }
              }
            }
          }
        }
      }
    },
    "/number-series-types": {
      "get": {
        "tags": [
          "NumberSeriesType"
        ],
        "description": "Query NumberSeriesType",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NumberSeriesType"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "NumberSeriesType"
        ],
        "description": "Create NumberSeriesType",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NumberSeriesType"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NumberSeriesType"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "NumberSeriesType"
      }
    },
    "/files/{id}?action=set-is-attachment": {
      "put": {
        "tags": [
          "File"
        ],
        "description": "set-is-attachment Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "entitytype",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "entityid",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "isAttachment",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/files/{id}?action=link": {
      "post": {
        "tags": [
          "File"
        ],
        "description": "link Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "entitytype",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "entityid",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              }
            }
          }
        }
      }
    },
    "/files/{id}?action=unlink": {
      "post": {
        "tags": [
          "File"
        ],
        "description": "unlink Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "entitytype",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "entityid",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/files/{id}?action=download": {
      "get": {
        "tags": [
          "File"
        ],
        "description": "download Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/files/{id}?action=ocranalyse": {
      "get": {
        "tags": [
          "File"
        ],
        "description": "ocranalyse Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/files/{id}?action=finalize": {
      "post": {
        "tags": [
          "File"
        ],
        "description": "finalize Transition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/files?action=split-file": {
      "post": {
        "tags": [
          "File"
        ],
        "description": "split-file Action",
        "parameters": [
          {
            "name": "oldFileID",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "newFileID1",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "newFileID2",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SplitFileResult"
                }
              }
            }
          }
        }
      }
    },
    "/files?action=split-file-multiple": {
      "post": {
        "tags": [
          "File"
        ],
        "description": "split-file-multiple Action",
        "parameters": [
          {
            "name": "oldFileID",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "newFileIds",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SplitFileMultipeResult"
                }
              }
            }
          }
        }
      }
    },
    "/files/{id}": {
      "get": {
        "tags": [
          "File"
        ],
        "description": "Get File",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "File"
        ],
        "description": "Update File",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/File"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "File"
      },
      "delete": {
        "tags": [
          "File"
        ],
        "description": "Delete File",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              }
            }
          }
        }
      }
    },
    "/files": {
      "get": {
        "tags": [
          "File"
        ],
        "description": "Query File",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/File"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "File"
        ],
        "description": "Create File",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/File"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "File"
      }
    },
    "/files/{entitytype}/{entityid}?action=delete-by-filetag": {
      "delete": {
        "tags": [
          "File"
        ],
        "description": "delete-by-filetag Action",
        "parameters": [
          {
            "name": "fileTagName",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/files/{entitytype}/{entityid}/{id}?action=download": {
      "get": {
        "tags": [
          "File"
        ],
        "description": "download Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/files/{entitytype}/{entityid}/{id}?action=ocranalyse": {
      "get": {
        "tags": [
          "File"
        ],
        "description": "ocranalyse Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/files/{entitytype}/{entityid}/{id}?action=finalize": {
      "post": {
        "tags": [
          "File"
        ],
        "description": "finalize Transition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/files/{entitytype}/{entityid}/{id}": {
      "get": {
        "tags": [
          "File"
        ],
        "description": "Get File",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "File"
        ],
        "description": "Delete File",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              }
            }
          }
        }
      }
    },
    "/files/{entitytype}/{entityid}": {
      "get": {
        "tags": [
          "File"
        ],
        "description": "Query File",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/File"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "File"
        ],
        "description": "Create File",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/File"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "File"
      }
    },
    "/filetags/{id}": {
      "get": {
        "tags": [
          "FileTag"
        ],
        "description": "Get FileTag",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileTag"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "FileTag"
        ],
        "description": "Delete FileTag",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileTag"
                }
              }
            }
          }
        }
      }
    },
    "/filetags": {
      "get": {
        "tags": [
          "FileTag"
        ],
        "description": "Query FileTag",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FileTag"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "FileTag"
        ],
        "description": "Create FileTag",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FileTag"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileTag"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "FileTag"
      }
    },
    "/filetags/{tagnames}/{status}?action=get-supplierInvoice-inbox-count": {
      "get": {
        "tags": [
          "File"
        ],
        "description": "get-supplierInvoice-inbox-count Action",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          }
        }
      }
    },
    "/filetags/{tagnames}/{status}?action=get-supplierInvoice-inbox": {
      "get": {
        "tags": [
          "File"
        ],
        "description": "get-supplierInvoice-inbox Action",
        "parameters": [
          {
            "name": "top",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "skip",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/filetags/{tagnames}/{status}/{id}": {},
    "/filetags/{tagnames}/{status}": {
      "get": {
        "tags": [
          "File"
        ],
        "description": "Query File",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/File"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/permissions/{id}": {
      "get": {
        "tags": [
          "Permission"
        ],
        "description": "Get Permission",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Permission"
        ],
        "description": "Delete Permission",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              }
            }
          }
        }
      }
    },
    "/permissions": {
      "get": {
        "tags": [
          "Permission"
        ],
        "description": "Query Permission",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Permission"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/roles/{id}": {
      "get": {
        "tags": [
          "Role"
        ],
        "description": "Get Role",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Role"
        ],
        "description": "Update Role",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Role"
      },
      "delete": {
        "tags": [
          "Role"
        ],
        "description": "Delete Role",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          }
        }
      }
    },
    "/roles": {
      "get": {
        "tags": [
          "Role"
        ],
        "description": "Query Role",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Role"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Role"
        ],
        "description": "Create Role",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Role"
      }
    },
    "/userroles?action=bulk-insert-roles": {
      "post": {
        "tags": [
          "UserRole"
        ],
        "description": "bulk-insert-roles Action",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserRole"
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "userRoles"
      }
    },
    "/userroles/{id}": {
      "get": {
        "tags": [
          "UserRole"
        ],
        "description": "Get UserRole",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRole"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "UserRole"
        ],
        "description": "Update UserRole",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRole"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRole"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "UserRole"
      },
      "delete": {
        "tags": [
          "UserRole"
        ],
        "description": "Delete UserRole",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRole"
                }
              }
            }
          }
        }
      }
    },
    "/userroles": {
      "get": {
        "tags": [
          "UserRole"
        ],
        "description": "Query UserRole",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserRole"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "UserRole"
        ],
        "description": "Create UserRole",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRole"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRole"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "UserRole"
      }
    },
    "/accountvisibilitygroups/{id}": {
      "get": {
        "tags": [
          "AccountVisibilityGroup"
        ],
        "description": "Get AccountVisibilityGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountVisibilityGroup"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AccountVisibilityGroup"
        ],
        "description": "Update AccountVisibilityGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountVisibilityGroup"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountVisibilityGroup"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "AccountVisibilityGroup"
      },
      "delete": {
        "tags": [
          "AccountVisibilityGroup"
        ],
        "description": "Delete AccountVisibilityGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountVisibilityGroup"
                }
              }
            }
          }
        }
      }
    },
    "/accountvisibilitygroups": {
      "get": {
        "tags": [
          "AccountVisibilityGroup"
        ],
        "description": "Query AccountVisibilityGroup",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AccountVisibilityGroup"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "AccountVisibilityGroup"
        ],
        "description": "Create AccountVisibilityGroup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountVisibilityGroup"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountVisibilityGroup"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "AccountVisibilityGroup"
      }
    },
    "/AGAZones?action=get-agasectors": {
      "get": {
        "tags": [
          "AGAZone"
        ],
        "description": "get-agasectors Action",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AGASector"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/AGAZones/{id}": {
      "get": {
        "tags": [
          "AGAZone"
        ],
        "description": "Get AGAZone",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AGAZone"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AGAZone"
        ],
        "description": "Update AGAZone",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AGAZone"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AGAZone"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "AGAZone"
      }
    },
    "/AGAZones": {
      "get": {
        "tags": [
          "AGAZone"
        ],
        "description": "Query AGAZone",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AGAZone"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "AGAZone"
        ],
        "description": "Create AGAZone",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AGAZone"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AGAZone"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "AGAZone"
      }
    },
    "/agasums?action=free-amount-summary": {
      "get": {
        "tags": [
          "AGASums"
        ],
        "description": "free-amount-summary Action",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FreeAmountSummary"
                }
              }
            }
          }
        }
      }
    },
    "/agasums/{id}": {
      "get": {
        "tags": [
          "AGASums"
        ],
        "description": "Get AGASums",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AGASums"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AGASums"
        ],
        "description": "Update AGASums",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AGASums"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AGASums"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "AGASums"
      },
      "delete": {
        "tags": [
          "AGASums"
        ],
        "description": "Delete AGASums",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AGASums"
                }
              }
            }
          }
        }
      }
    },
    "/agasums": {
      "get": {
        "tags": [
          "AGASums"
        ],
        "description": "Query AGASums",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AGASums"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "AGASums"
        ],
        "description": "Create AGASums",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AGASums"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AGASums"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "AGASums"
      }
    },
    "/agreements?action=current": {
      "get": {
        "tags": [
          "Agreement"
        ],
        "description": "current Action",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "appliesto",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/agreements/{id}": {
      "get": {
        "tags": [
          "Agreement"
        ],
        "description": "Get Agreement",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Agreement"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Agreement"
        ],
        "description": "Update Agreement",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Agreement"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Agreement"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Agreement"
      },
      "delete": {
        "tags": [
          "Agreement"
        ],
        "description": "Delete Agreement",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Agreement"
                }
              }
            }
          }
        }
      }
    },
    "/agreements": {
      "get": {
        "tags": [
          "Agreement"
        ],
        "description": "Query Agreement",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Agreement"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Agreement"
        ],
        "description": "Create Agreement",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Agreement"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Agreement"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Agreement"
      }
    },
    "/altinn?action=get-pin-message": {
      "post": {
        "tags": [
          "Altinn"
        ],
        "description": "get-pin-message Action",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AltinnAuthRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationChallengeBE"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "pinCodeRequest"
      }
    },
    "/altinn?action=test-user-authentication": {
      "get": {
        "tags": [
          "Altinn"
        ],
        "description": "test-user-authentication Action",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/altinn/{id}?action=sendtaxrequest": {
      "post": {
        "tags": [
          "Altinn"
        ],
        "description": "sendtaxrequest Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "option",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "empId",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "requestAllChanges",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "categoryID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AltinnReceipt"
                }
              }
            }
          }
        }
      }
    },
    "/altinn?action=send-a06-request": {
      "post": {
        "tags": [
          "Altinn"
        ],
        "description": "send-a06-request Action",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/A06Options"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AltinnReceipt"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "options"
      }
    },
    "/altinn?action=get-a07-response": {
      "get": {
        "tags": [
          "Altinn"
        ],
        "description": "get-a07-response Action",
        "parameters": [
          {
            "name": "receiptID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/A07Response"
                }
              }
            }
          }
        }
      }
    },
    "/altinn?action=setpassword": {
      "put": {
        "tags": [
          "Altinn"
        ],
        "description": "setpassword Action",
        "parameters": [
          {
            "name": "password",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/altinn?action=getpassword": {
      "get": {
        "tags": [
          "Altinn"
        ],
        "description": "getpassword Action",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/altinn?action=checklogin": {
      "get": {
        "tags": [
          "Altinn"
        ],
        "description": "checklogin Action",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/altinn?action=send-barnepass": {
      "post": {
        "tags": [
          "Altinn"
        ],
        "description": "send-barnepass Action",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Barnepass"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AltinnReceipt"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "request"
      }
    },
    "/altinn?action=is-barnepass-sendt": {
      "get": {
        "tags": [
          "Altinn"
        ],
        "description": "is-barnepass-sendt Action",
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/altinn?action=get-barnepass": {
      "get": {
        "tags": [
          "Altinn"
        ],
        "description": "get-barnepass Action",
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Barnepass"
                }
              }
            }
          }
        }
      }
    },
    "/altinn/{id}?action=email-barnepass-to-customers": {
      "put": {
        "tags": [
          "Altinn"
        ],
        "description": "email-barnepass-to-customers Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "ssns"
      }
    },
    "/altinn?action=send-selfemployed": {
      "post": {
        "tags": [
          "Altinn"
        ],
        "description": "send-selfemployed Action",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SelfEmployed"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AltinnReceipt"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "request"
      }
    },
    "/altinn/{id}": {
      "get": {
        "tags": [
          "Altinn"
        ],
        "description": "Get Altinn",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Altinn"
        ],
        "description": "Update Altinn",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Altinn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Altinn"
      },
      "delete": {
        "tags": [
          "Altinn"
        ],
        "description": "Delete Altinn",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn"
                }
              }
            }
          }
        }
      }
    },
    "/altinn": {
      "get": {
        "tags": [
          "Altinn"
        ],
        "description": "Query Altinn",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Altinn"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Altinn"
        ],
        "description": "Create Altinn",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Altinn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Altinn"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Altinn"
      }
    },
    "/altinnreceipts/{id}?action=update": {
      "put": {
        "tags": [
          "AltinnReceipt"
        ],
        "description": "update Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AltinnReceipt"
                }
              }
            }
          }
        }
      }
    },
    "/altinnreceipts/{id}": {
      "get": {
        "tags": [
          "AltinnReceipt"
        ],
        "description": "Get AltinnReceipt",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AltinnReceipt"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AltinnReceipt"
        ],
        "description": "Update AltinnReceipt",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AltinnReceipt"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AltinnReceipt"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "AltinnReceipt"
      }
    },
    "/altinnreceipts": {
      "get": {
        "tags": [
          "AltinnReceipt"
        ],
        "description": "Query AltinnReceipt",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AltinnReceipt"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "AltinnReceipt"
        ],
        "description": "Create AltinnReceipt",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AltinnReceipt"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AltinnReceipt"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "AltinnReceipt"
      }
    },
    "/altinnsigning/{id}?action=sign": {
      "post": {
        "tags": [
          "AltinnSigning"
        ],
        "description": "sign Transition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/altinnsigning/{id}": {
      "get": {
        "tags": [
          "AltinnSigning"
        ],
        "description": "Get AltinnSigning",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AltinnSigning"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AltinnSigning"
        ],
        "description": "Update AltinnSigning",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AltinnSigning"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AltinnSigning"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "AltinnSigning"
      },
      "delete": {
        "tags": [
          "AltinnSigning"
        ],
        "description": "Delete AltinnSigning",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AltinnSigning"
                }
              }
            }
          }
        }
      }
    },
    "/altinnsigning": {
      "get": {
        "tags": [
          "AltinnSigning"
        ],
        "description": "Query AltinnSigning",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AltinnSigning"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "AltinnSigning"
        ],
        "description": "Create AltinnSigning",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AltinnSigning"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AltinnSigning"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "AltinnSigning"
      }
    },
    "/apikeys?action=setintegrationkey": {
      "put": {
        "tags": [
          "ApiKey"
        ],
        "description": "setintegrationkey Action",
        "parameters": [
          {
            "name": "integrationID",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "integrationkey",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/apikeys?action=set-integration-data": {
      "put": {
        "tags": [
          "ApiKey"
        ],
        "description": "set-integration-data Action",
        "parameters": [
          {
            "name": "integrationID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetIntegrationDataDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "data"
      }
    },
    "/apikeys?action=get-integration-key": {
      "get": {
        "tags": [
          "ApiKey"
        ],
        "description": "get-integration-key Action",
        "parameters": [
          {
            "name": "integrationID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/apikeys?action=set-integration-status": {
      "put": {
        "tags": [
          "ApiKey"
        ],
        "description": "set-integration-status Action",
        "parameters": [
          {
            "name": "integrationID",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "statusCode",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/apikeys/{id}": {
      "get": {
        "tags": [
          "ApiKey"
        ],
        "description": "Get ApiKey",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKey"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ApiKey"
        ],
        "description": "Update ApiKey",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiKey"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKey"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "ApiKey"
      },
      "delete": {
        "tags": [
          "ApiKey"
        ],
        "description": "Delete ApiKey",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKey"
                }
              }
            }
          }
        }
      }
    },
    "/apikeys": {
      "get": {
        "tags": [
          "ApiKey"
        ],
        "description": "Query ApiKey",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiKey"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ApiKey"
        ],
        "description": "Create ApiKey",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiKey"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKey"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "ApiKey"
      }
    },
    "/companysettings/{id}?action=update-logo": {
      "post": {
        "tags": [
          "CompanySettings"
        ],
        "description": "update-logo Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "logoFileId",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/companysettings/{id}?action=accept-ocr-agreement": {
      "post": {
        "tags": [
          "CompanySettings"
        ],
        "description": "accept-ocr-agreement Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/companysettings/{id}?action=ocr-trial-used": {
      "post": {
        "tags": [
          "CompanySettings"
        ],
        "description": "ocr-trial-used Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/companysettings/{id}?action=reject-ocr-agreement": {
      "post": {
        "tags": [
          "CompanySettings"
        ],
        "description": "reject-ocr-agreement Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/companysettings?action=change-period-series": {
      "post": {
        "tags": [
          "CompanySettings"
        ],
        "description": "change-period-series Action",
        "parameters": [
          {
            "name": "periodSeriesID",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "accountYear",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/companysettings?action=exists": {
      "get": {
        "tags": [
          "CompanySettings"
        ],
        "description": "exists Action",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/companysettings?action=fill-in-from-brreg": {
      "get": {
        "tags": [
          "CompanySettings"
        ],
        "description": "fill-in-from-brreg Action",
        "parameters": [
          {
            "name": "orgNumber",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanySettings"
                }
              }
            }
          }
        }
      }
    },
    "/companysettings/{id}?action=activate-einvoice": {
      "put": {
        "tags": [
          "CompanySettings"
        ],
        "description": "activate-einvoice Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/companysettings/{id}": {
      "get": {
        "tags": [
          "CompanySettings"
        ],
        "description": "Get CompanySettings",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanySettings"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CompanySettings"
        ],
        "description": "Update CompanySettings",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanySettings"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanySettings"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "CompanySettings"
      },
      "delete": {
        "tags": [
          "CompanySettings"
        ],
        "description": "Delete CompanySettings",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanySettings"
                }
              }
            }
          }
        }
      }
    },
    "/companysettings": {
      "get": {
        "tags": [
          "CompanySettings"
        ],
        "description": "Query CompanySettings",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanySettings"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CompanySettings"
        ],
        "description": "Create CompanySettings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanySettings"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanySettings"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "CompanySettings"
      }
    },
    "/companytypes/{id}": {
      "get": {
        "tags": [
          "CompanyType"
        ],
        "description": "Get CompanyType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyType"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CompanyType"
        ],
        "description": "Update CompanyType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyType"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyType"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "CompanyType"
      },
      "delete": {
        "tags": [
          "CompanyType"
        ],
        "description": "Delete CompanyType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyType"
                }
              }
            }
          }
        }
      }
    },
    "/companytypes": {
      "get": {
        "tags": [
          "CompanyType"
        ],
        "description": "Query CompanyType",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyType"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CompanyType"
        ],
        "description": "Create CompanyType",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyType"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyType"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "CompanyType"
      }
    },
    "/countries?action=get-by-countrycode": {
      "get": {
        "tags": [
          "Country"
        ],
        "description": "get-by-countrycode Action",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Country"
                }
              }
            }
          }
        }
      }
    },
    "/countries/{id}": {
      "get": {
        "tags": [
          "Country"
        ],
        "description": "Get Country",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Country"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Country"
        ],
        "description": "Update Country",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Country"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Country"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Country"
      },
      "delete": {
        "tags": [
          "Country"
        ],
        "description": "Delete Country",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Country"
                }
              }
            }
          }
        }
      }
    },
    "/countries": {
      "get": {
        "tags": [
          "Country"
        ],
        "description": "Query Country",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Country"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Country"
        ],
        "description": "Create Country",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Country"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Country"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Country"
      }
    },
    "/currencycodes/{id}": {
      "get": {
        "tags": [
          "CurrencyCode"
        ],
        "description": "Get CurrencyCode",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrencyCode"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CurrencyCode"
        ],
        "description": "Update CurrencyCode",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CurrencyCode"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrencyCode"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "CurrencyCode"
      },
      "delete": {
        "tags": [
          "CurrencyCode"
        ],
        "description": "Delete CurrencyCode",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrencyCode"
                }
              }
            }
          }
        }
      }
    },
    "/currencycodes": {
      "get": {
        "tags": [
          "CurrencyCode"
        ],
        "description": "Query CurrencyCode",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CurrencyCode"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CurrencyCode"
        ],
        "description": "Create CurrencyCode",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CurrencyCode"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrencyCode"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "CurrencyCode"
      }
    },
    "/currencies?action=get-all-exchange-rates": {
      "get": {
        "tags": [
          "Currency"
        ],
        "description": "get-all-exchange-rates Action",
        "parameters": [
          {
            "name": "toCurrencyCodeID",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "currencyDate",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CurrencyRateData"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/currencies?action=get-currency-exchange-rate": {
      "get": {
        "tags": [
          "Currency"
        ],
        "description": "get-currency-exchange-rate Action",
        "parameters": [
          {
            "name": "fromCurrencyCodeID",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "toCurrencyCodeID",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "currencyDate",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrencyRateData"
                }
              }
            }
          }
        }
      }
    },
    "/currencies?action=download-from-norgesbank": {
      "get": {
        "tags": [
          "Currency"
        ],
        "description": "download-from-norgesbank Action",
        "parameters": [
          {
            "name": "downloadFromDate",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/currencies?action=get-latest-currency-downloaded-date": {
      "get": {
        "tags": [
          "Currency"
        ],
        "description": "get-latest-currency-downloaded-date Action",
        "parameters": [
          {
            "name": "downloadSource",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/currencies/{id}": {
      "get": {
        "tags": [
          "Currency"
        ],
        "description": "Get Currency",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Currency"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Currency"
        ],
        "description": "Update Currency",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Currency"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Currency"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Currency"
      },
      "delete": {
        "tags": [
          "Currency"
        ],
        "description": "Delete Currency",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Currency"
                }
              }
            }
          }
        }
      }
    },
    "/currencies": {
      "get": {
        "tags": [
          "Currency"
        ],
        "description": "Query Currency",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Currency"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Currency"
        ],
        "description": "Create Currency",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Currency"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Currency"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Currency"
      }
    },
    "/currencyoverrides/{id}": {
      "get": {
        "tags": [
          "CurrencyOverride"
        ],
        "description": "Get CurrencyOverride",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrencyOverride"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CurrencyOverride"
        ],
        "description": "Update CurrencyOverride",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CurrencyOverride"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrencyOverride"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "CurrencyOverride"
      },
      "delete": {
        "tags": [
          "CurrencyOverride"
        ],
        "description": "Delete CurrencyOverride",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrencyOverride"
                }
              }
            }
          }
        }
      }
    },
    "/currencyoverrides": {
      "get": {
        "tags": [
          "CurrencyOverride"
        ],
        "description": "Query CurrencyOverride",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CurrencyOverride"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CurrencyOverride"
        ],
        "description": "Create CurrencyOverride",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CurrencyOverride"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrencyOverride"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "CurrencyOverride"
      }
    },
    "/dimensionsettings/{id}": {
      "get": {
        "tags": [
          "DimensionSettings"
        ],
        "description": "Get DimensionSettings",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DimensionSettings"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "DimensionSettings"
        ],
        "description": "Update DimensionSettings",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DimensionSettings"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DimensionSettings"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "DimensionSettings"
      },
      "delete": {
        "tags": [
          "DimensionSettings"
        ],
        "description": "Delete DimensionSettings",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DimensionSettings"
                }
              }
            }
          }
        }
      }
    },
    "/dimensionsettings": {
      "get": {
        "tags": [
          "DimensionSettings"
        ],
        "description": "Query DimensionSettings",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DimensionSettings"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "DimensionSettings"
        ],
        "description": "Create DimensionSettings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DimensionSettings"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DimensionSettings"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "DimensionSettings"
      }
    },
    "/distributions?action=distribute": {
      "put": {
        "tags": [
          "DistributionPlan"
        ],
        "description": "distribute Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "entityType",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/distributions?action=distribute-list": {
      "put": {
        "tags": [
          "DistributionPlan"
        ],
        "description": "distribute-list Action",
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "entityType",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/distributions?action=distribute-with-date-and-type": {
      "put": {
        "tags": [
          "DistributionPlan"
        ],
        "description": "distribute-with-date-and-type Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "entityType",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "distributionType",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "distributeDate",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/distributions?action=distribute-with-date": {
      "put": {
        "tags": [
          "DistributionPlan"
        ],
        "description": "distribute-with-date Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "entityType",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "distributeDate",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/distributions?action=distribute-with-type": {
      "put": {
        "tags": [
          "DistributionPlan"
        ],
        "description": "distribute-with-type Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "entityType",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "distributionType",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailDTO"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "emailDTO"
      }
    },
    "/distributions?action=entities-with-distribution": {
      "get": {
        "tags": [
          "DistributionPlan"
        ],
        "description": "entities-with-distribution Action",
        "parameters": [
          {
            "name": "entityIds",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "entityType",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          }
        }
      }
    },
    "/distributions?action=get-entitytype-list": {
      "get": {
        "tags": [
          "DistributionPlan"
        ],
        "description": "get-entitytype-list Action",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/distributions?action=get-entitytype-distributionplans": {
      "get": {
        "tags": [
          "DistributionPlan"
        ],
        "description": "get-entitytype-distributionplans Action",
        "parameters": [
          {
            "name": "entityType",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DistributionPlan"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/distributions?action=get-legal-elementtypes": {
      "get": {
        "tags": [
          "DistributionPlan"
        ],
        "description": "get-legal-elementtypes Action",
        "parameters": [
          {
            "name": "entityType",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DistributionPlanElementType"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/distributions?action=get-valid-distributions": {
      "get": {
        "tags": [
          "DistributionPlan"
        ],
        "description": "get-valid-distributions Action",
        "parameters": [
          {
            "name": "planId",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "invoiceId",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DistributionPlanElementValidation"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/distributions?action=get-valid-distributions-for-customer": {
      "get": {
        "tags": [
          "DistributionPlan"
        ],
        "description": "get-valid-distributions-for-customer Action",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DistributionPlanElementValidation"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/distributions?action=is-valid-distribution": {
      "get": {
        "tags": [
          "DistributionPlan"
        ],
        "description": "is-valid-distribution Action",
        "parameters": [
          {
            "name": "invoiceId",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "planElementType",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DistributionPlanElementValidation"
                }
              }
            }
          }
        }
      }
    },
    "/distributions?action=get-first-valid-distribution": {
      "get": {
        "tags": [
          "DistributionPlan"
        ],
        "description": "get-first-valid-distribution Action",
        "parameters": [
          {
            "name": "planId",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "invoiceId",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DistributionPlanElementValidation"
                }
              }
            }
          }
        }
      }
    },
    "/distributions?action=get-distributionplanelement-errormap": {
      "get": {
        "tags": [
          "DistributionPlan"
        ],
        "description": "get-distributionplanelement-errormap Action",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/distributions/{id}": {
      "get": {
        "tags": [
          "DistributionPlan"
        ],
        "description": "Get DistributionPlan",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DistributionPlan"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "DistributionPlan"
        ],
        "description": "Update DistributionPlan",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DistributionPlan"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DistributionPlan"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "DistributionPlan"
      },
      "delete": {
        "tags": [
          "DistributionPlan"
        ],
        "description": "Delete DistributionPlan",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DistributionPlan"
                }
              }
            }
          }
        }
      }
    },
    "/distributions": {
      "get": {
        "tags": [
          "DistributionPlan"
        ],
        "description": "Query DistributionPlan",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DistributionPlan"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "DistributionPlan"
        ],
        "description": "Create DistributionPlan",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DistributionPlan"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DistributionPlan"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "DistributionPlan"
      }
    },
    "/emails?action=send": {
      "post": {
        "tags": [
          "EmailLog"
        ],
        "description": "send Action",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendEmail"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "email"
      }
    },
    "/emails/{id}": {
      "get": {
        "tags": [
          "EmailLog"
        ],
        "description": "Get EmailLog",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailLog"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "EmailLog"
        ],
        "description": "Update EmailLog",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailLog"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailLog"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "EmailLog"
      },
      "delete": {
        "tags": [
          "EmailLog"
        ],
        "description": "Delete EmailLog",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailLog"
                }
              }
            }
          }
        }
      }
    },
    "/emails": {
      "get": {
        "tags": [
          "EmailLog"
        ],
        "description": "Query EmailLog",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmailLog"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "EmailLog"
        ],
        "description": "Create EmailLog",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailLog"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailLog"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "EmailLog"
      }
    },
    "/employmentvalidvalues/{id}": {
      "get": {
        "tags": [
          "EmploymentValidValues"
        ],
        "description": "Get EmploymentValidValues",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmploymentValidValues"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "EmploymentValidValues"
        ],
        "description": "Update EmploymentValidValues",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmploymentValidValues"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmploymentValidValues"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "EmploymentValidValues"
      },
      "delete": {
        "tags": [
          "EmploymentValidValues"
        ],
        "description": "Delete EmploymentValidValues",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmploymentValidValues"
                }
              }
            }
          }
        }
      }
    },
    "/employmentvalidvalues": {
      "get": {
        "tags": [
          "EmploymentValidValues"
        ],
        "description": "Query EmploymentValidValues",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmploymentValidValues"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "EmploymentValidValues"
        ],
        "description": "Create EmploymentValidValues",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmploymentValidValues"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmploymentValidValues"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "EmploymentValidValues"
      }
    },
    "/eventplans/{id}": {
      "get": {
        "tags": [
          "Eventplan"
        ],
        "description": "Get Eventplan",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Eventplan"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Eventplan"
        ],
        "description": "Update Eventplan",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Eventplan"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Eventplan"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Eventplan"
      },
      "delete": {
        "tags": [
          "Eventplan"
        ],
        "description": "Delete Eventplan",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Eventplan"
                }
              }
            }
          }
        }
      }
    },
    "/eventplans": {
      "get": {
        "tags": [
          "Eventplan"
        ],
        "description": "Query Eventplan",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Eventplan"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Eventplan"
        ],
        "description": "Create Eventplan",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Eventplan"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Eventplan"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Eventplan"
      }
    },
    "/eventsubscribers/{id}": {
      "get": {
        "tags": [
          "EventSubscriber"
        ],
        "description": "Get EventSubscriber",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventSubscriber"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "EventSubscriber"
        ],
        "description": "Update EventSubscriber",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventSubscriber"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventSubscriber"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "EventSubscriber"
      },
      "delete": {
        "tags": [
          "EventSubscriber"
        ],
        "description": "Delete EventSubscriber",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventSubscriber"
                }
              }
            }
          }
        }
      }
    },
    "/eventsubscribers": {
      "get": {
        "tags": [
          "EventSubscriber"
        ],
        "description": "Query EventSubscriber",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventSubscriber"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "EventSubscriber"
        ],
        "description": "Create EventSubscriber",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventSubscriber"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventSubscriber"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "EventSubscriber"
      }
    },
    "/expressionfilters/{id}": {
      "get": {
        "tags": [
          "ExpressionFilter"
        ],
        "description": "Get ExpressionFilter",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpressionFilter"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ExpressionFilter"
        ],
        "description": "Update ExpressionFilter",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExpressionFilter"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpressionFilter"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "ExpressionFilter"
      },
      "delete": {
        "tags": [
          "ExpressionFilter"
        ],
        "description": "Delete ExpressionFilter",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpressionFilter"
                }
              }
            }
          }
        }
      }
    },
    "/expressionfilters": {
      "get": {
        "tags": [
          "ExpressionFilter"
        ],
        "description": "Query ExpressionFilter",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExpressionFilter"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ExpressionFilter"
        ],
        "description": "Create ExpressionFilter",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExpressionFilter"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpressionFilter"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "ExpressionFilter"
      }
    },
    "/MunicipalAGAZones/{id}": {
      "get": {
        "tags": [
          "MunicipalAGAZone"
        ],
        "description": "Get MunicipalAGAZone",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MunicipalAGAZone"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "MunicipalAGAZone"
        ],
        "description": "Update MunicipalAGAZone",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MunicipalAGAZone"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MunicipalAGAZone"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "MunicipalAGAZone"
      },
      "delete": {
        "tags": [
          "MunicipalAGAZone"
        ],
        "description": "Delete MunicipalAGAZone",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MunicipalAGAZone"
                }
              }
            }
          }
        }
      }
    },
    "/MunicipalAGAZones": {
      "get": {
        "tags": [
          "MunicipalAGAZone"
        ],
        "description": "Query MunicipalAGAZone",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MunicipalAGAZone"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "MunicipalAGAZone"
        ],
        "description": "Create MunicipalAGAZone",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MunicipalAGAZone"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MunicipalAGAZone"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "MunicipalAGAZone"
      }
    },
    "/Municipals/{id}": {
      "get": {
        "tags": [
          "Municipal"
        ],
        "description": "Get Municipal",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Municipal"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Municipal"
        ],
        "description": "Update Municipal",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Municipal"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Municipal"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Municipal"
      },
      "delete": {
        "tags": [
          "Municipal"
        ],
        "description": "Delete Municipal",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Municipal"
                }
              }
            }
          }
        }
      }
    },
    "/Municipals": {
      "get": {
        "tags": [
          "Municipal"
        ],
        "description": "Query Municipal",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Municipal"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Municipal"
        ],
        "description": "Create Municipal",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Municipal"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Municipal"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Municipal"
      }
    },
    "/paymentCodes/{id}": {
      "get": {
        "tags": [
          "PaymentCode"
        ],
        "description": "Get PaymentCode",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentCode"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PaymentCode"
        ],
        "description": "Update PaymentCode",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentCode"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentCode"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "PaymentCode"
      },
      "delete": {
        "tags": [
          "PaymentCode"
        ],
        "description": "Delete PaymentCode",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentCode"
                }
              }
            }
          }
        }
      }
    },
    "/paymentCodes": {
      "get": {
        "tags": [
          "PaymentCode"
        ],
        "description": "Query PaymentCode",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentCode"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PaymentCode"
        ],
        "description": "Create PaymentCode",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentCode"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentCode"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "PaymentCode"
      }
    },
    "/periodes/{id}": {
      "get": {
        "tags": [
          "Period"
        ],
        "description": "Get Period",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Period"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Period"
        ],
        "description": "Update Period",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Period"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Period"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Period"
      },
      "delete": {
        "tags": [
          "Period"
        ],
        "description": "Delete Period",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Period"
                }
              }
            }
          }
        }
      }
    },
    "/periodes": {
      "get": {
        "tags": [
          "Period"
        ],
        "description": "Query Period",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Period"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Period"
        ],
        "description": "Create Period",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Period"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Period"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Period"
      }
    },
    "/period-series/{id}": {
      "get": {
        "tags": [
          "PeriodSeries"
        ],
        "description": "Get PeriodSeries",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PeriodSeries"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PeriodSeries"
        ],
        "description": "Update PeriodSeries",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PeriodSeries"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PeriodSeries"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "PeriodSeries"
      },
      "delete": {
        "tags": [
          "PeriodSeries"
        ],
        "description": "Delete PeriodSeries",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PeriodSeries"
                }
              }
            }
          }
        }
      }
    },
    "/period-series": {
      "get": {
        "tags": [
          "PeriodSeries"
        ],
        "description": "Query PeriodSeries",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PeriodSeries"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PeriodSeries"
        ],
        "description": "Create PeriodSeries",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PeriodSeries"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PeriodSeries"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "PeriodSeries"
      }
    },
    "/period-templates/{id}": {
      "get": {
        "tags": [
          "PeriodTemplate"
        ],
        "description": "Get PeriodTemplate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PeriodTemplate"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PeriodTemplate"
        ],
        "description": "Update PeriodTemplate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PeriodTemplate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PeriodTemplate"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "PeriodTemplate"
      },
      "delete": {
        "tags": [
          "PeriodTemplate"
        ],
        "description": "Delete PeriodTemplate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PeriodTemplate"
                }
              }
            }
          }
        }
      }
    },
    "/period-templates": {
      "get": {
        "tags": [
          "PeriodTemplate"
        ],
        "description": "Query PeriodTemplate",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PeriodTemplate"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PeriodTemplate"
        ],
        "description": "Create PeriodTemplate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PeriodTemplate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PeriodTemplate"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "PeriodTemplate"
      }
    },
    "/postalcodes/{id}": {
      "get": {
        "tags": [
          "PostalCode"
        ],
        "description": "Get PostalCode",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostalCode"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PostalCode"
        ],
        "description": "Update PostalCode",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostalCode"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostalCode"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "PostalCode"
      },
      "delete": {
        "tags": [
          "PostalCode"
        ],
        "description": "Delete PostalCode",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostalCode"
                }
              }
            }
          }
        }
      }
    },
    "/postalcodes": {
      "get": {
        "tags": [
          "PostalCode"
        ],
        "description": "Query PostalCode",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PostalCode"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PostalCode"
        ],
        "description": "Create PostalCode",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostalCode"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostalCode"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "PostalCode"
      }
    },
    "/predefineddescriptions?action=get-predefined-description": {
      "get": {
        "tags": [
          "PredefinedDescription"
        ],
        "description": "get-predefined-description Action",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "type",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PredefinedDescription"
                }
              }
            }
          }
        }
      }
    },
    "/predefineddescriptions?action=get-predefined-descriptions": {
      "get": {
        "tags": [
          "PredefinedDescription"
        ],
        "description": "get-predefined-descriptions Action",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/predefineddescriptions/{id}": {
      "get": {
        "tags": [
          "PredefinedDescription"
        ],
        "description": "Get PredefinedDescription",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PredefinedDescription"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PredefinedDescription"
        ],
        "description": "Update PredefinedDescription",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PredefinedDescription"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PredefinedDescription"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "PredefinedDescription"
      },
      "delete": {
        "tags": [
          "PredefinedDescription"
        ],
        "description": "Delete PredefinedDescription",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PredefinedDescription"
                }
              }
            }
          }
        }
      }
    },
    "/predefineddescriptions": {
      "get": {
        "tags": [
          "PredefinedDescription"
        ],
        "description": "Query PredefinedDescription",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PredefinedDescription"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PredefinedDescription"
        ],
        "description": "Create PredefinedDescription",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PredefinedDescription"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PredefinedDescription"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "PredefinedDescription"
      }
    },
    "/rss?action=rss": {
      "get": {
        "tags": [
          "RssList"
        ],
        "description": "rss Action",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RssList"
                }
              }
            }
          }
        }
      }
    },
    "/rss/{id}": {
      "get": {
        "tags": [
          "RssList"
        ],
        "description": "Get RssList",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RssList"
                }
              }
            }
          }
        }
      }
    },
    "/rss": {},
    "/salaryvalidvalues?action=getall": {
      "get": {
        "tags": [
          "code"
        ],
        "description": "getall Action",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/salaryvalidvalues/{id}": {},
    "/salaryvalidvalues": {},
    "/salaryvalidvalue/types?action=getall": {
      "get": {
        "tags": [
          "String"
        ],
        "description": "getall Action",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/salaryvalidvalue/types/{id}": {},
    "/salaryvalidvalue/types": {},
    "/sharings/{id}?action=Cancel": {
      "post": {
        "tags": [
          "Sharing"
        ],
        "description": "Cancel Transition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/sharings?action=bulkupdate": {
      "put": {
        "tags": [
          "Sharing"
        ],
        "description": "bulkupdate Action",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SharingUpdates"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "sharings"
      }
    },
    "/sharings/{id}": {
      "get": {
        "tags": [
          "Sharing"
        ],
        "description": "Get Sharing",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Sharing"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Sharing"
        ],
        "description": "Update Sharing",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Sharing"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Sharing"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Sharing"
      }
    },
    "/sharings": {
      "get": {
        "tags": [
          "Sharing"
        ],
        "description": "Query Sharing",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Sharing"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Sharing"
        ],
        "description": "Create Sharing",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Sharing"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Sharing"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Sharing"
      }
    },
    "/StaticRegister/{id}": {
      "get": {
        "tags": [
          "StaticRegister"
        ],
        "description": "Get StaticRegister",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StaticRegister"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "StaticRegister"
        ],
        "description": "Update StaticRegister",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StaticRegister"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StaticRegister"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "StaticRegister"
      },
      "delete": {
        "tags": [
          "StaticRegister"
        ],
        "description": "Delete StaticRegister",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StaticRegister"
                }
              }
            }
          }
        }
      }
    },
    "/StaticRegister": {
      "get": {
        "tags": [
          "StaticRegister"
        ],
        "description": "Query StaticRegister",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StaticRegister"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "StaticRegister"
        ],
        "description": "Create StaticRegister",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StaticRegister"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StaticRegister"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "StaticRegister"
      }
    },
    "/STYRK?action=refresh": {
      "put": {
        "tags": [
          "STYRKCode"
        ],
        "description": "refresh Action",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/STYRK/{id}": {
      "get": {
        "tags": [
          "STYRKCode"
        ],
        "description": "Get STYRKCode",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/STYRKCode"
                }
              }
            }
          }
        }
      }
    },
    "/STYRK": {
      "get": {
        "tags": [
          "STYRKCode"
        ],
        "description": "Query STYRKCode",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/STYRKCode"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/invoiceitems/{itemid}/tracelinks/{id}": {
      "get": {
        "tags": [
          "Tracelink"
        ],
        "description": "Get Tracelink",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tracelink"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Tracelink"
        ],
        "description": "Update Tracelink",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Tracelink"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tracelink"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Tracelink"
      },
      "delete": {
        "tags": [
          "Tracelink"
        ],
        "description": "Delete Tracelink",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tracelink"
                }
              }
            }
          }
        }
      }
    },
    "/invoiceitems/{itemid}/tracelinks": {
      "get": {
        "tags": [
          "Tracelink"
        ],
        "description": "Query Tracelink",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Tracelink"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tracelink"
        ],
        "description": "Create Tracelink",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Tracelink"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tracelink"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Tracelink"
      }
    },
    "/orderitems/{itemid}/tracelinks/{id}": {
      "get": {
        "tags": [
          "Tracelink"
        ],
        "description": "Get Tracelink",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tracelink"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Tracelink"
        ],
        "description": "Update Tracelink",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Tracelink"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tracelink"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Tracelink"
      },
      "delete": {
        "tags": [
          "Tracelink"
        ],
        "description": "Delete Tracelink",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tracelink"
                }
              }
            }
          }
        }
      }
    },
    "/orderitems/{itemid}/tracelinks": {
      "get": {
        "tags": [
          "Tracelink"
        ],
        "description": "Query Tracelink",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Tracelink"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tracelink"
        ],
        "description": "Create Tracelink",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Tracelink"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tracelink"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Tracelink"
      }
    },
    "/quoteitems/{itemid}/tracelinks/{id}": {
      "get": {
        "tags": [
          "Tracelink"
        ],
        "description": "Get Tracelink",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tracelink"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Tracelink"
        ],
        "description": "Update Tracelink",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Tracelink"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tracelink"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Tracelink"
      },
      "delete": {
        "tags": [
          "Tracelink"
        ],
        "description": "Delete Tracelink",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tracelink"
                }
              }
            }
          }
        }
      }
    },
    "/quoteitems/{itemid}/tracelinks": {
      "get": {
        "tags": [
          "Tracelink"
        ],
        "description": "Query Tracelink",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Tracelink"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tracelink"
        ],
        "description": "Create Tracelink",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Tracelink"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tracelink"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Tracelink"
      }
    },
    "/vatreportforms/{id}": {
      "get": {
        "tags": [
          "VatReportForm"
        ],
        "description": "Get VatReportForm",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VatReportForm"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "VatReportForm"
        ],
        "description": "Update VatReportForm",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VatReportForm"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VatReportForm"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "VatReportForm"
      },
      "delete": {
        "tags": [
          "VatReportForm"
        ],
        "description": "Delete VatReportForm",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VatReportForm"
                }
              }
            }
          }
        }
      }
    },
    "/vatreportforms": {
      "get": {
        "tags": [
          "VatReportForm"
        ],
        "description": "Query VatReportForm",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VatReportForm"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "VatReportForm"
        ],
        "description": "Create VatReportForm",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VatReportForm"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VatReportForm"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "VatReportForm"
      }
    },
    "/uniquerydefinitions?action=get-distinct-querydefinition-categories": {
      "get": {
        "tags": [
          "UniQueryDefinition"
        ],
        "description": "get-distinct-querydefinition-categories Action",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/uniquerydefinitions/{id}": {
      "get": {
        "tags": [
          "UniQueryDefinition"
        ],
        "description": "Get UniQueryDefinition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UniQueryDefinition"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "UniQueryDefinition"
        ],
        "description": "Update UniQueryDefinition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UniQueryDefinition"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UniQueryDefinition"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "UniQueryDefinition"
      },
      "delete": {
        "tags": [
          "UniQueryDefinition"
        ],
        "description": "Delete UniQueryDefinition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UniQueryDefinition"
                }
              }
            }
          }
        }
      }
    },
    "/uniquerydefinitions": {
      "get": {
        "tags": [
          "UniQueryDefinition"
        ],
        "description": "Query UniQueryDefinition",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UniQueryDefinition"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "UniQueryDefinition"
        ],
        "description": "Create UniQueryDefinition",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UniQueryDefinition"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UniQueryDefinition"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "UniQueryDefinition"
      }
    },
    "/uniqueryfields/{id}": {
      "get": {
        "tags": [
          "UniQueryField"
        ],
        "description": "Get UniQueryField",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UniQueryField"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "UniQueryField"
        ],
        "description": "Update UniQueryField",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UniQueryField"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UniQueryField"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "UniQueryField"
      },
      "delete": {
        "tags": [
          "UniQueryField"
        ],
        "description": "Delete UniQueryField",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UniQueryField"
                }
              }
            }
          }
        }
      }
    },
    "/uniqueryfields": {
      "get": {
        "tags": [
          "UniQueryField"
        ],
        "description": "Query UniQueryField",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UniQueryField"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "UniQueryField"
        ],
        "description": "Create UniQueryField",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UniQueryField"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UniQueryField"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "UniQueryField"
      }
    },
    "/uniqueryfilters/{id}": {
      "get": {
        "tags": [
          "UniQueryFilter"
        ],
        "description": "Get UniQueryFilter",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UniQueryFilter"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "UniQueryFilter"
        ],
        "description": "Update UniQueryFilter",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UniQueryFilter"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UniQueryFilter"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "UniQueryFilter"
      },
      "delete": {
        "tags": [
          "UniQueryFilter"
        ],
        "description": "Delete UniQueryFilter",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UniQueryFilter"
                }
              }
            }
          }
        }
      }
    },
    "/uniqueryfilters": {
      "get": {
        "tags": [
          "UniQueryFilter"
        ],
        "description": "Query UniQueryFilter",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UniQueryFilter"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "UniQueryFilter"
        ],
        "description": "Create UniQueryFilter",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UniQueryFilter"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UniQueryFilter"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "UniQueryFilter"
      }
    },
    "/teams/{id}?action=work-report": {
      "get": {
        "tags": [
          "Team"
        ],
        "description": "work-report Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamReport"
                }
              }
            }
          }
        }
      }
    },
    "/teams/{id}?action=my-teamposition": {
      "get": {
        "tags": [
          "Team"
        ],
        "description": "my-teamposition Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamPositionDto"
                }
              }
            }
          }
        }
      }
    },
    "/teams?action=my-teams": {
      "get": {
        "tags": [
          "Team"
        ],
        "description": "my-teams Action",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/teams?action=teampositions": {
      "get": {
        "tags": [
          "Team"
        ],
        "description": "teampositions Action",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/teams/{id}": {
      "get": {
        "tags": [
          "Team"
        ],
        "description": "Get Team",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Team"
        ],
        "description": "Update Team",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Team"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Team"
      },
      "delete": {
        "tags": [
          "Team"
        ],
        "description": "Delete Team",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                }
              }
            }
          }
        }
      }
    },
    "/teams": {
      "get": {
        "tags": [
          "Team"
        ],
        "description": "Query Team",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Team"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Team"
        ],
        "description": "Create Team",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Team"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Team"
      }
    },
    "/teampositions/{id}": {
      "get": {
        "tags": [
          "TeamPosition"
        ],
        "description": "Get TeamPosition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamPosition"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "TeamPosition"
        ],
        "description": "Update TeamPosition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TeamPosition"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamPosition"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "TeamPosition"
      },
      "delete": {
        "tags": [
          "TeamPosition"
        ],
        "description": "Delete TeamPosition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamPosition"
                }
              }
            }
          }
        }
      }
    },
    "/teampositions": {
      "get": {
        "tags": [
          "TeamPosition"
        ],
        "description": "Query TeamPosition",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TeamPosition"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "TeamPosition"
        ],
        "description": "Create TeamPosition",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TeamPosition"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamPosition"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "TeamPosition"
      }
    },
    "/transitions/{id}": {
      "get": {
        "tags": [
          "Transition"
        ],
        "description": "Get Transition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transition"
                }
              }
            }
          }
        }
      }
    },
    "/transitions": {
      "get": {
        "tags": [
          "Transition"
        ],
        "description": "Query Transition",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Transition"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/company-report/{id}": {
      "get": {
        "tags": [
          "CompanyReport"
        ],
        "description": "Get CompanyReport",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyReport"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CompanyReport"
        ],
        "description": "Update CompanyReport",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyReport"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyReport"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "CompanyReport"
      },
      "delete": {
        "tags": [
          "CompanyReport"
        ],
        "description": "Delete CompanyReport",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyReport"
                }
              }
            }
          }
        }
      }
    },
    "/company-report": {
      "get": {
        "tags": [
          "CompanyReport"
        ],
        "description": "Query CompanyReport",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyReport"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CompanyReport"
        ],
        "description": "Create CompanyReport",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyReport"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyReport"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "CompanyReport"
      }
    },
    "/report-definitions?action=get-all-reports": {
      "get": {
        "tags": [
          "ReportDefinition"
        ],
        "description": "get-all-reports Action",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/report-definitions?action=get-custom-reports": {
      "get": {
        "tags": [
          "ReportDefinition"
        ],
        "description": "get-custom-reports Action",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/report-definitions?action=load-reports": {
      "get": {
        "tags": [
          "ReportDefinition"
        ],
        "description": "load-reports Action",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/report-definitions/{id}?action=clear-report-cache": {
      "delete": {
        "tags": [
          "ReportDefinition"
        ],
        "description": "clear-report-cache Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/report-definitions/{id}": {
      "get": {
        "tags": [
          "ReportDefinition"
        ],
        "description": "Get ReportDefinition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportDefinition"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ReportDefinition"
        ],
        "description": "Update ReportDefinition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportDefinition"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportDefinition"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "ReportDefinition"
      },
      "delete": {
        "tags": [
          "ReportDefinition"
        ],
        "description": "Delete ReportDefinition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportDefinition"
                }
              }
            }
          }
        }
      }
    },
    "/report-definitions": {
      "get": {
        "tags": [
          "ReportDefinition"
        ],
        "description": "Query ReportDefinition",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReportDefinition"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ReportDefinition"
        ],
        "description": "Create ReportDefinition",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportDefinition"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportDefinition"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "ReportDefinition"
      }
    },
    "/report-definition-data-sources/{id}": {
      "get": {
        "tags": [
          "ReportDefinitionDataSource"
        ],
        "description": "Get ReportDefinitionDataSource",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportDefinitionDataSource"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ReportDefinitionDataSource"
        ],
        "description": "Update ReportDefinitionDataSource",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportDefinitionDataSource"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportDefinitionDataSource"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "ReportDefinitionDataSource"
      },
      "delete": {
        "tags": [
          "ReportDefinitionDataSource"
        ],
        "description": "Delete ReportDefinitionDataSource",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportDefinitionDataSource"
                }
              }
            }
          }
        }
      }
    },
    "/report-definition-data-sources": {
      "get": {
        "tags": [
          "ReportDefinitionDataSource"
        ],
        "description": "Query ReportDefinitionDataSource",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReportDefinitionDataSource"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ReportDefinitionDataSource"
        ],
        "description": "Create ReportDefinitionDataSource",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportDefinitionDataSource"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportDefinitionDataSource"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "ReportDefinitionDataSource"
      }
    },
    "/report-definition-parameters/{id}": {
      "get": {
        "tags": [
          "ReportDefinitionParameter"
        ],
        "description": "Get ReportDefinitionParameter",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportDefinitionParameter"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ReportDefinitionParameter"
        ],
        "description": "Update ReportDefinitionParameter",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportDefinitionParameter"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportDefinitionParameter"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "ReportDefinitionParameter"
      },
      "delete": {
        "tags": [
          "ReportDefinitionParameter"
        ],
        "description": "Delete ReportDefinitionParameter",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportDefinitionParameter"
                }
              }
            }
          }
        }
      }
    },
    "/report-definition-parameters": {
      "get": {
        "tags": [
          "ReportDefinitionParameter"
        ],
        "description": "Query ReportDefinitionParameter",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReportDefinitionParameter"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ReportDefinitionParameter"
        ],
        "description": "Create ReportDefinitionParameter",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportDefinitionParameter"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportDefinitionParameter"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "ReportDefinitionParameter"
      }
    },
    "/projects?action=all-with-isUsed-prop": {
      "get": {
        "tags": [
          "Project"
        ],
        "description": "all-with-isUsed-prop Action",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{id}?action=is-used": {
      "get": {
        "tags": [
          "Project"
        ],
        "description": "is-used Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{id}?action=StartProject": {
      "post": {
        "tags": [
          "Project"
        ],
        "description": "StartProject Transition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "projectID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{id}?action=InitiateProject": {
      "post": {
        "tags": [
          "Project"
        ],
        "description": "InitiateProject Transition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "projectID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{id}?action=CompleteProject": {
      "post": {
        "tags": [
          "Project"
        ],
        "description": "CompleteProject Transition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "projectID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{id}?action=DiscardProject": {
      "post": {
        "tags": [
          "Project"
        ],
        "description": "DiscardProject Transition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "projectID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{id}": {
      "get": {
        "tags": [
          "Project"
        ],
        "description": "Get Project",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Project"
        ],
        "description": "Update Project",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Project"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Project"
      },
      "delete": {
        "tags": [
          "Project"
        ],
        "description": "Delete Project",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          }
        }
      }
    },
    "/projects": {
      "get": {
        "tags": [
          "Project"
        ],
        "description": "Query Project",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Project"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Project"
        ],
        "description": "Create Project",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Project"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Project"
      }
    },
    "/projects-resources/{id}": {
      "get": {
        "tags": [
          "ProjectResource"
        ],
        "description": "Get ProjectResource",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectResource"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProjectResource"
        ],
        "description": "Update ProjectResource",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectResource"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectResource"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "ProjectResource"
      },
      "delete": {
        "tags": [
          "ProjectResource"
        ],
        "description": "Delete ProjectResource",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectResource"
                }
              }
            }
          }
        }
      }
    },
    "/projects-resources": {
      "get": {
        "tags": [
          "ProjectResource"
        ],
        "description": "Query ProjectResource",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectResource"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ProjectResource"
        ],
        "description": "Create ProjectResource",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectResource"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectResource"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "ProjectResource"
      }
    },
    "/projects-schedules-resources/{id}": {
      "get": {
        "tags": [
          "ProjectResourceSchedule"
        ],
        "description": "Get ProjectResourceSchedule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectResourceSchedule"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProjectResourceSchedule"
        ],
        "description": "Update ProjectResourceSchedule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectResourceSchedule"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectResourceSchedule"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "ProjectResourceSchedule"
      },
      "delete": {
        "tags": [
          "ProjectResourceSchedule"
        ],
        "description": "Delete ProjectResourceSchedule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectResourceSchedule"
                }
              }
            }
          }
        }
      }
    },
    "/projects-schedules-resources": {
      "get": {
        "tags": [
          "ProjectResourceSchedule"
        ],
        "description": "Query ProjectResourceSchedule",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectResourceSchedule"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ProjectResourceSchedule"
        ],
        "description": "Create ProjectResourceSchedule",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectResourceSchedule"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectResourceSchedule"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "ProjectResourceSchedule"
      }
    },
    "/projects-tasks/{id}?action=ActivateProjectTask": {
      "post": {
        "tags": [
          "ProjectTask"
        ],
        "description": "ActivateProjectTask Transition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "projectTaskID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/projects-tasks/{id}?action=CompleteProjectTask": {
      "post": {
        "tags": [
          "ProjectTask"
        ],
        "description": "CompleteProjectTask Transition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "projectTaskID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/projects-tasks/{id}": {
      "get": {
        "tags": [
          "ProjectTask"
        ],
        "description": "Get ProjectTask",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTask"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProjectTask"
        ],
        "description": "Update ProjectTask",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectTask"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTask"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "ProjectTask"
      },
      "delete": {
        "tags": [
          "ProjectTask"
        ],
        "description": "Delete ProjectTask",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTask"
                }
              }
            }
          }
        }
      }
    },
    "/projects-tasks": {
      "get": {
        "tags": [
          "ProjectTask"
        ],
        "description": "Query ProjectTask",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectTask"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ProjectTask"
        ],
        "description": "Create ProjectTask",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectTask"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTask"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "ProjectTask"
      }
    },
    "/projects-tasks-schedules/{id}": {
      "get": {
        "tags": [
          "ProjectTaskSchedule"
        ],
        "description": "Get ProjectTaskSchedule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTaskSchedule"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProjectTaskSchedule"
        ],
        "description": "Update ProjectTaskSchedule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectTaskSchedule"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTaskSchedule"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "ProjectTaskSchedule"
      },
      "delete": {
        "tags": [
          "ProjectTaskSchedule"
        ],
        "description": "Delete ProjectTaskSchedule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTaskSchedule"
                }
              }
            }
          }
        }
      }
    },
    "/projects-tasks-schedules": {
      "get": {
        "tags": [
          "ProjectTaskSchedule"
        ],
        "description": "Query ProjectTaskSchedule",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectTaskSchedule"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ProjectTaskSchedule"
        ],
        "description": "Create ProjectTaskSchedule",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectTaskSchedule"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTaskSchedule"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "ProjectTaskSchedule"
      }
    },
    "/ehf?action=activate": {
      "post": {
        "tags": [
          "EHFLog"
        ],
        "description": "activate Action",
        "parameters": [
          {
            "name": "service",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "direction",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EHFCustomer"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "customer"
      }
    },
    "/ehf?action=deactivate": {
      "post": {
        "tags": [
          "EHFLog"
        ],
        "description": "deactivate Action",
        "parameters": [
          {
            "name": "service",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/ehf?action=is-ehf-receiver": {
      "get": {
        "tags": [
          "EHFLog"
        ],
        "description": "is-ehf-receiver Action",
        "parameters": [
          {
            "name": "peppoladdress",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "entitytype",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/ehf?action=servicemetadata": {
      "get": {
        "tags": [
          "EHFLog"
        ],
        "description": "servicemetadata Action",
        "parameters": [
          {
            "name": "peppoladdress",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "entitytype",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceMetadataDto"
                }
              }
            }
          }
        }
      }
    },
    "/ehf?action=import": {
      "get": {
        "tags": [
          "EHFLog"
        ],
        "description": "import Action",
        "parameters": [
          {
            "name": "fileID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/ehf?action=parse": {
      "get": {
        "tags": [
          "EHFLog"
        ],
        "description": "parse Action",
        "parameters": [
          {
            "name": "fileID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/ehf/{id}": {
      "get": {
        "tags": [
          "EHFLog"
        ],
        "description": "Get EHFLog",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EHFLog"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "EHFLog"
        ],
        "description": "Update EHFLog",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EHFLog"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EHFLog"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "EHFLog"
      },
      "delete": {
        "tags": [
          "EHFLog"
        ],
        "description": "Delete EHFLog",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EHFLog"
                }
              }
            }
          }
        }
      }
    },
    "/ehf": {
      "get": {
        "tags": [
          "EHFLog"
        ],
        "description": "Query EHFLog",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EHFLog"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "EHFLog"
        ],
        "description": "Create EHFLog",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EHFLog"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EHFLog"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "EHFLog"
      }
    },
    "/departments/{id}?action=is-used": {
      "get": {
        "tags": [
          "Department"
        ],
        "description": "is-used Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/departments/{id}": {
      "get": {
        "tags": [
          "Department"
        ],
        "description": "Get Department",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Department"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Department"
        ],
        "description": "Update Department",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Department"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Department"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Department"
      },
      "delete": {
        "tags": [
          "Department"
        ],
        "description": "Delete Department",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Department"
                }
              }
            }
          }
        }
      }
    },
    "/departments": {
      "get": {
        "tags": [
          "Department"
        ],
        "description": "Query Department",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Department"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Department"
        ],
        "description": "Create Department",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Department"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Department"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Department"
      }
    },
    "/Dimension10/{id}?action=is-used": {
      "get": {
        "tags": [
          "Dimension10"
        ],
        "description": "is-used Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/Dimension10/{id}": {
      "get": {
        "tags": [
          "Dimension10"
        ],
        "description": "Get Dimension10",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dimension10"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Dimension10"
        ],
        "description": "Update Dimension10",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Dimension10"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dimension10"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Dimension10"
      },
      "delete": {
        "tags": [
          "Dimension10"
        ],
        "description": "Delete Dimension10",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dimension10"
                }
              }
            }
          }
        }
      }
    },
    "/Dimension10": {
      "get": {
        "tags": [
          "Dimension10"
        ],
        "description": "Query Dimension10",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Dimension10"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Dimension10"
        ],
        "description": "Create Dimension10",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Dimension10"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dimension10"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Dimension10"
      }
    },
    "/Dimension5/{id}?action=is-used": {
      "get": {
        "tags": [
          "Dimension5"
        ],
        "description": "is-used Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/Dimension5/{id}": {
      "get": {
        "tags": [
          "Dimension5"
        ],
        "description": "Get Dimension5",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dimension5"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Dimension5"
        ],
        "description": "Update Dimension5",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Dimension5"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dimension5"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Dimension5"
      },
      "delete": {
        "tags": [
          "Dimension5"
        ],
        "description": "Delete Dimension5",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dimension5"
                }
              }
            }
          }
        }
      }
    },
    "/Dimension5": {
      "get": {
        "tags": [
          "Dimension5"
        ],
        "description": "Query Dimension5",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Dimension5"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Dimension5"
        ],
        "description": "Create Dimension5",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Dimension5"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dimension5"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Dimension5"
      }
    },
    "/Dimension6/{id}?action=is-used": {
      "get": {
        "tags": [
          "Dimension6"
        ],
        "description": "is-used Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/Dimension6/{id}": {
      "get": {
        "tags": [
          "Dimension6"
        ],
        "description": "Get Dimension6",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dimension6"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Dimension6"
        ],
        "description": "Update Dimension6",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Dimension6"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dimension6"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Dimension6"
      },
      "delete": {
        "tags": [
          "Dimension6"
        ],
        "description": "Delete Dimension6",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dimension6"
                }
              }
            }
          }
        }
      }
    },
    "/Dimension6": {
      "get": {
        "tags": [
          "Dimension6"
        ],
        "description": "Query Dimension6",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Dimension6"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Dimension6"
        ],
        "description": "Create Dimension6",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Dimension6"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dimension6"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Dimension6"
      }
    },
    "/Dimension7/{id}?action=is-used": {
      "get": {
        "tags": [
          "Dimension7"
        ],
        "description": "is-used Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/Dimension7/{id}": {
      "get": {
        "tags": [
          "Dimension7"
        ],
        "description": "Get Dimension7",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dimension7"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Dimension7"
        ],
        "description": "Update Dimension7",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Dimension7"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dimension7"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Dimension7"
      },
      "delete": {
        "tags": [
          "Dimension7"
        ],
        "description": "Delete Dimension7",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dimension7"
                }
              }
            }
          }
        }
      }
    },
    "/Dimension7": {
      "get": {
        "tags": [
          "Dimension7"
        ],
        "description": "Query Dimension7",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Dimension7"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Dimension7"
        ],
        "description": "Create Dimension7",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Dimension7"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dimension7"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Dimension7"
      }
    },
    "/Dimension8/{id}?action=is-used": {
      "get": {
        "tags": [
          "Dimension8"
        ],
        "description": "is-used Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/Dimension8/{id}": {
      "get": {
        "tags": [
          "Dimension8"
        ],
        "description": "Get Dimension8",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dimension8"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Dimension8"
        ],
        "description": "Update Dimension8",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Dimension8"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dimension8"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Dimension8"
      },
      "delete": {
        "tags": [
          "Dimension8"
        ],
        "description": "Delete Dimension8",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dimension8"
                }
              }
            }
          }
        }
      }
    },
    "/Dimension8": {
      "get": {
        "tags": [
          "Dimension8"
        ],
        "description": "Query Dimension8",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Dimension8"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Dimension8"
        ],
        "description": "Create Dimension8",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Dimension8"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dimension8"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Dimension8"
      }
    },
    "/Dimension9/{id}?action=is-used": {
      "get": {
        "tags": [
          "Dimension9"
        ],
        "description": "is-used Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/Dimension9/{id}": {
      "get": {
        "tags": [
          "Dimension9"
        ],
        "description": "Get Dimension9",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dimension9"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Dimension9"
        ],
        "description": "Update Dimension9",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Dimension9"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dimension9"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Dimension9"
      },
      "delete": {
        "tags": [
          "Dimension9"
        ],
        "description": "Delete Dimension9",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dimension9"
                }
              }
            }
          }
        }
      }
    },
    "/Dimension9": {
      "get": {
        "tags": [
          "Dimension9"
        ],
        "description": "Query Dimension9",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Dimension9"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Dimension9"
        ],
        "description": "Create Dimension9",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Dimension9"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dimension9"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Dimension9"
      }
    },
    "/dimensions/{id}": {
      "get": {
        "tags": [
          "Dimensions"
        ],
        "description": "Get Dimensions",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dimensions"
                }
              }
            }
          }
        }
      }
    },
    "/dimensions": {
      "get": {
        "tags": [
          "Dimensions"
        ],
        "description": "Query Dimensions",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Dimensions"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/regions/{id}": {
      "get": {
        "tags": [
          "Region"
        ],
        "description": "Get Region",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Region"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Region"
        ],
        "description": "Update Region",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Region"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Region"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Region"
      },
      "delete": {
        "tags": [
          "Region"
        ],
        "description": "Delete Region",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Region"
                }
              }
            }
          }
        }
      }
    },
    "/regions": {
      "get": {
        "tags": [
          "Region"
        ],
        "description": "Query Region",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Region"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Region"
        ],
        "description": "Create Region",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Region"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Region"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Region"
      }
    },
    "/responsibles/{id}": {
      "get": {
        "tags": [
          "Responsible"
        ],
        "description": "Get Responsible",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Responsible"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Responsible"
        ],
        "description": "Update Responsible",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Responsible"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Responsible"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Responsible"
      },
      "delete": {
        "tags": [
          "Responsible"
        ],
        "description": "Delete Responsible",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Responsible"
                }
              }
            }
          }
        }
      }
    },
    "/responsibles": {
      "get": {
        "tags": [
          "Responsible"
        ],
        "description": "Query Responsible",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Responsible"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Responsible"
        ],
        "description": "Create Responsible",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Responsible"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Responsible"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Responsible"
      }
    },
    "/contractaddresses/{id}": {
      "get": {
        "tags": [
          "ContractAddress"
        ],
        "description": "Get ContractAddress",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractAddress"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ContractAddress"
        ],
        "description": "Update ContractAddress",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContractAddress"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractAddress"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "ContractAddress"
      },
      "delete": {
        "tags": [
          "ContractAddress"
        ],
        "description": "Delete ContractAddress",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractAddress"
                }
              }
            }
          }
        }
      }
    },
    "/contractaddresses": {
      "get": {
        "tags": [
          "ContractAddress"
        ],
        "description": "Query ContractAddress",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContractAddress"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ContractAddress"
        ],
        "description": "Create ContractAddress",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContractAddress"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractAddress"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "ContractAddress"
      }
    },
    "/contractassets/{id}": {
      "get": {
        "tags": [
          "ContractAsset"
        ],
        "description": "Get ContractAsset",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractAsset"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ContractAsset"
        ],
        "description": "Update ContractAsset",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContractAsset"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractAsset"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "ContractAsset"
      },
      "delete": {
        "tags": [
          "ContractAsset"
        ],
        "description": "Delete ContractAsset",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractAsset"
                }
              }
            }
          }
        }
      }
    },
    "/contractassets": {
      "get": {
        "tags": [
          "ContractAsset"
        ],
        "description": "Query ContractAsset",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContractAsset"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ContractAsset"
        ],
        "description": "Create ContractAsset",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContractAsset"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractAsset"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "ContractAsset"
      }
    },
    "/contracts/{id}?action=deploy": {
      "post": {
        "tags": [
          "Contract"
        ],
        "description": "deploy Transition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/contracts/{id}?action=kill": {
      "post": {
        "tags": [
          "Contract"
        ],
        "description": "kill Transition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/contracts/{id}?action=reset": {
      "post": {
        "tags": [
          "Contract"
        ],
        "description": "reset Transition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/contracts/{id}?action=copy-based-on": {
      "put": {
        "tags": [
          "Contract"
        ],
        "description": "copy-based-on Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contract"
                }
              }
            }
          }
        }
      }
    },
    "/contracts/{id}?action=compile": {
      "put": {
        "tags": [
          "Contract"
        ],
        "description": "compile Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/contracts/{id}": {
      "get": {
        "tags": [
          "Contract"
        ],
        "description": "Get Contract",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contract"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Contract"
        ],
        "description": "Update Contract",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Contract"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contract"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Contract"
      },
      "delete": {
        "tags": [
          "Contract"
        ],
        "description": "Delete Contract",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contract"
                }
              }
            }
          }
        }
      }
    },
    "/contracts": {
      "get": {
        "tags": [
          "Contract"
        ],
        "description": "Query Contract",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Contract"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Contract"
        ],
        "description": "Create Contract",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Contract"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contract"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Contract"
      }
    },
    "/contractdebuglogs/{id}": {
      "get": {
        "tags": [
          "ContractDebugLog"
        ],
        "description": "Get ContractDebugLog",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractDebugLog"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ContractDebugLog"
        ],
        "description": "Update ContractDebugLog",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContractDebugLog"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractDebugLog"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "ContractDebugLog"
      },
      "delete": {
        "tags": [
          "ContractDebugLog"
        ],
        "description": "Delete ContractDebugLog",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractDebugLog"
                }
              }
            }
          }
        }
      }
    },
    "/contractdebuglogs": {
      "get": {
        "tags": [
          "ContractDebugLog"
        ],
        "description": "Query ContractDebugLog",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContractDebugLog"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ContractDebugLog"
        ],
        "description": "Create ContractDebugLog",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContractDebugLog"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractDebugLog"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "ContractDebugLog"
      }
    },
    "/contractparameters/{id}": {
      "get": {
        "tags": [
          "ContractParameter"
        ],
        "description": "Get ContractParameter",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractParameter"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ContractParameter"
        ],
        "description": "Update ContractParameter",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContractParameter"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractParameter"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "ContractParameter"
      },
      "delete": {
        "tags": [
          "ContractParameter"
        ],
        "description": "Delete ContractParameter",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractParameter"
                }
              }
            }
          }
        }
      }
    },
    "/contractparameters": {
      "get": {
        "tags": [
          "ContractParameter"
        ],
        "description": "Query ContractParameter",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContractParameter"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ContractParameter"
        ],
        "description": "Create ContractParameter",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContractParameter"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractParameter"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "ContractParameter"
      }
    },
    "/contractrunlogs/{id}": {
      "get": {
        "tags": [
          "ContractRunLog"
        ],
        "description": "Get ContractRunLog",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractRunLog"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ContractRunLog"
        ],
        "description": "Update ContractRunLog",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContractRunLog"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractRunLog"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "ContractRunLog"
      },
      "delete": {
        "tags": [
          "ContractRunLog"
        ],
        "description": "Delete ContractRunLog",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractRunLog"
                }
              }
            }
          }
        }
      }
    },
    "/contractrunlogs": {
      "get": {
        "tags": [
          "ContractRunLog"
        ],
        "description": "Query ContractRunLog",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContractRunLog"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ContractRunLog"
        ],
        "description": "Create ContractRunLog",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContractRunLog"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractRunLog"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "ContractRunLog"
      }
    },
    "/contracttransactions/{id}": {
      "get": {
        "tags": [
          "ContractTransaction"
        ],
        "description": "Get ContractTransaction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractTransaction"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ContractTransaction"
        ],
        "description": "Update ContractTransaction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContractTransaction"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractTransaction"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "ContractTransaction"
      },
      "delete": {
        "tags": [
          "ContractTransaction"
        ],
        "description": "Delete ContractTransaction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractTransaction"
                }
              }
            }
          }
        }
      }
    },
    "/contracttransactions": {
      "get": {
        "tags": [
          "ContractTransaction"
        ],
        "description": "Query ContractTransaction",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContractTransaction"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ContractTransaction"
        ],
        "description": "Create ContractTransaction",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContractTransaction"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractTransaction"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "ContractTransaction"
      }
    },
    "/contracttriggers/{id}": {
      "get": {
        "tags": [
          "ContractTrigger"
        ],
        "description": "Get ContractTrigger",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractTrigger"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ContractTrigger"
        ],
        "description": "Update ContractTrigger",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContractTrigger"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractTrigger"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "ContractTrigger"
      },
      "delete": {
        "tags": [
          "ContractTrigger"
        ],
        "description": "Delete ContractTrigger",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractTrigger"
                }
              }
            }
          }
        }
      }
    },
    "/contracttriggers": {
      "get": {
        "tags": [
          "ContractTrigger"
        ],
        "description": "Query ContractTrigger",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContractTrigger"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ContractTrigger"
        ],
        "description": "Create ContractTrigger",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContractTrigger"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractTrigger"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "ContractTrigger"
      }
    },
    "/comments/{id}": {
      "get": {
        "tags": [
          "Comment"
        ],
        "description": "Get Comment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Comment"
        ],
        "description": "Update Comment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Comment"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Comment"
      },
      "delete": {
        "tags": [
          "Comment"
        ],
        "description": "Delete Comment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                }
              }
            }
          }
        }
      }
    },
    "/comments": {
      "get": {
        "tags": [
          "Comment"
        ],
        "description": "Query Comment",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Comment"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/comments/{entitytype}/{entityid}/{id}": {
      "delete": {
        "tags": [
          "Comment"
        ],
        "description": "Delete Comment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                }
              }
            }
          }
        }
      }
    },
    "/comments/{entitytype}/{entityid}": {
      "get": {
        "tags": [
          "Comment"
        ],
        "description": "Query Comment",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Comment"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Comment"
        ],
        "description": "Create Comment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Comment"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Comment"
      }
    },
    "/notifications?action=count": {
      "get": {
        "tags": [
          "Notification"
        ],
        "description": "count Action",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/notifications/{id}?action=mark-as-read": {
      "put": {
        "tags": [
          "Notification"
        ],
        "description": "mark-as-read Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Notification"
                }
              }
            }
          }
        }
      }
    },
    "/notifications/{id}?action=mark-as-marked": {
      "put": {
        "tags": [
          "Notification"
        ],
        "description": "mark-as-marked Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Notification"
                }
              }
            }
          }
        }
      }
    },
    "/notifications/{id}?action=mark-as-unread": {
      "put": {
        "tags": [
          "Notification"
        ],
        "description": "mark-as-unread Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Notification"
                }
              }
            }
          }
        }
      }
    },
    "/notifications/{id}": {
      "get": {
        "tags": [
          "Notification"
        ],
        "description": "Get Notification",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Notification"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Notification"
        ],
        "description": "Delete Notification",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Notification"
                }
              }
            }
          }
        }
      }
    },
    "/notifications": {
      "get": {
        "tags": [
          "Notification"
        ],
        "description": "Query Notification",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Notification"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Notification"
        ],
        "description": "Create Notification",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Notification"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Notification"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Notification"
      }
    },
    "/accounts?action=valid": {
      "get": {
        "tags": [
          "Account"
        ],
        "description": "valid Action",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/accounts?action=valid-with-hidden": {
      "get": {
        "tags": [
          "Account"
        ],
        "description": "valid-with-hidden Action",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/accounts?action=synchronize-ns4102-as": {
      "put": {
        "tags": [
          "Account"
        ],
        "description": "synchronize-ns4102-as Action",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/accounts?action=set-account-visibility-group": {
      "post": {
        "tags": [
          "Account"
        ],
        "description": "set-account-visibility-group Action",
        "parameters": [
          {
            "name": "accountVisibilityGroupID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/accounts?action=profit-and-loss-periodical": {
      "get": {
        "tags": [
          "Account"
        ],
        "description": "profit-and-loss-periodical Action",
        "parameters": [
          {
            "name": "FinancialYear",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/accounts?action=profit-and-loss-grouped": {
      "get": {
        "tags": [
          "Account"
        ],
        "description": "profit-and-loss-grouped Action",
        "parameters": [
          {
            "name": "FinancialYear",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/accounts?action=balance-grouped": {
      "get": {
        "tags": [
          "Account"
        ],
        "description": "balance-grouped Action",
        "parameters": [
          {
            "name": "FinancialYear",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/accounts?action=balance": {
      "get": {
        "tags": [
          "Account"
        ],
        "description": "balance Action",
        "parameters": [
          {
            "name": "FinancialYear",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/accounts?action=payables-by-age": {
      "get": {
        "tags": [
          "Account"
        ],
        "description": "payables-by-age Action",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "accountFrom",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "accountTo",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "useDueDate",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "accountType",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/accounts?action=payables-by-age-detailed": {
      "get": {
        "tags": [
          "Account"
        ],
        "description": "payables-by-age-detailed Action",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "accountFrom",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "accountTo",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "useDueDate",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "accountType",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/accounts?action=get-account-usage": {
      "get": {
        "tags": [
          "Account"
        ],
        "description": "get-account-usage Action",
        "parameters": [
          {
            "name": "accountID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/accounts?action=get-account-usage-detailed": {
      "get": {
        "tags": [
          "Account"
        ],
        "description": "get-account-usage-detailed Action",
        "parameters": [
          {
            "name": "accountID",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "maxHitPerEntity",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AccountUsageReference"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{id}?action=is-account-used": {
      "get": {
        "tags": [
          "Account"
        ],
        "description": "is-account-used Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/accounts?action=bulk-save": {
      "put": {
        "tags": [
          "Account"
        ],
        "description": "bulk-save Action",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "accounts"
      }
    },
    "/accounts?action=saftmapping-accounts": {
      "get": {
        "tags": [
          "Account"
        ],
        "description": "saftmapping-accounts Action",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SaftMappingAccount"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts?action=set-saftmappings": {
      "put": {
        "tags": [
          "Account"
        ],
        "description": "set-saftmappings Action",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "integer"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "accountNumbers"
      }
    },
    "/accounts/{id}": {
      "get": {
        "tags": [
          "Account"
        ],
        "description": "Get Account",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Account"
        ],
        "description": "Update Account",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Account"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Account"
      },
      "delete": {
        "tags": [
          "Account"
        ],
        "description": "Delete Account",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          }
        }
      }
    },
    "/accounts": {
      "get": {
        "tags": [
          "Account"
        ],
        "description": "Query Account",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Account"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Account"
        ],
        "description": "Create Account",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Account"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Account"
      }
    },
    "/accountgroups/{id}": {
      "get": {
        "tags": [
          "AccountGroup"
        ],
        "description": "Get AccountGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountGroup"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AccountGroup"
        ],
        "description": "Update AccountGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountGroup"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountGroup"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "AccountGroup"
      },
      "delete": {
        "tags": [
          "AccountGroup"
        ],
        "description": "Delete AccountGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountGroup"
                }
              }
            }
          }
        }
      }
    },
    "/accountgroups": {
      "get": {
        "tags": [
          "AccountGroup"
        ],
        "description": "Query AccountGroup",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AccountGroup"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "AccountGroup"
        ],
        "description": "Create AccountGroup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountGroup"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountGroup"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "AccountGroup"
      }
    },
    "/accountgroupsets/{id}": {
      "get": {
        "tags": [
          "AccountGroupSet"
        ],
        "description": "Get AccountGroupSet",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountGroupSet"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AccountGroupSet"
        ],
        "description": "Update AccountGroupSet",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountGroupSet"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountGroupSet"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "AccountGroupSet"
      },
      "delete": {
        "tags": [
          "AccountGroupSet"
        ],
        "description": "Delete AccountGroupSet",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountGroupSet"
                }
              }
            }
          }
        }
      }
    },
    "/accountgroupsets": {
      "get": {
        "tags": [
          "AccountGroupSet"
        ],
        "description": "Query AccountGroupSet",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AccountGroupSet"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "AccountGroupSet"
        ],
        "description": "Create AccountGroupSet",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountGroupSet"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountGroupSet"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "AccountGroupSet"
      }
    },
    "/accountmandatorydimension?action=check-recurringinvoices": {
      "get": {
        "tags": [
          "AccountMandatoryDimension"
        ],
        "description": "check-recurringinvoices Action",
        "parameters": [
          {
            "name": "accountID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/accountmandatorydimension?action=add-accounts-mandatory-dimensions": {
      "put": {
        "tags": [
          "AccountMandatoryDimension"
        ],
        "description": "add-accounts-mandatory-dimensions Action",
        "parameters": [
          {
            "name": "FromAccountNo",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "ToAccountNo",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "DimensionNo",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "MandatoryType",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/accountmandatorydimension?action=get-mandatory-dimensions-report": {
      "get": {
        "tags": [
          "AccountMandatoryDimension"
        ],
        "description": "get-mandatory-dimensions-report Action",
        "parameters": [
          {
            "name": "accountID",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "dimensionsID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MandatoryDimensionAccountReport"
                }
              }
            }
          }
        }
      }
    },
    "/accountmandatorydimension?action=get-mandatory-dimensions-report-by-dimensions": {
      "put": {
        "tags": [
          "AccountMandatoryDimension"
        ],
        "description": "get-mandatory-dimensions-report-by-dimensions Action",
        "parameters": [
          {
            "name": "accountID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Dimensions"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MandatoryDimensionAccountReport"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "dimensions"
      }
    },
    "/accountmandatorydimension?action=get-mandatory-dimensions-reports": {
      "put": {
        "tags": [
          "AccountMandatoryDimension"
        ],
        "description": "get-mandatory-dimensions-reports Action",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountDimension"
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MandatoryDimensionAccountReport"
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "items"
      }
    },
    "/accountmandatorydimension?action=get-customer-mandatory-dimensions-report-dimensionsID": {
      "get": {
        "tags": [
          "AccountMandatoryDimension"
        ],
        "description": "get-customer-mandatory-dimensions-report-dimensionsID Action",
        "parameters": [
          {
            "name": "customerID",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "dimensionsID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MandatoryDimensionAccountReport"
                }
              }
            }
          }
        }
      }
    },
    "/accountmandatorydimension?action=get-customer-mandatory-dimensions-report-dimensions": {
      "put": {
        "tags": [
          "AccountMandatoryDimension"
        ],
        "description": "get-customer-mandatory-dimensions-report-dimensions Action",
        "parameters": [
          {
            "name": "customerID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Dimensions"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MandatoryDimensionAccountReport"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "dimensions"
      }
    },
    "/accountmandatorydimension?action=get-supplier-mandatory-dimensions-report-dimensionsID": {
      "get": {
        "tags": [
          "AccountMandatoryDimension"
        ],
        "description": "get-supplier-mandatory-dimensions-report-dimensionsID Action",
        "parameters": [
          {
            "name": "supplierID",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "dimensionsID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MandatoryDimensionAccountReport"
                }
              }
            }
          }
        }
      }
    },
    "/accountmandatorydimension?action=get-supplier-mandatory-dimensions-report-dimensions": {
      "put": {
        "tags": [
          "AccountMandatoryDimension"
        ],
        "description": "get-supplier-mandatory-dimensions-report-dimensions Action",
        "parameters": [
          {
            "name": "supplierID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Dimensions"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MandatoryDimensionAccountReport"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "dimensions"
      }
    },
    "/accountmandatorydimension/{id}": {
      "get": {
        "tags": [
          "AccountMandatoryDimension"
        ],
        "description": "Get AccountMandatoryDimension",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountMandatoryDimension"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AccountMandatoryDimension"
        ],
        "description": "Update AccountMandatoryDimension",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountMandatoryDimension"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountMandatoryDimension"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "AccountMandatoryDimension"
      },
      "delete": {
        "tags": [
          "AccountMandatoryDimension"
        ],
        "description": "Delete AccountMandatoryDimension",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountMandatoryDimension"
                }
              }
            }
          }
        }
      }
    },
    "/accountmandatorydimension": {
      "get": {
        "tags": [
          "AccountMandatoryDimension"
        ],
        "description": "Query AccountMandatoryDimension",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AccountMandatoryDimension"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "AccountMandatoryDimension"
        ],
        "description": "Create AccountMandatoryDimension",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountMandatoryDimension"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountMandatoryDimension"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "AccountMandatoryDimension"
      }
    },
    "/accruals/{id}": {
      "get": {
        "tags": [
          "Accrual"
        ],
        "description": "Get Accrual",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Accrual"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Accrual"
        ],
        "description": "Update Accrual",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Accrual"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Accrual"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Accrual"
      },
      "delete": {
        "tags": [
          "Accrual"
        ],
        "description": "Delete Accrual",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Accrual"
                }
              }
            }
          }
        }
      }
    },
    "/accruals": {
      "get": {
        "tags": [
          "Accrual"
        ],
        "description": "Query Accrual",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Accrual"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Accrual"
        ],
        "description": "Create Accrual",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Accrual"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Accrual"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Accrual"
      }
    },
    "/assets?action=activate": {
      "put": {
        "tags": [
          "Asset"
        ],
        "description": "activate Action",
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/assets?action=sell-asset": {
      "put": {
        "tags": [
          "Asset"
        ],
        "description": "sell-asset Action",
        "parameters": [
          {
            "name": "assetID",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "customerID",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "vatTypeID",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "invoiceDate",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "amount",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "createInvoice",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/assets/{id}?action=sellasset": {
      "post": {
        "tags": [
          "Asset"
        ],
        "description": "sellasset Transition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/assets/{id}?action=setassetaslost": {
      "post": {
        "tags": [
          "Asset"
        ],
        "description": "setassetaslost Transition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/assets?action=set-asset-aslost": {
      "put": {
        "tags": [
          "Asset"
        ],
        "description": "set-asset-aslost Action",
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "description",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/assets?action=write-off-asset": {
      "put": {
        "tags": [
          "Asset"
        ],
        "description": "write-off-asset Action",
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "amount",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "description",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/assets?action=any-depreciations": {
      "get": {
        "tags": [
          "Asset"
        ],
        "description": "any-depreciations Action",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/assets?action=depreciate-month": {
      "put": {
        "tags": [
          "Asset"
        ],
        "description": "depreciate-month Action",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/assets?action=depreciate-missing": {
      "put": {
        "tags": [
          "Asset"
        ],
        "description": "depreciate-missing Action",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/assets?action=depreciate": {
      "put": {
        "tags": [
          "Asset"
        ],
        "description": "depreciate Action",
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "amount",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/assets?action=get-use-asset": {
      "get": {
        "tags": [
          "Asset"
        ],
        "description": "get-use-asset Action",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/assets?action=set-use-asset": {
      "put": {
        "tags": [
          "Asset"
        ],
        "description": "set-use-asset Action",
        "parameters": [
          {
            "name": "use",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/assets?action=create": {
      "post": {
        "tags": [
          "Asset"
        ],
        "description": "create Action",
        "parameters": [
          {
            "name": "invoiceID",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "accountID",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "accountNumber",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Asset"
                }
              }
            }
          }
        }
      }
    },
    "/assets?action=calculate-depreciation-amount": {
      "put": {
        "tags": [
          "Asset"
        ],
        "description": "calculate-depreciation-amount Action",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Asset"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "asset"
      }
    },
    "/assets?action=calculate-lifetime": {
      "put": {
        "tags": [
          "Asset"
        ],
        "description": "calculate-lifetime Action",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Asset"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "asset"
      }
    },
    "/assets?action=is-balance-ok": {
      "get": {
        "tags": [
          "Asset"
        ],
        "description": "is-balance-ok Action",
        "parameters": [
          {
            "name": "accountID",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "amount",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/assets?action=get-assets-report": {
      "get": {
        "tags": [
          "Asset"
        ],
        "description": "get-assets-report Action",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "assetID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssetReportDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/assets?action=get-asset-groups": {
      "get": {
        "tags": [
          "Asset"
        ],
        "description": "get-asset-groups Action",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssetGroup"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/assets/{id}": {
      "get": {
        "tags": [
          "Asset"
        ],
        "description": "Get Asset",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Asset"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Asset"
        ],
        "description": "Update Asset",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Asset"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Asset"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Asset"
      },
      "delete": {
        "tags": [
          "Asset"
        ],
        "description": "Delete Asset",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Asset"
                }
              }
            }
          }
        }
      }
    },
    "/assets": {
      "get": {
        "tags": [
          "Asset"
        ],
        "description": "Query Asset",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Asset"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Asset"
        ],
        "description": "Create Asset",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Asset"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Asset"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Asset"
      }
    },
    "/bankaccounts/{id}?action=lock": {
      "put": {
        "tags": [
          "BankAccount"
        ],
        "description": "lock Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/bankaccounts/{id}?action=unlock": {
      "put": {
        "tags": [
          "BankAccount"
        ],
        "description": "unlock Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/bankaccounts/{id}?action=bank-balance": {
      "get": {
        "tags": [
          "BankAccount"
        ],
        "description": "bank-balance Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/bankaccounts?action=get-all-bank-balances": {
      "get": {
        "tags": [
          "BankAccount"
        ],
        "description": "get-all-bank-balances Action",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BankBalanceDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/bankaccounts?action=get-connected-bankaccounts-to-account": {
      "get": {
        "tags": [
          "BankAccount"
        ],
        "description": "get-connected-bankaccounts-to-account Action",
        "parameters": [
          {
            "name": "accountID",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "skipBankAccountID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BankAccount"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/bankaccounts?action=get-bankservice-bankaccounts": {
      "get": {
        "tags": [
          "BankAccount"
        ],
        "description": "get-bankservice-bankaccounts Action",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/bankaccounts?action=create-bankaccounts-from-bankservice-bankaccounts": {
      "post": {
        "tags": [
          "BankAccount"
        ],
        "description": "create-bankaccounts-from-bankservice-bankaccounts Action",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "accountPairs"
      }
    },
    "/bankaccounts/{id}": {
      "get": {
        "tags": [
          "BankAccount"
        ],
        "description": "Get BankAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankAccount"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "BankAccount"
        ],
        "description": "Update BankAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BankAccount"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankAccount"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "BankAccount"
      },
      "delete": {
        "tags": [
          "BankAccount"
        ],
        "description": "Delete BankAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankAccount"
                }
              }
            }
          }
        }
      }
    },
    "/bankaccounts": {
      "get": {
        "tags": [
          "BankAccount"
        ],
        "description": "Query BankAccount",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BankAccount"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "BankAccount"
        ],
        "description": "Create BankAccount",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BankAccount"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankAccount"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "BankAccount"
      }
    },
    "/banks?action=get-bank-from-accountnumber-lookup": {
      "get": {
        "tags": [
          "Bank"
        ],
        "description": "get-bank-from-accountnumber-lookup Action",
        "parameters": [
          {
            "name": "bankAccountNumber",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bank"
                }
              }
            }
          }
        }
      }
    },
    "/banks?action=get-iban-from-accountnumber-lookup": {
      "get": {
        "tags": [
          "Bank"
        ],
        "description": "get-iban-from-accountnumber-lookup Action",
        "parameters": [
          {
            "name": "bankAccountNumber",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/banks?action=get-iban-upsert-bank": {
      "get": {
        "tags": [
          "Bank"
        ],
        "description": "get-iban-upsert-bank Action",
        "parameters": [
          {
            "name": "bankAccountNumber",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankData"
                }
              }
            }
          }
        }
      }
    },
    "/banks?action=verify-iban": {
      "get": {
        "tags": [
          "Bank"
        ],
        "description": "verify-iban Action",
        "parameters": [
          {
            "name": "iban",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/banks?action=verify-iban-upsert-bank": {
      "get": {
        "tags": [
          "Bank"
        ],
        "description": "verify-iban-upsert-bank Action",
        "parameters": [
          {
            "name": "iban",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankData"
                }
              }
            }
          }
        }
      }
    },
    "/banks/{id}": {
      "get": {
        "tags": [
          "Bank"
        ],
        "description": "Get Bank",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bank"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Bank"
        ],
        "description": "Update Bank",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Bank"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bank"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Bank"
      },
      "delete": {
        "tags": [
          "Bank"
        ],
        "description": "Delete Bank",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bank"
                }
              }
            }
          }
        }
      }
    },
    "/banks": {
      "get": {
        "tags": [
          "Bank"
        ],
        "description": "Query Bank",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bank"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Bank"
        ],
        "description": "Create Bank",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Bank"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bank"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Bank"
      }
    },
    "/bank-agreements?action=auth-code": {
      "post": {
        "tags": [
          "BankIntegrationAgreement"
        ],
        "description": "auth-code Action",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "password"
      }
    },
    "/bank-agreements/{id}?action=set-default": {
      "put": {
        "tags": [
          "BankIntegrationAgreement"
        ],
        "description": "set-default Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankIntegrationAgreement"
                }
              }
            }
          }
        }
      }
    },
    "/bank-agreements?action=get-agreement-templates": {
      "get": {
        "tags": [
          "BankIntegrationAgreement"
        ],
        "description": "get-agreement-templates Action",
        "parameters": [
          {
            "name": "password",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/bank-agreements?action=create-integration": {
      "post": {
        "tags": [
          "BankIntegrationAgreement"
        ],
        "description": "create-integration Action",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBankIntegrationDTO"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankIntegrationAgreement"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "integrationDto"
      }
    },
    "/bank-agreements?action=delete-bankagreements": {
      "put": {
        "tags": [
          "BankIntegrationAgreement"
        ],
        "description": "delete-bankagreements Action",
        "parameters": [
          {
            "name": "bankAccountID",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "integrationSettings",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "emailAddress",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BankAccount"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/bank-agreements?action=delete-all-bankagreements": {
      "put": {
        "tags": [
          "BankIntegrationAgreement"
        ],
        "description": "delete-all-bankagreements Action",
        "parameters": [
          {
            "name": "emailAddress",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BankAccount"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/bank-agreements?action=create-initial-company-and-bank-accounts-agreement": {
      "post": {
        "tags": [
          "BankIntegrationAgreement"
        ],
        "description": "create-initial-company-and-bank-accounts-agreement Action",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBankIntegrationDTO"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankIntegrationAgreement"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "integrationDto"
      }
    },
    "/bank-agreements?action=get-direct-bank-agreement": {
      "get": {
        "tags": [
          "BankIntegrationAgreement"
        ],
        "description": "get-direct-bank-agreement Action",
        "parameters": [
          {
            "name": "serviceProvider",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/bank-agreements/{id}?action=update-bank-properties": {
      "put": {
        "tags": [
          "BankIntegrationAgreement"
        ],
        "description": "update-bank-properties Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ZdataUpdateBankProperties"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankIntegrationAgreement"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "bankProperties"
      }
    },
    "/bank-agreements?action=add-autobank-user": {
      "post": {
        "tags": [
          "BankIntegrationAgreement"
        ],
        "description": "add-autobank-user Action",
        "parameters": [
          {
            "name": "password",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutobankUserDTO"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "autobankUserDto"
      }
    },
    "/bank-agreements/{id}?action=update-status": {
      "put": {
        "tags": [
          "BankIntegrationAgreement"
        ],
        "description": "update-status Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankIntegrationAgreement"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "password"
      }
    },
    "/bank-agreements?action=update-service": {
      "put": {
        "tags": [
          "BankIntegrationAgreement"
        ],
        "description": "update-service Action",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateServiceStatusDTO"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "service"
      }
    },
    "/bank-agreements?action=update-serviceid": {
      "put": {
        "tags": [
          "BankIntegrationAgreement"
        ],
        "description": "update-serviceid Action",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateServiceIDDTO"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "service"
      }
    },
    "/bank-agreements?action=validate-password": {
      "post": {
        "tags": [
          "BankIntegrationAgreement"
        ],
        "description": "validate-password Action",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "password"
      }
    },
    "/bank-agreements?action=order-bank-integration-change": {
      "post": {
        "tags": [
          "BankIntegrationAgreement"
        ],
        "description": "order-bank-integration-change Action",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/bank-agreements/{id}": {
      "get": {
        "tags": [
          "BankIntegrationAgreement"
        ],
        "description": "Get BankIntegrationAgreement",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankIntegrationAgreement"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "BankIntegrationAgreement"
        ],
        "description": "Update BankIntegrationAgreement",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BankIntegrationAgreement"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankIntegrationAgreement"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "BankIntegrationAgreement"
      },
      "delete": {
        "tags": [
          "BankIntegrationAgreement"
        ],
        "description": "Delete BankIntegrationAgreement",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankIntegrationAgreement"
                }
              }
            }
          }
        }
      }
    },
    "/bank-agreements": {
      "get": {
        "tags": [
          "BankIntegrationAgreement"
        ],
        "description": "Query BankIntegrationAgreement",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BankIntegrationAgreement"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/bankrules/{id}": {
      "get": {
        "tags": [
          "BankRule"
        ],
        "description": "Get BankRule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankRule"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "BankRule"
        ],
        "description": "Update BankRule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BankRule"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankRule"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "BankRule"
      },
      "delete": {
        "tags": [
          "BankRule"
        ],
        "description": "Delete BankRule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankRule"
                }
              }
            }
          }
        }
      }
    },
    "/bankrules": {
      "get": {
        "tags": [
          "BankRule"
        ],
        "description": "Query BankRule",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BankRule"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "BankRule"
        ],
        "description": "Create BankRule",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BankRule"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankRule"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "BankRule"
      }
    },
    "/bankstatements/{id}?action=complete": {
      "post": {
        "tags": [
          "BankStatement"
        ],
        "description": "complete Transition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankStatement"
                }
              }
            }
          }
        }
      }
    },
    "/bankstatements/{id}?action=reopen": {
      "post": {
        "tags": [
          "BankStatement"
        ],
        "description": "reopen Transition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankStatement"
                }
              }
            }
          }
        }
      }
    },
    "/bankstatements?action=match-items": {
      "post": {
        "tags": [
          "BankStatement"
        ],
        "description": "match-items Action",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BankStatementMatch"
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "items"
      }
    },
    "/bankstatements?action=suggest-match": {
      "post": {
        "tags": [
          "BankStatement"
        ],
        "description": "suggest-match Action",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MatchRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BankMatchSuggestion"
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "matchRequest"
      }
    },
    "/bankstatements?action=account-status": {
      "get": {
        "tags": [
          "BankStatement"
        ],
        "description": "account-status Action",
        "parameters": [
          {
            "name": "accountid",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "fromdate",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "todate",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReconciliationStatus"
                }
              }
            }
          }
        }
      }
    },
    "/bankstatements?action=account-status-monthly": {
      "get": {
        "tags": [
          "BankStatement"
        ],
        "description": "account-status-monthly Action",
        "parameters": [
          {
            "name": "accountid",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "fromdate",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "todate",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReconciliationStatus"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/bankstatements?action=account-balance": {
      "get": {
        "tags": [
          "BankStatement"
        ],
        "description": "account-balance Action",
        "parameters": [
          {
            "name": "accountid",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceDto"
                }
              }
            }
          }
        }
      }
    },
    "/bankstatements?action=import": {
      "post": {
        "tags": [
          "BankStatement"
        ],
        "description": "import Action",
        "parameters": [
          {
            "name": "accountid",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "fileID",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "maxLines",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BankfileFormat"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankStatement"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "fmt"
      }
    },
    "/bankstatements?action=preview": {
      "post": {
        "tags": [
          "BankStatement"
        ],
        "description": "preview Action",
        "parameters": [
          {
            "name": "accountid",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "fileID",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "maxLines",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BankfileFormat"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankStatement"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "fmt"
      }
    },
    "/bankstatements?action=templates": {
      "get": {
        "tags": [
          "BankStatement"
        ],
        "description": "templates Action",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BankfileFormat"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/bankstatements/{id}": {
      "get": {
        "tags": [
          "BankStatement"
        ],
        "description": "Get BankStatement",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankStatement"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "BankStatement"
        ],
        "description": "Update BankStatement",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BankStatement"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankStatement"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "BankStatement"
      },
      "delete": {
        "tags": [
          "BankStatement"
        ],
        "description": "Delete BankStatement",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankStatement"
                }
              }
            }
          }
        }
      }
    },
    "/bankstatements": {
      "get": {
        "tags": [
          "BankStatement"
        ],
        "description": "Query BankStatement",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BankStatement"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "BankStatement"
        ],
        "description": "Create BankStatement",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BankStatement"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankStatement"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "BankStatement"
      }
    },
    "/bankstatemententries?action=entries-for-account": {
      "get": {
        "tags": [
          "BankStatementEntry"
        ],
        "description": "entries-for-account Action",
        "parameters": [
          {
            "name": "accountid",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "fromdate",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "todate",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BankStatementEntry"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/bankstatemententries/{id}": {
      "get": {
        "tags": [
          "BankStatementEntry"
        ],
        "description": "Get BankStatementEntry",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankStatementEntry"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "BankStatementEntry"
        ],
        "description": "Update BankStatementEntry",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BankStatementEntry"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankStatementEntry"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "BankStatementEntry"
      },
      "delete": {
        "tags": [
          "BankStatementEntry"
        ],
        "description": "Delete BankStatementEntry",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankStatementEntry"
                }
              }
            }
          }
        }
      }
    },
    "/bankstatemententries": {
      "get": {
        "tags": [
          "BankStatementEntry"
        ],
        "description": "Query BankStatementEntry",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BankStatementEntry"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "BankStatementEntry"
        ],
        "description": "Create BankStatementEntry",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BankStatementEntry"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankStatementEntry"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "BankStatementEntry"
      }
    },
    "/bankstatementmatch?action=delete-group": {
      "post": {
        "tags": [
          "BankStatementMatch"
        ],
        "description": "delete-group Action",
        "parameters": [
          {
            "name": "group",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/bankstatementmatch/{id}": {
      "get": {
        "tags": [
          "BankStatementMatch"
        ],
        "description": "Get BankStatementMatch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankStatementMatch"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "BankStatementMatch"
        ],
        "description": "Delete BankStatementMatch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankStatementMatch"
                }
              }
            }
          }
        }
      }
    },
    "/bankstatementmatch": {
      "get": {
        "tags": [
          "BankStatementMatch"
        ],
        "description": "Query BankStatementMatch",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BankStatementMatch"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "BankStatementMatch"
        ],
        "description": "Create BankStatementMatch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BankStatementMatch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankStatementMatch"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "BankStatementMatch"
      }
    },
    "/bankstatementrules?action=apply-rule": {
      "post": {
        "tags": [
          "BankStatementRule"
        ],
        "description": "apply-rule Action",
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BankStatementEntry"
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JournalSuggestion"
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "entries"
      }
    },
    "/bankstatementrules?action=apply-rules": {
      "post": {
        "tags": [
          "BankStatementRule"
        ],
        "description": "apply-rules Action",
        "parameters": [
          {
            "name": "active",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BankStatementEntry"
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JournalSuggestion"
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "entries"
      }
    },
    "/bankstatementrules/{id}": {
      "get": {
        "tags": [
          "BankStatementRule"
        ],
        "description": "Get BankStatementRule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankStatementRule"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "BankStatementRule"
        ],
        "description": "Update BankStatementRule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BankStatementRule"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankStatementRule"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "BankStatementRule"
      },
      "delete": {
        "tags": [
          "BankStatementRule"
        ],
        "description": "Delete BankStatementRule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankStatementRule"
                }
              }
            }
          }
        }
      }
    },
    "/bankstatementrules": {
      "get": {
        "tags": [
          "BankStatementRule"
        ],
        "description": "Query BankStatementRule",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BankStatementRule"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "BankStatementRule"
        ],
        "description": "Create BankStatementRule",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BankStatementRule"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankStatementRule"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "BankStatementRule"
      }
    },
    "/budgets/{id}?action=activate": {
      "post": {
        "tags": [
          "Budget"
        ],
        "description": "activate Transition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Budget"
                }
              }
            }
          }
        }
      }
    },
    "/budgets/{id}?action=deactivate": {
      "post": {
        "tags": [
          "Budget"
        ],
        "description": "deactivate Transition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Budget"
                }
              }
            }
          }
        }
      }
    },
    "/budgets?action=details": {
      "get": {
        "tags": [
          "Budget"
        ],
        "description": "details Action",
        "parameters": [
          {
            "name": "FinancialYear",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReportRow"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/budgets?action=summary": {
      "get": {
        "tags": [
          "Budget"
        ],
        "description": "summary Action",
        "parameters": [
          {
            "name": "FinancialYear",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReportRow"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/budgets/{id}?action=details": {
      "get": {
        "tags": [
          "Budget"
        ],
        "description": "details Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReportRow"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/budgets/{id}?action=summary": {
      "get": {
        "tags": [
          "Budget"
        ],
        "description": "summary Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReportRow"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/budgets/{id}?action=excelbudget": {
      "post": {
        "tags": [
          "Budget"
        ],
        "description": "excelbudget Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "fileid",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "departmentid",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetImport"
                }
              }
            }
          }
        }
      }
    },
    "/budgets/{id}?action=getexcelbudget": {
      "get": {
        "tags": [
          "Budget"
        ],
        "description": "getexcelbudget Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IActionResult"
                }
              }
            }
          }
        }
      }
    },
    "/budgets/{id}": {
      "get": {
        "tags": [
          "Budget"
        ],
        "description": "Get Budget",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Budget"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Budget"
        ],
        "description": "Update Budget",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Budget"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Budget"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Budget"
      },
      "delete": {
        "tags": [
          "Budget"
        ],
        "description": "Delete Budget",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Budget"
                }
              }
            }
          }
        }
      }
    },
    "/budgets": {
      "get": {
        "tags": [
          "Budget"
        ],
        "description": "Query Budget",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Budget"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Budget"
        ],
        "description": "Create Budget",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Budget"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Budget"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Budget"
      }
    },
    "/budgetentries/{id}": {
      "get": {
        "tags": [
          "BudgetEntry"
        ],
        "description": "Get BudgetEntry",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetEntry"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "BudgetEntry"
        ],
        "description": "Update BudgetEntry",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BudgetEntry"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetEntry"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "BudgetEntry"
      },
      "delete": {
        "tags": [
          "BudgetEntry"
        ],
        "description": "Delete BudgetEntry",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetEntry"
                }
              }
            }
          }
        }
      }
    },
    "/budgetentries": {
      "get": {
        "tags": [
          "BudgetEntry"
        ],
        "description": "Query BudgetEntry",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BudgetEntry"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "BudgetEntry"
        ],
        "description": "Create BudgetEntry",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BudgetEntry"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetEntry"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "BudgetEntry"
      }
    },
    "/companyaccountingsettings?action=get-or-create": {
      "get": {
        "tags": [
          "CompanyAccountingSettings"
        ],
        "description": "get-or-create Action",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyAccountingSettings"
                }
              }
            }
          }
        }
      }
    },
    "/companyaccountingsettings/{id}": {
      "get": {
        "tags": [
          "CompanyAccountingSettings"
        ],
        "description": "Get CompanyAccountingSettings",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyAccountingSettings"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CompanyAccountingSettings"
        ],
        "description": "Update CompanyAccountingSettings",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyAccountingSettings"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyAccountingSettings"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "CompanyAccountingSettings"
      },
      "delete": {
        "tags": [
          "CompanyAccountingSettings"
        ],
        "description": "Delete CompanyAccountingSettings",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyAccountingSettings"
                }
              }
            }
          }
        }
      }
    },
    "/companyaccountingsettings": {
      "get": {
        "tags": [
          "CompanyAccountingSettings"
        ],
        "description": "Query CompanyAccountingSettings",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyAccountingSettings"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CompanyAccountingSettings"
        ],
        "description": "Create CompanyAccountingSettings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyAccountingSettings"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyAccountingSettings"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "CompanyAccountingSettings"
      }
    },
    "/companybankaccounts/{id}": {
      "get": {
        "tags": [
          "CompanyBankAccount"
        ],
        "description": "Get CompanyBankAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyBankAccount"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CompanyBankAccount"
        ],
        "description": "Update CompanyBankAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyBankAccount"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyBankAccount"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "CompanyBankAccount"
      },
      "delete": {
        "tags": [
          "CompanyBankAccount"
        ],
        "description": "Delete CompanyBankAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyBankAccount"
                }
              }
            }
          }
        }
      }
    },
    "/companybankaccounts": {
      "get": {
        "tags": [
          "CompanyBankAccount"
        ],
        "description": "Query CompanyBankAccount",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyBankAccount"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CompanyBankAccount"
        ],
        "description": "Create CompanyBankAccount",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyBankAccount"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyBankAccount"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "CompanyBankAccount"
      }
    },
    "/costallocations?action=create-journalentrylinesdrafts-from-supplier-costallocation": {
      "get": {
        "tags": [
          "CostAllocation"
        ],
        "description": "create-journalentrylinesdrafts-from-supplier-costallocation Action",
        "parameters": [
          {
            "name": "supplierId",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "useAccountID",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "currencyAmount",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "currencyCodeID",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "exchangeRate",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "financialDate",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "vatDate",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JournalEntryLineDraft"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/costallocations?action=create-journalentrylinedrafts-from-account-costallocation": {
      "get": {
        "tags": [
          "CostAllocation"
        ],
        "description": "create-journalentrylinedrafts-from-account-costallocation Action",
        "parameters": [
          {
            "name": "accountID",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "useAccountID",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "currencyAmount",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "currencyCodeID",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "exchangeRate",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "financialDate",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "vatDate",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JournalEntryLineDraft"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/costallocations?action=create-journalentrylinedrafts-from-costallocation": {
      "get": {
        "tags": [
          "CostAllocation"
        ],
        "description": "create-journalentrylinedrafts-from-costallocation Action",
        "parameters": [
          {
            "name": "costAllocationID",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "useAccountID",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "currencyAmount",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "currencyCodeID",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "exchangeRate",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "financialDate",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "vatDate",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JournalEntryLineDraft"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/costallocations/{id}": {
      "get": {
        "tags": [
          "CostAllocation"
        ],
        "description": "Get CostAllocation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostAllocation"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CostAllocation"
        ],
        "description": "Update CostAllocation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CostAllocation"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostAllocation"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "CostAllocation"
      },
      "delete": {
        "tags": [
          "CostAllocation"
        ],
        "description": "Delete CostAllocation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostAllocation"
                }
              }
            }
          }
        }
      }
    },
    "/costallocations": {
      "get": {
        "tags": [
          "CostAllocation"
        ],
        "description": "Query CostAllocation",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CostAllocation"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CostAllocation"
        ],
        "description": "Create CostAllocation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CostAllocation"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostAllocation"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "CostAllocation"
      }
    },
    "/costallocationitems/{id}": {
      "get": {
        "tags": [
          "CostAllocationItem"
        ],
        "description": "Get CostAllocationItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostAllocationItem"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CostAllocationItem"
        ],
        "description": "Update CostAllocationItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CostAllocationItem"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostAllocationItem"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "CostAllocationItem"
      },
      "delete": {
        "tags": [
          "CostAllocationItem"
        ],
        "description": "Delete CostAllocationItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostAllocationItem"
                }
              }
            }
          }
        }
      }
    },
    "/costallocationitems": {
      "get": {
        "tags": [
          "CostAllocationItem"
        ],
        "description": "Query CostAllocationItem",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CostAllocationItem"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CostAllocationItem"
        ],
        "description": "Create CostAllocationItem",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CostAllocationItem"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostAllocationItem"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "CostAllocationItem"
      }
    },
    "/liquiditypayment?action=getLiquidityTableData": {
      "get": {
        "tags": [
          "CustomLiquidityPayment"
        ],
        "description": "getLiquidityTableData Action",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LiquidityTableDTO"
                }
              }
            }
          }
        }
      }
    },
    "/liquiditypayment/{id}": {
      "get": {
        "tags": [
          "CustomLiquidityPayment"
        ],
        "description": "Get CustomLiquidityPayment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomLiquidityPayment"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CustomLiquidityPayment"
        ],
        "description": "Update CustomLiquidityPayment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomLiquidityPayment"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomLiquidityPayment"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "CustomLiquidityPayment"
      },
      "delete": {
        "tags": [
          "CustomLiquidityPayment"
        ],
        "description": "Delete CustomLiquidityPayment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomLiquidityPayment"
                }
              }
            }
          }
        }
      }
    },
    "/liquiditypayment": {
      "get": {
        "tags": [
          "CustomLiquidityPayment"
        ],
        "description": "Query CustomLiquidityPayment",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomLiquidityPayment"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CustomLiquidityPayment"
        ],
        "description": "Create CustomLiquidityPayment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomLiquidityPayment"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomLiquidityPayment"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "CustomLiquidityPayment"
      }
    },
    "/deadlines?action=get-all-filtered": {
      "get": {
        "tags": [
          "FinancialDeadline"
        ],
        "description": "get-all-filtered Action",
        "parameters": [
          {
            "name": "query",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/deadlines?action=number-of-days-filtered": {
      "get": {
        "tags": [
          "FinancialDeadline"
        ],
        "description": "number-of-days-filtered Action",
        "parameters": [
          {
            "name": "nrOfDays",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/deadlines/{id}": {
      "get": {
        "tags": [
          "FinancialDeadline"
        ],
        "description": "Get FinancialDeadline",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialDeadline"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "FinancialDeadline"
        ],
        "description": "Update FinancialDeadline",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FinancialDeadline"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialDeadline"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "FinancialDeadline"
      },
      "delete": {
        "tags": [
          "FinancialDeadline"
        ],
        "description": "Delete FinancialDeadline",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialDeadline"
                }
              }
            }
          }
        }
      }
    },
    "/deadlines": {
      "get": {
        "tags": [
          "FinancialDeadline"
        ],
        "description": "Query FinancialDeadline",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FinancialDeadline"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "FinancialDeadline"
        ],
        "description": "Create FinancialDeadline",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FinancialDeadline"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialDeadline"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "FinancialDeadline"
      }
    },
    "/financialyears?action=get-or-create-financial-year": {
      "get": {
        "tags": [
          "FinancialYear"
        ],
        "description": "get-or-create-financial-year Action",
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialYear"
                }
              }
            }
          }
        }
      }
    },
    "/financialyears?action=create-financial-year": {
      "get": {
        "tags": [
          "FinancialYear"
        ],
        "description": "create-financial-year Action",
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialYear"
                }
              }
            }
          }
        }
      }
    },
    "/financialyears/{id}": {
      "get": {
        "tags": [
          "FinancialYear"
        ],
        "description": "Get FinancialYear",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialYear"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "FinancialYear"
        ],
        "description": "Update FinancialYear",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FinancialYear"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialYear"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "FinancialYear"
      },
      "delete": {
        "tags": [
          "FinancialYear"
        ],
        "description": "Delete FinancialYear",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialYear"
                }
              }
            }
          }
        }
      }
    },
    "/financialyears": {
      "get": {
        "tags": [
          "FinancialYear"
        ],
        "description": "Query FinancialYear",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FinancialYear"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "FinancialYear"
        ],
        "description": "Create FinancialYear",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FinancialYear"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialYear"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "FinancialYear"
      }
    },
    "/journalentries?action=get-or-create-financial-year": {
      "get": {
        "tags": [
          "JournalEntry"
        ],
        "description": "get-or-create-financial-year Action",
        "parameters": [
          {
            "name": "current",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialYear"
                }
              }
            }
          }
        }
      }
    },
    "/journalentries?action=get-journal-entry-data": {
      "get": {
        "tags": [
          "JournalEntry"
        ],
        "description": "get-journal-entry-data Action",
        "parameters": [
          {
            "name": "batchNumber",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "journalEntryID",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "supplierInvoiceID",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "journalEntryDraftGroup",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JournalEntryData"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/journalentries?action=delete-journal-entry-draft-group": {
      "delete": {
        "tags": [
          "JournalEntry"
        ],
        "description": "delete-journal-entry-draft-group Action",
        "parameters": [
          {
            "name": "journalEntryDraftGroup",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/journalentries?action=save-journal-entries-as-draft": {
      "post": {
        "tags": [
          "JournalEntry"
        ],
        "description": "save-journal-entries-as-draft Action",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/JournalEntry"
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "journalEntries"
      }
    },
    "/journalentries?action=credit-journalentry": {
      "post": {
        "tags": [
          "JournalEntry"
        ],
        "description": "credit-journalentry Action",
        "parameters": [
          {
            "name": "journalEntryNumber",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/journalentries?action=credit-journal-entry": {
      "post": {
        "tags": [
          "JournalEntry"
        ],
        "description": "credit-journal-entry Action",
        "parameters": [
          {
            "name": "journalEntryNumber",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "creditDate",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/journalentries?action=book-journal-entries": {
      "post": {
        "tags": [
          "JournalEntry"
        ],
        "description": "book-journal-entries Action",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/JournalEntry"
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "data"
      }
    },
    "/journalentries?action=credit-and-book-journalentry": {
      "post": {
        "tags": [
          "JournalEntry"
        ],
        "description": "credit-and-book-journalentry Action",
        "parameters": [
          {
            "name": "journalEntryID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/JournalEntry"
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JournalEntry"
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "data"
      }
    },
    "/journalentries?action=credit-and-book-journal-entry": {
      "post": {
        "tags": [
          "JournalEntry"
        ],
        "description": "credit-and-book-journal-entry Action",
        "parameters": [
          {
            "name": "journalEntryID",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "creditDate",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/JournalEntry"
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JournalEntry"
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "data"
      }
    },
    "/journalentries?action=nextjournalentrynumber": {
      "post": {
        "tags": [
          "JournalEntry"
        ],
        "description": "nextjournalentrynumber Action",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JournalEntryData"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "data"
      }
    },
    "/journalentries?action=get-journal-entry-period-data": {
      "get": {
        "tags": [
          "JournalEntry"
        ],
        "description": "get-journal-entry-period-data Action",
        "parameters": [
          {
            "name": "accountID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JournalEntryPeriodData"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/journalentries?action=book-journal-entry-against-payment": {
      "post": {
        "tags": [
          "JournalEntry"
        ],
        "description": "book-journal-entry-against-payment Action",
        "parameters": [
          {
            "name": "journalEntryID",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "paymentID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JournalEntry"
                }
              }
            }
          }
        }
      }
    },
    "/journalentries?action=book-payment-against-customer": {
      "put": {
        "tags": [
          "JournalEntry"
        ],
        "description": "book-payment-against-customer Action",
        "parameters": [
          {
            "name": "customerID",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "paymentID",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "isBalanceKID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/journalentries?action=book-payment-against-supplier": {
      "put": {
        "tags": [
          "JournalEntry"
        ],
        "description": "book-payment-against-supplier Action",
        "parameters": [
          {
            "name": "supplierID",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "paymentID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/journalentries?action=book-payment-against-main-account": {
      "put": {
        "tags": [
          "JournalEntry"
        ],
        "description": "book-payment-against-main-account Action",
        "parameters": [
          {
            "name": "paymentID",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "accountID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/journalentries/{id}": {
      "get": {
        "tags": [
          "JournalEntry"
        ],
        "description": "Get JournalEntry",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JournalEntry"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "JournalEntry"
        ],
        "description": "Update JournalEntry",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JournalEntry"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JournalEntry"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "JournalEntry"
      },
      "delete": {
        "tags": [
          "JournalEntry"
        ],
        "description": "Delete JournalEntry",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JournalEntry"
                }
              }
            }
          }
        }
      }
    },
    "/journalentries": {
      "get": {
        "tags": [
          "JournalEntry"
        ],
        "description": "Query JournalEntry",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JournalEntry"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "JournalEntry"
        ],
        "description": "Create JournalEntry",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JournalEntry"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JournalEntry"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "JournalEntry"
      }
    },
    "/journalentrylines?action=get-journal-entry-period-data": {
      "get": {
        "tags": [
          "JournalEntryLine"
        ],
        "description": "get-journal-entry-period-data Action",
        "parameters": [
          {
            "name": "odataFilter",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JournalEntryLineRequestSummary"
                }
              }
            }
          }
        }
      }
    },
    "/journalentrylines?action=get-journal-entry-postpost-data": {
      "get": {
        "tags": [
          "JournalEntryLine"
        ],
        "description": "get-journal-entry-postpost-data Action",
        "parameters": [
          {
            "name": "includeOpenPosts",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "includeMarkedPosts",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "customerID",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "supplierID",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "accountID",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "pointInTime",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JournalEntryLinePostPostData"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/journalentrylines/{id}?action=mark": {
      "post": {
        "tags": [
          "JournalEntryLine"
        ],
        "description": "mark Transition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/journalentrylines/{id}": {
      "get": {
        "tags": [
          "JournalEntryLine"
        ],
        "description": "Get JournalEntryLine",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JournalEntryLine"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "JournalEntryLine"
        ],
        "description": "Update JournalEntryLine",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JournalEntryLine"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JournalEntryLine"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "JournalEntryLine"
      }
    },
    "/journalentrylines": {
      "get": {
        "tags": [
          "JournalEntryLine"
        ],
        "description": "Query JournalEntryLine",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JournalEntryLine"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/journalentrylinedrafts/{id}": {
      "get": {
        "tags": [
          "JournalEntryLineDraft"
        ],
        "description": "Get JournalEntryLineDraft",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JournalEntryLineDraft"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "JournalEntryLineDraft"
        ],
        "description": "Update JournalEntryLineDraft",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JournalEntryLineDraft"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JournalEntryLineDraft"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "JournalEntryLineDraft"
      },
      "delete": {
        "tags": [
          "JournalEntryLineDraft"
        ],
        "description": "Delete JournalEntryLineDraft",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JournalEntryLineDraft"
                }
              }
            }
          }
        }
      }
    },
    "/journalentrylinedrafts": {
      "get": {
        "tags": [
          "JournalEntryLineDraft"
        ],
        "description": "Query JournalEntryLineDraft",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JournalEntryLineDraft"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "JournalEntryLineDraft"
        ],
        "description": "Create JournalEntryLineDraft",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JournalEntryLineDraft"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JournalEntryLineDraft"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "JournalEntryLineDraft"
      }
    },
    "/journalEntryModes/{id}": {
      "get": {
        "tags": [
          "JournalEntryMode"
        ],
        "description": "Get JournalEntryMode",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JournalEntryMode"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "JournalEntryMode"
        ],
        "description": "Update JournalEntryMode",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JournalEntryMode"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JournalEntryMode"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "JournalEntryMode"
      },
      "delete": {
        "tags": [
          "JournalEntryMode"
        ],
        "description": "Delete JournalEntryMode",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JournalEntryMode"
                }
              }
            }
          }
        }
      }
    },
    "/journalEntryModes": {
      "get": {
        "tags": [
          "JournalEntryMode"
        ],
        "description": "Query JournalEntryMode",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JournalEntryMode"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "JournalEntryMode"
        ],
        "description": "Create JournalEntryMode",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JournalEntryMode"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JournalEntryMode"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "JournalEntryMode"
      }
    },
    "/journalentrytypes/{id}": {
      "get": {
        "tags": [
          "JournalEntryType"
        ],
        "description": "Get JournalEntryType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JournalEntryType"
                }
              }
            }
          }
        }
      }
    },
    "/journalentrytypes": {
      "get": {
        "tags": [
          "JournalEntryType"
        ],
        "description": "Query JournalEntryType",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JournalEntryType"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/paymentbatches?action=generate-payment-file": {
      "put": {
        "tags": [
          "PaymentBatch"
        ],
        "description": "generate-payment-file Action",
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/paymentbatches?action=generate-receipt-file": {
      "put": {
        "tags": [
          "PaymentBatch"
        ],
        "description": "generate-receipt-file Action",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "xmlcontent"
      }
    },
    "/paymentbatches?action=generate-pain002-file": {
      "put": {
        "tags": [
          "PaymentBatch"
        ],
        "description": "generate-pain002-file Action",
        "parameters": [
          {
            "name": "status",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "xmlcontent"
      }
    },
    "/paymentbatches?action=register-receipt-file-pain002": {
      "put": {
        "tags": [
          "PaymentBatch"
        ],
        "description": "register-receipt-file-pain002 Action",
        "parameters": [
          {
            "name": "fileID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentBatch"
                }
              }
            }
          }
        }
      }
    },
    "/paymentbatches?action=register-receipt-file-camt054": {
      "put": {
        "tags": [
          "PaymentBatch"
        ],
        "description": "register-receipt-file-camt054 Action",
        "parameters": [
          {
            "name": "fileID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/paymentbatches?action=register-receipt-file": {
      "put": {
        "tags": [
          "PaymentBatch"
        ],
        "description": "register-receipt-file Action",
        "parameters": [
          {
            "name": "fileID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/paymentbatches?action=complete-registered-payments": {
      "put": {
        "tags": [
          "PaymentBatch"
        ],
        "description": "complete-registered-payments Action",
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/paymentbatches?action=revert-payment-batch": {
      "put": {
        "tags": [
          "PaymentBatch"
        ],
        "description": "revert-payment-batch Action",
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "recreatePayments",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/paymentbatches?action=send-batch-to-payment": {
      "put": {
        "tags": [
          "PaymentBatch"
        ],
        "description": "send-batch-to-payment Action",
        "parameters": [
          {
            "name": "batchID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentBatchDTO"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "dto"
      }
    },
    "/paymentbatches?action=create-and-send-to-payment": {
      "put": {
        "tags": [
          "PaymentBatch"
        ],
        "description": "create-and-send-to-payment Action",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentBatchDTO"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "dto"
      }
    },
    "/paymentbatches?action=create-and-send-all-to-payment": {
      "put": {
        "tags": [
          "PaymentBatch"
        ],
        "description": "create-and-send-all-to-payment Action",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentBatchDTO"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "dto"
      }
    },
    "/paymentbatches?action=update-payments-to-paid-and-journal-payments": {
      "put": {
        "tags": [
          "PaymentBatch"
        ],
        "description": "update-payments-to-paid-and-journal-payments Action",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "integer"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Payment"
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "paymentIDs"
      }
    },
    "/paymentbatches?action=update-payments-to-completed": {
      "put": {
        "tags": [
          "PaymentBatch"
        ],
        "description": "update-payments-to-completed Action",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "integer"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Payment"
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "paymentIDs"
      }
    },
    "/paymentbatches?action=generate-camt054C-string": {
      "put": {
        "tags": [
          "PaymentBatch"
        ],
        "description": "generate-camt054C-string Action",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "customerInvoiceNumbers"
      }
    },
    "/paymentbatches?action=generate-ocr-giro-string": {
      "put": {
        "tags": [
          "PaymentBatch"
        ],
        "description": "generate-ocr-giro-string Action",
        "parameters": [
          {
            "name": "fromBankAccountNumber",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "customEOLChar",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "customerInvoiceNumbers"
      }
    },
    "/paymentbatches?action=register-customer-payment-file": {
      "put": {
        "tags": [
          "PaymentBatch"
        ],
        "description": "register-customer-payment-file Action",
        "parameters": [
          {
            "name": "fileID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentBatch"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/paymentbatches?action=complete-customer-payment-registration": {
      "put": {
        "tags": [
          "PaymentBatch"
        ],
        "description": "complete-customer-payment-registration Action",
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentBatch"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/paymentbatches?action=register-and-complete-customer-payment": {
      "put": {
        "tags": [
          "PaymentBatch"
        ],
        "description": "register-and-complete-customer-payment Action",
        "parameters": [
          {
            "name": "fileID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/paymentbatches?action=register-payment-string": {
      "post": {
        "tags": [
          "PaymentBatch"
        ],
        "description": "register-payment-string Action",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentBatch"
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "paymentString"
      }
    },
    "/paymentbatches/{id}?action=complete-customer-paymentbatch": {
      "post": {
        "tags": [
          "PaymentBatch"
        ],
        "description": "complete-customer-paymentbatch Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/paymentbatches?action=generate-avtalegiro-batch-for-invoice-numbers": {
      "put": {
        "tags": [
          "PaymentBatch"
        ],
        "description": "generate-avtalegiro-batch-for-invoice-numbers Action",
        "parameters": [
          {
            "name": "isManual",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "customerInvoiceNumbers"
      }
    },
    "/paymentbatches?action=generate-avtalegiro-batch-for-invoiceIDs": {
      "put": {
        "tags": [
          "PaymentBatch"
        ],
        "description": "generate-avtalegiro-batch-for-invoiceIDs Action",
        "parameters": [
          {
            "name": "isManual",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "isMergeable",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "integer"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "customerInvoiceIDs"
      }
    },
    "/paymentbatches?action=generate-avtalegiro-batch-for-payments": {
      "put": {
        "tags": [
          "PaymentBatch"
        ],
        "description": "generate-avtalegiro-batch-for-payments Action",
        "parameters": [
          {
            "name": "isManual",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "isMergeable",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "integer"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "paymentIDs"
      }
    },
    "/paymentbatches?action=generate-avtalegiro-batch-for-invoiceIDs-and-paymentIDs": {
      "put": {
        "tags": [
          "PaymentBatch"
        ],
        "description": "generate-avtalegiro-batch-for-invoiceIDs-and-paymentIDs Action",
        "parameters": [
          {
            "name": "isManual",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "isMergeable",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAvtaleGiroPaymentBatchDTO"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "avtaleGiroPaymentBatch"
      }
    },
    "/paymentbatches?action=process-avtalegiro-receipt-file": {
      "put": {
        "tags": [
          "PaymentBatch"
        ],
        "description": "process-avtalegiro-receipt-file Action",
        "parameters": [
          {
            "name": "fileID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/paymentbatches?action=process-avtalegiro-receipt-file-content": {
      "put": {
        "tags": [
          "PaymentBatch"
        ],
        "description": "process-avtalegiro-receipt-file-content Action",
        "parameters": [
          {
            "name": "filename",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "content"
      }
    },
    "/paymentbatches?action=get-statuses-from-file-ids": {
      "put": {
        "tags": [
          "PaymentBatch"
        ],
        "description": "get-statuses-from-file-ids Action",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "integer"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "fileIDs"
      }
    },
    "/paymentbatches?action=get-file-statuses-from-file-ids": {
      "put": {
        "tags": [
          "PaymentBatch"
        ],
        "description": "get-file-statuses-from-file-ids Action",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "integer"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "fileIDs"
      }
    },
    "/paymentbatches/{id}": {
      "get": {
        "tags": [
          "PaymentBatch"
        ],
        "description": "Get PaymentBatch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentBatch"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PaymentBatch"
        ],
        "description": "Update PaymentBatch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentBatch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentBatch"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "PaymentBatch"
      },
      "delete": {
        "tags": [
          "PaymentBatch"
        ],
        "description": "Delete PaymentBatch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentBatch"
                }
              }
            }
          }
        }
      }
    },
    "/paymentbatches": {
      "get": {
        "tags": [
          "PaymentBatch"
        ],
        "description": "Query PaymentBatch",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentBatch"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PaymentBatch"
        ],
        "description": "Create PaymentBatch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentBatch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentBatch"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "PaymentBatch"
      }
    },
    "/payments?action=create-payment-batch": {
      "post": {
        "tags": [
          "Payment"
        ],
        "description": "create-payment-batch Action",
        "parameters": [
          {
            "name": "isManual",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "hash",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "createPaymentFile",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "integer"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentBatch"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "paymentIDs"
      }
    },
    "/payments?action=create-payment-batch-for-all-payments": {
      "post": {
        "tags": [
          "Payment"
        ],
        "description": "create-payment-batch-for-all-payments Action",
        "parameters": [
          {
            "name": "isManual",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "hash",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "createFile",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "filter",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "expand",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/payments?action=create-hash-for-payments": {
      "get": {
        "tags": [
          "Payment"
        ],
        "description": "create-hash-for-payments Action",
        "parameters": [
          {
            "name": "filter",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "expand",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/payments?action=create-payment-with-tracelink": {
      "post": {
        "tags": [
          "Payment"
        ],
        "description": "create-payment-with-tracelink Action",
        "parameters": [
          {
            "name": "journalEntryID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Payment"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "payment"
      }
    },
    "/payments?action=reset-payment": {
      "post": {
        "tags": [
          "Payment"
        ],
        "description": "reset-payment Action",
        "parameters": [
          {
            "name": "oldPaymentID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Payment"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "payment"
      }
    },
    "/payments/{id}?action=force-delete": {
      "delete": {
        "tags": [
          "Payment"
        ],
        "description": "force-delete Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/payments/{id}?action=delete-and-credit": {
      "delete": {
        "tags": [
          "Payment"
        ],
        "description": "delete-and-credit Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/payments/{id}?action=force-delete-and-credit": {
      "delete": {
        "tags": [
          "Payment"
        ],
        "description": "force-delete-and-credit Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/payments?action=batch-delete-and-credit": {
      "put": {
        "tags": [
          "Payment"
        ],
        "description": "batch-delete-and-credit Action",
        "parameters": [
          {
            "name": "credit",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "integer"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "paymentIDs"
      }
    },
    "/payments?action=batch-cancel-payment-claims": {
      "put": {
        "tags": [
          "Payment"
        ],
        "description": "batch-cancel-payment-claims Action",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "integer"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "paymentIDs"
      }
    },
    "/payments?action=update-payments-to-ignored": {
      "put": {
        "tags": [
          "Payment"
        ],
        "description": "update-payments-to-ignored Action",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "integer"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Payment"
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "paymentIDs"
      }
    },
    "/payments/{id}": {
      "get": {
        "tags": [
          "Payment"
        ],
        "description": "Get Payment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Payment"
        ],
        "description": "Update Payment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Payment"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Payment"
      },
      "delete": {
        "tags": [
          "Payment"
        ],
        "description": "Delete Payment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          }
        }
      }
    },
    "/payments": {
      "get": {
        "tags": [
          "Payment"
        ],
        "description": "Query Payment",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Payment"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Payment"
        ],
        "description": "Create Payment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Payment"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Payment"
      }
    },
    "/postposts?action=markposts": {
      "post": {
        "tags": [
          "PostPost"
        ],
        "description": "markposts Action",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/JournalEntryLineCouple"
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "journalEntryLineCouples"
      }
    },
    "/postposts?action=revert-postpost": {
      "post": {
        "tags": [
          "PostPost"
        ],
        "description": "revert-postpost Action",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "integer"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "journalEntryLinesID"
      }
    },
    "/postposts?action=get-suggestions": {
      "get": {
        "tags": [
          "PostPost"
        ],
        "description": "get-suggestions Action",
        "parameters": [
          {
            "name": "methods",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "customerID",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "supplierID",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "accountID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarkingResult"
                }
              }
            }
          }
        }
      }
    },
    "/postposts?action=reset-journalentryline-postpost-status-to-open": {
      "put": {
        "tags": [
          "PostPost"
        ],
        "description": "reset-journalentryline-postpost-status-to-open Action",
        "parameters": [
          {
            "name": "line",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/postposts?action=reset-journalentrylines-postpost-status-to-open": {
      "put": {
        "tags": [
          "PostPost"
        ],
        "description": "reset-journalentrylines-postpost-status-to-open Action",
        "parameters": [
          {
            "name": "subAccountID",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "subAccountType",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/postposts/{id}": {
      "get": {
        "tags": [
          "PostPost"
        ],
        "description": "Get PostPost",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostPost"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PostPost"
        ],
        "description": "Update PostPost",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostPost"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostPost"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "PostPost"
      },
      "delete": {
        "tags": [
          "PostPost"
        ],
        "description": "Delete PostPost",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostPost"
                }
              }
            }
          }
        }
      }
    },
    "/postposts": {
      "get": {
        "tags": [
          "PostPost"
        ],
        "description": "Query PostPost",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PostPost"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PostPost"
        ],
        "description": "Create PostPost",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostPost"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostPost"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "PostPost"
      }
    },
    "/reinvoicing?action=mark-create": {
      "post": {
        "tags": [
          "ReInvoice"
        ],
        "description": "mark-create Action",
        "parameters": [
          {
            "name": "supplierInvoiceID",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "reInvoiceType",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReInvoice"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReInvoice"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "reInvoice"
      }
    },
    "/reinvoicing/{id}?action=create-orders": {
      "put": {
        "tags": [
          "ReInvoice"
        ],
        "description": "create-orders Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReInvoice"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "reInvoice"
      }
    },
    "/reinvoicing/{id}?action=create-invoices-draft": {
      "put": {
        "tags": [
          "ReInvoice"
        ],
        "description": "create-invoices-draft Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReInvoice"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "reInvoice"
      }
    },
    "/reinvoicing/{id}?action=create-invoices": {
      "put": {
        "tags": [
          "ReInvoice"
        ],
        "description": "create-invoices Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReInvoice"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "reInvoice"
      }
    },
    "/reinvoicing?action=valid": {
      "put": {
        "tags": [
          "ReInvoice"
        ],
        "description": "valid Action",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReInvoice"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "reInvoice"
      }
    },
    "/reinvoicing?action=valid-message": {
      "put": {
        "tags": [
          "ReInvoice"
        ],
        "description": "valid-message Action",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReInvoice"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "reInvoice"
      }
    },
    "/reinvoicing?action=delete": {
      "put": {
        "tags": [
          "ReInvoice"
        ],
        "description": "delete Action",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReInvoice"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "reInvoice"
      }
    },
    "/reinvoicing/{id}?action=delete": {
      "put": {
        "tags": [
          "ReInvoice"
        ],
        "description": "delete Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/reinvoicing/{id}?action=allow-change": {
      "get": {
        "tags": [
          "ReInvoice"
        ],
        "description": "allow-change Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/reinvoicing/{id}": {
      "get": {
        "tags": [
          "ReInvoice"
        ],
        "description": "Get ReInvoice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReInvoice"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ReInvoice"
        ],
        "description": "Update ReInvoice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReInvoice"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReInvoice"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "ReInvoice"
      },
      "delete": {
        "tags": [
          "ReInvoice"
        ],
        "description": "Delete ReInvoice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReInvoice"
                }
              }
            }
          }
        }
      }
    },
    "/reinvoicing": {
      "get": {
        "tags": [
          "ReInvoice"
        ],
        "description": "Query ReInvoice",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReInvoice"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ReInvoice"
        ],
        "description": "Create ReInvoice",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReInvoice"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReInvoice"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "ReInvoice"
      }
    },
    "/accounts/{accountid}/subaccounts/{id}": {
      "get": {
        "tags": [
          "Account"
        ],
        "description": "Get Account",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Account"
        ],
        "description": "Update Account",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Account"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Account"
      },
      "delete": {
        "tags": [
          "Account"
        ],
        "description": "Delete Account",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountid}/subaccounts": {
      "get": {
        "tags": [
          "Account"
        ],
        "description": "Query Account",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Account"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Account"
        ],
        "description": "Create Account",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Account"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "Account"
      }
    },
    "/ledgersuggestions/{id}": {
      "get": {
        "tags": [
          "LedgerSuggestion"
        ],
        "description": "Get LedgerSuggestion",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LedgerSuggestion"
                }
              }
            }
          }
        }
      }
    },
    "/ledgersuggestions": {
      "get": {
        "tags": [
          "LedgerSuggestion"
        ],
        "description": "Query LedgerSuggestion",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LedgerSuggestion"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/supplierinvoices/{id}?action=smartbooking": {
      "put": {
        "tags": [
          "SupplierInvoice"
        ],
        "description": "smartbooking Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JournalEntry"
                }
              }
            }
          }
        }
      }
    },
    "/supplierinvoices/{id}?action=payInvoice": {
      "put": {
        "tags": [
          "SupplierInvoice"
        ],
        "description": "payInvoice Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoicePaymentData"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JournalEntry"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "data"
      }
    },
    "/supplierinvoices?action=credit-supplierinvoice-journalentry": {
      "post": {
        "tags": [
          "SupplierInvoice"
        ],
        "description": "credit-supplierinvoice-journalentry Action",
        "parameters": [
          {
            "name": "supplierInvoiceId",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/supplierinvoices/{id}?action=assign": {
      "post": {
        "tags": [
          "SupplierInvoice"
        ],
        "description": "assign Transition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/supplierinvoices/{id}?action=assign-to": {
      "post": {
        "tags": [
          "SupplierInvoice"
        ],
        "description": "assign-to Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentDetails"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "details"
      }
    },
    "/supplierinvoices/{id}?action=notify-approval-tasks": {
      "post": {
        "tags": [
          "SupplierInvoice"
        ],
        "description": "notify-approval-tasks Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "daysToDueDate",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "redirectUrl",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/supplierinvoices/{id}?action=reAssign-to": {
      "post": {
        "tags": [
          "SupplierInvoice"
        ],
        "description": "reAssign-to Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentDetails"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "details"
      }
    },
    "/supplierinvoices/{id}?action=reject": {
      "put": {
        "tags": [
          "SupplierInvoice"
        ],
        "description": "reject Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/supplierinvoices/{id}?action=reAssign": {
      "post": {
        "tags": [
          "SupplierInvoice"
        ],
        "description": "reAssign Transition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/supplierinvoices/{id}?action=approve": {
      "post": {
        "tags": [
          "SupplierInvoice"
        ],
        "description": "approve Transition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/supplierinvoices/{id}?action=rejectInvoice": {
      "post": {
        "tags": [
          "SupplierInvoice"
        ],
        "description": "rejectInvoice Transition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/supplierinvoices/{id}?action=journal": {
      "post": {
        "tags": [
          "SupplierInvoice"
        ],
        "description": "journal Transition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/supplierinvoices/{id}?action=finish": {
      "post": {
        "tags": [
          "SupplierInvoice"
        ],
        "description": "finish Transition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/supplierinvoices/{id}?action=revertFinish": {
      "post": {
        "tags": [
          "SupplierInvoice"
        ],
        "description": "revertFinish Transition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/supplierinvoices/{id}?action=sendForPayment": {
      "post": {
        "tags": [
          "SupplierInvoice"
        ],
        "description": "sendForPayment Transition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/supplierinvoices/{id}?action=pay": {
      "post": {
        "tags": [
          "SupplierInvoice"
        ],
        "description": "pay Transition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/supplierinvoices?action=sendForPayment": {
      "put": {
        "tags": [
          "SupplierInvoice"
        ],
        "description": "sendForPayment Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/supplierinvoices/{id}?action=sendForPaymentWithPaymentData": {
      "post": {
        "tags": [
          "SupplierInvoice"
        ],
        "description": "sendForPaymentWithPaymentData Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoicePaymentData"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "invoicePaymentData"
      }
    },
    "/supplierinvoices?action=pay": {
      "put": {
        "tags": [
          "SupplierInvoice"
        ],
        "description": "pay Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/supplierinvoices/{id}?action=rejectAssignment": {
      "post": {
        "tags": [
          "SupplierInvoice"
        ],
        "description": "rejectAssignment Transition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/supplierinvoices/{id}?action=restore": {
      "post": {
        "tags": [
          "SupplierInvoice"
        ],
        "description": "restore Transition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/supplierinvoices/{id}?action=cancelApprovement": {
      "post": {
        "tags": [
          "SupplierInvoice"
        ],
        "description": "cancelApprovement Transition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/supplierinvoices?action=get-supplier-invoice-summary": {
      "get": {
        "tags": [
          "SupplierInvoice"
        ],
        "description": "get-supplier-invoice-summary Action",
        "parameters": [
          {
            "name": "odataFilter",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceSummary"
                }
              }
            }
          }
        }
      }
    },
    "/supplierinvoices?action=get-selfemployed-payments": {
      "get": {
        "tags": [
          "SupplierInvoice"
        ],
        "description": "get-selfemployed-payments Action",
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SelfEmployedItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/supplierinvoices?action=get-supplierinvoices-details": {
      "get": {
        "tags": [
          "SupplierInvoice"
        ],
        "description": "get-supplierinvoices-details Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "supplierID",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "fromDate",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "toDate",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SupplierInvoiceDetail"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/supplierinvoices/{id}": {
      "get": {
        "tags": [
          "SupplierInvoice"
        ],
        "description": "Get SupplierInvoice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SupplierInvoice"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "SupplierInvoice"
        ],
        "description": "Update SupplierInvoice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierInvoice"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SupplierInvoice"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "SupplierInvoice"
      },
      "delete": {
        "tags": [
          "SupplierInvoice"
        ],
        "description": "Delete SupplierInvoice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SupplierInvoice"
                }
              }
            }
          }
        }
      }
    },
    "/supplierinvoices": {
      "get": {
        "tags": [
          "SupplierInvoice"
        ],
        "description": "Query SupplierInvoice",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SupplierInvoice"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "SupplierInvoice"
        ],
        "description": "Create SupplierInvoice",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierInvoice"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SupplierInvoice"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "SupplierInvoice"
      }
    },
    "/vatcodegroups/{id}": {
      "get": {
        "tags": [
          "VatCodeGroup"
        ],
        "description": "Get VatCodeGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VatCodeGroup"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "VatCodeGroup"
        ],
        "description": "Update VatCodeGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VatCodeGroup"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VatCodeGroup"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "VatCodeGroup"
      },
      "delete": {
        "tags": [
          "VatCodeGroup"
        ],
        "description": "Delete VatCodeGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VatCodeGroup"
                }
              }
            }
          }
        }
      }
    },
    "/vatcodegroups": {
      "get": {
        "tags": [
          "VatCodeGroup"
        ],
        "description": "Query VatCodeGroup",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VatCodeGroup"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "VatCodeGroup"
        ],
        "description": "Create VatCodeGroup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VatCodeGroup"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VatCodeGroup"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "VatCodeGroup"
      }
    },
    "/vatdeductions/{id}": {
      "get": {
        "tags": [
          "VatDeduction"
        ],
        "description": "Get VatDeduction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VatDeduction"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "VatDeduction"
        ],
        "description": "Update VatDeduction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VatDeduction"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VatDeduction"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "VatDeduction"
      },
      "delete": {
        "tags": [
          "VatDeduction"
        ],
        "description": "Delete VatDeduction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VatDeduction"
                }
              }
            }
          }
        }
      }
    },
    "/vatdeductions": {
      "get": {
        "tags": [
          "VatDeduction"
        ],
        "description": "Query VatDeduction",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VatDeduction"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "VatDeduction"
        ],
        "description": "Create VatDeduction",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VatDeduction"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VatDeduction"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "VatDeduction"
      }
    },
    "/vatdeductiongroups/{id}": {
      "get": {
        "tags": [
          "VatDeductionGroup"
        ],
        "description": "Get VatDeductionGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VatDeductionGroup"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "VatDeductionGroup"
        ],
        "description": "Update VatDeductionGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VatDeductionGroup"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VatDeductionGroup"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "VatDeductionGroup"
      },
      "delete": {
        "tags": [
          "VatDeductionGroup"
        ],
        "description": "Delete VatDeductionGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VatDeductionGroup"
                }
              }
            }
          }
        }
      }
    },
    "/vatdeductiongroups": {
      "get": {
        "tags": [
          "VatDeductionGroup"
        ],
        "description": "Query VatDeductionGroup",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VatDeductionGroup"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "VatDeductionGroup"
        ],
        "description": "Create VatDeductionGroup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VatDeductionGroup"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VatDeductionGroup"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "VatDeductionGroup"
      }
    },
    "/vatposts?action=get-vatposts-with-percentage": {
      "get": {
        "tags": [
          "VatPost"
        ],
        "description": "get-vatposts-with-percentage Action",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VatPost"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/vatposts/{id}": {
      "get": {
        "tags": [
          "VatPost"
        ],
        "description": "Get VatPost",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VatPost"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "VatPost"
        ],
        "description": "Update VatPost",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VatPost"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VatPost"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "VatPost"
      },
      "delete": {
        "tags": [
          "VatPost"
        ],
        "description": "Delete VatPost",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VatPost"
                }
              }
            }
          }
        }
      }
    },
    "/vatposts": {
      "get": {
        "tags": [
          "VatPost"
        ],
        "description": "Query VatPost",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VatPost"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "VatPost"
        ],
        "description": "Create VatPost",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VatPost"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VatPost"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "VatPost"
      }
    },
    "/vatreports/{id}?action=control-vatreport": {
      "get": {
        "tags": [
          "VatReport"
        ],
        "description": "control-vatreport Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "periodID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VatReportMessage"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/vatreports/{id}?action=get-vat-report-summary": {
      "get": {
        "tags": [
          "VatReport"
        ],
        "description": "get-vat-report-summary Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "periodID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VatReportSummary"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/vatreports/{id}?action=get-vat-report-summary-from-previous-periods": {
      "get": {
        "tags": [
          "VatReport"
        ],
        "description": "get-vat-report-summary-from-previous-periods Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "periodID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VatReportSummary"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/vatreports/{id}?action=get-vat-report-summary-per-post": {
      "get": {
        "tags": [
          "VatReport"
        ],
        "description": "get-vat-report-summary-per-post Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "periodID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VatReportSummaryPerPost"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/vatreports/{id}?action=get-vat-report-summary-per-post-per-account": {
      "get": {
        "tags": [
          "VatReport"
        ],
        "description": "get-vat-report-summary-per-post-per-account Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "periodID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VatReportSummaryPerPostPerAccount"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/vatreports/{id}?action=get-vat-report-summary-per-post-per-account-details": {
      "get": {
        "tags": [
          "VatReport"
        ],
        "description": "get-vat-report-summary-per-post-per-account-details Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "periodID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VatReportSummaryPerPostPerAccount"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/vatreports?action=get-not-reported-journalentry-data": {
      "get": {
        "tags": [
          "VatReport"
        ],
        "description": "get-not-reported-journalentry-data Action",
        "parameters": [
          {
            "name": "periodID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VatReportNotReportedJournalEntryData"
                }
              }
            }
          }
        }
      }
    },
    "/vatreports/{id}?action=execute": {
      "post": {
        "tags": [
          "VatReport"
        ],
        "description": "execute Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "periodID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VatReport"
                }
              }
            }
          }
        }
      }
    },
    "/vatreports/{id}?action=undo-execute": {
      "post": {
        "tags": [
          "VatReport"
        ],
        "description": "undo-execute Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "vatReportId",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/vatreports/{id}?action=undo-execute-period": {
      "post": {
        "tags": [
          "VatReport"
        ],
        "description": "undo-execute-period Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "periodID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/vatreports?action=create-additional-vatreport": {
      "post": {
        "tags": [
          "VatReport"
        ],
        "description": "create-additional-vatreport Action",
        "parameters": [
          {
            "name": "periodID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VatReport"
                }
              }
            }
          }
        }
      }
    },
    "/vatreports?action=create-adjusted-vatreport": {
      "post": {
        "tags": [
          "VatReport"
        ],
        "description": "create-adjusted-vatreport Action",
        "parameters": [
          {
            "name": "periodID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VatReport"
                }
              }
            }
          }
        }
      }
    },
    "/vatreports?action=get-signing-text-altinn": {
      "post": {
        "tags": [
          "VatReport"
        ],
        "description": "get-signing-text-altinn Action",
        "parameters": [
          {
            "name": "vatReportID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AltinnSigningTextResponse"
                }
              }
            }
          }
        }
      }
    },
    "/vatreports?action=sign-vatreport-altinn": {
      "post": {
        "tags": [
          "VatReport"
        ],
        "description": "sign-vatreport-altinn Action",
        "parameters": [
          {
            "name": "vatReportID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AltinnSigning"
                }
              }
            }
          }
        }
      }
    },
    "/vatreports?action=read-and-update-altinn-vatreport-data": {
      "post": {
        "tags": [
          "VatReport"
        ],
        "description": "read-and-update-altinn-vatreport-data Action",
        "parameters": [
          {
            "name": "vatReportID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AltinnGetVatReportDataFromAltinnResult"
                }
              }
            }
          }
        }
      }
    },
    "/vatreports/{id}?action=pay-vat": {
      "post": {
        "tags": [
          "VatReport"
        ],
        "description": "pay-vat Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "vatReportID",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/vatreports?action=current": {
      "get": {
        "tags": [
          "VatReport"
        ],
        "description": "current Action",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VatReport"
                }
              }
            }
          }
        }
      }
    },
    "/vatreports/{id}?action=next": {
      "get": {
        "tags": [
          "VatReport"
        ],
        "description": "next Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "periodid",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VatReport"
                }
              }
            }
          }
        }
      }
    },
    "/vatreports/{id}?action=previous": {
      "get": {
        "tags": [
          "VatReport"
        ],
        "description": "previous Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "periodid",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VatReport"
                }
              }
            }
          }
        }
      }
    },
    "/vatreports/{id}?action=reexecute": {
      "post": {
        "tags": [
          "VatReport"
        ],
        "description": "reexecute Transition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/vatreports/{id}?action=submit": {
      "post": {
        "tags": [
          "VatReport"
        ],
        "description": "submit Transition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/vatreports/{id}?action=approveManually": {
      "post": {
        "tags": [
          "VatReport"
        ],
        "description": "approveManually Transition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/vatreports/{id}?action=setToApproved": {
      "post": {
        "tags": [
          "VatReport"
        ],
        "description": "setToApproved Transition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/vatreports/{id}?action=reject": {
      "post": {
        "tags": [
          "VatReport"
        ],
        "description": "reject Transition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/vatreports/{id}?action=approve": {
      "post": {
        "tags": [
          "VatReport"
        ],
        "description": "approve Transition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/vatreports/{id}?action=adjust": {
      "post": {
        "tags": [
          "VatReport"
        ],
        "description": "adjust Transition",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/vatreports/{id}": {
      "get": {
        "tags": [
          "VatReport"
        ],
        "description": "Get VatReport",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VatReport"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "VatReport"
        ],
        "description": "Update VatReport",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VatReport"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VatReport"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "VatReport"
      },
      "delete": {
        "tags": [
          "VatReport"
        ],
        "description": "Delete VatReport",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VatReport"
                }
              }
            }
          }
        }
      }
    },
    "/vatreports": {
      "get": {
        "tags": [
          "VatReport"
        ],
        "description": "Query VatReport",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VatReport"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "VatReport"
        ],
        "description": "Create VatReport",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VatReport"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VatReport"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "VatReport"
      }
    },
    "/vatreportreferences/{id}": {
      "get": {
        "tags": [
          "VatReportReference"
        ],
        "description": "Get VatReportReference",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VatReportReference"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "VatReportReference"
        ],
        "description": "Update VatReportReference",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VatReportReference"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VatReportReference"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "VatReportReference"
      },
      "delete": {
        "tags": [
          "VatReportReference"
        ],
        "description": "Delete VatReportReference",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VatReportReference"
                }
              }
            }
          }
        }
      }
    },
    "/vatreportreferences": {
      "get": {
        "tags": [
          "VatReportReference"
        ],
        "description": "Query VatReportReference",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VatReportReference"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "VatReportReference"
        ],
        "description": "Create VatReportReference",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VatReportReference"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VatReportReference"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "VatReportReference"
      }
    },
    "/vattypes/{id}?action=vatcode": {
      "get": {
        "tags": [
          "VatType"
        ],
        "description": "vatcode Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VatType"
                }
              }
            }
          }
        }
      }
    },
    "/vattypes?action=valid": {
      "get": {
        "tags": [
          "VatType"
        ],
        "description": "valid Action",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VatType"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/vattypes?action=valid-with-hidden": {
      "get": {
        "tags": [
          "VatType"
        ],
        "description": "valid-with-hidden Action",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VatType"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/vattypes/{id}?action=lock": {
      "put": {
        "tags": [
          "VatType"
        ],
        "description": "lock Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/vattypes/{id}?action=unlock": {
      "put": {
        "tags": [
          "VatType"
        ],
        "description": "unlock Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/vattypes/{id}?action=visible": {
      "put": {
        "tags": [
          "VatType"
        ],
        "description": "visible Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/vattypes/{id}?action=hidden": {
      "put": {
        "tags": [
          "VatType"
        ],
        "description": "hidden Action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/vattypes?action=synchronize": {
      "put": {
        "tags": [
          "VatType"
        ],
        "description": "synchronize Action",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/vattypes/{id}": {
      "get": {
        "tags": [
          "VatType"
        ],
        "description": "Get VatType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VatType"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "VatType"
        ],
        "description": "Update VatType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VatType"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VatType"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "VatType"
      },
      "delete": {
        "tags": [
          "VatType"
        ],
        "description": "Delete VatType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VatType"
                }
              }
            }
          }
        }
      }
    },
    "/vattypes": {
      "get": {
        "tags": [
          "VatType"
        ],
        "description": "Query VatType",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VatType"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "VatType"
        ],
        "description": "Create VatType",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VatType"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VatType"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "VatType"
      }
    }
  },
  "components": {
    "schemas": {
      "CustomValues": {
        "type": "object"
      },
      "AuditLog": {
        "type": "object",
        "properties": {
          "OldValue": {
            "type": "string"
          },
          "Route": {
            "type": "string"
          },
          "Field": {
            "type": "string"
          },
          "Deleted": {
            "type": "boolean"
          },
          "Verb": {
            "type": "string"
          },
          "EntityType": {
            "type": "string"
          },
          "Action": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "ClientID": {
            "type": "string"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "NewValue": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "EntityID": {
            "type": "integer"
          },
          "Transaction": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "WorkBalance": {
        "type": "object",
        "properties": {
          "Minutes": {
            "type": "integer"
          },
          "Description": {
            "type": "string"
          },
          "Balancetype": {
            "type": "string"
          },
          "IsStartBalance": {
            "type": "boolean"
          },
          "WorkRelationID": {
            "type": "integer"
          },
          "ValidTimeOff": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "ActualMinutes": {
            "type": "integer"
          },
          "ExpectedMinutes": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Worker": {
        "type": "object",
        "properties": {
          "UserID": {
            "type": "integer"
          },
          "BusinessRelationID": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "EmployeeID": {
            "type": "integer"
          },
          "Info": {
            "$ref": "#/components/schemas/BusinessRelation"
          },
          "Relations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkRelation"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "WorkItem": {
        "type": "object",
        "properties": {
          "CustomerID": {
            "type": "integer"
          },
          "TransferedToPayroll": {
            "type": "boolean"
          },
          "Label": {
            "type": "string"
          },
          "Minutes": {
            "type": "integer"
          },
          "Description": {
            "type": "string"
          },
          "LunchInMinutes": {
            "type": "integer"
          },
          "CustomerOrderID": {
            "type": "integer"
          },
          "DimensionsID": {
            "type": "integer"
          },
          "WorkTypeID": {
            "type": "integer"
          },
          "WorkRelationID": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "PayrollTrackingID": {
            "type": "integer"
          },
          "MinutesToOrder": {
            "type": "integer"
          },
          "OrderItemId": {
            "type": "integer"
          },
          "WorkItemGroupID": {
            "type": "integer"
          },
          "Invoiceable": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "TransferedToOrder": {
            "type": "boolean"
          },
          "Dimensions": {
            "$ref": "#/components/schemas/Dimensions"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "WorkItemGroup": {
        "type": "object",
        "properties": {
          "WorkRelationID": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkItem"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "WorkProfile": {
        "type": "object",
        "properties": {
          "MinutesPerYear": {
            "type": "integer"
          },
          "MinutesPerWeek": {
            "type": "integer"
          },
          "MinutesPerMonth": {
            "type": "integer"
          },
          "Name": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "LunchIncluded": {
            "type": "boolean"
          },
          "IsShared": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "WorkRelation": {
        "type": "object",
        "properties": {
          "WorkProfileID": {
            "type": "integer"
          },
          "Description": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "IsPrivate": {
            "type": "boolean"
          },
          "CompanyName": {
            "type": "string"
          },
          "IsActive": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "WorkerID": {
            "type": "integer"
          },
          "CompanyID": {
            "type": "integer"
          },
          "TeamID": {
            "type": "integer"
          },
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkItem"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "WorkTimeOff": {
        "type": "object",
        "properties": {
          "Description": {
            "type": "string"
          },
          "TimeoffType": {
            "type": "integer"
          },
          "IsHalfDay": {
            "type": "boolean"
          },
          "WorkRelationID": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "RegionKey": {
            "type": "string"
          },
          "SystemKey": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "WorkType": {
        "type": "object",
        "properties": {
          "Description": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ProductID": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "WagetypeNumber": {
            "type": "integer"
          },
          "SystemType": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "BankFile": {
        "type": "object",
        "properties": {
          "Accountnumber": {
            "type": "string"
          },
          "SubCompanyID": {
            "type": "integer"
          },
          "ParentFileid": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "FileID": {
            "type": "integer"
          },
          "File": {
            "$ref": "#/components/schemas/File"
          },
          "SubCompany": {
            "$ref": "#/components/schemas/SubCompany"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "BatchInvoice": {
        "type": "object",
        "properties": {
          "FreeTxt": {
            "type": "string"
          },
          "NumberOfBatches": {
            "type": "integer"
          },
          "NotifyEmail": {
            "type": "boolean"
          },
          "TotalToProcess": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "SellerID": {
            "type": "integer"
          },
          "Processed": {
            "type": "integer"
          },
          "YourRef": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "Operation": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "Comment": {
            "type": "string"
          },
          "OurRef": {
            "type": "string"
          },
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BatchInvoiceItem"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "BatchInvoiceItem": {
        "type": "object",
        "properties": {
          "CustomerInvoiceID": {
            "type": "integer"
          },
          "CustomerOrderID": {
            "type": "integer"
          },
          "BatchInvoiceID": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "string"
          },
          "Deleted": {
            "type": "boolean"
          },
          "CommentID": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "BatchNumber": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "CampaignTemplate": {
        "type": "object",
        "properties": {
          "Template": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "EntityName": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Customer": {
        "type": "object",
        "properties": {
          "OrgNumber": {
            "type": "string"
          },
          "BusinessRelationID": {
            "type": "integer"
          },
          "GLN": {
            "type": "string"
          },
          "SubAccountNumberSeriesID": {
            "type": "integer"
          },
          "PaymentTermsID": {
            "type": "integer"
          },
          "EInvoiceAgreementReference": {
            "type": "string"
          },
          "CustomerNumber": {
            "type": "integer"
          },
          "WebUrl": {
            "type": "string"
          },
          "ReminderEmailAddress": {
            "type": "string"
          },
          "DefaultCustomerOrderReportID": {
            "type": "integer"
          },
          "DimensionsID": {
            "type": "integer"
          },
          "DeliveryTermsID": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "AvtaleGiro": {
            "type": "boolean"
          },
          "DontSendReminders": {
            "type": "boolean"
          },
          "EfakturaIdentifier": {
            "type": "string"
          },
          "DefaultCustomerInvoiceReportID": {
            "type": "integer"
          },
          "IsPrivate": {
            "type": "boolean"
          },
          "DefaultDistributionsID": {
            "type": "integer"
          },
          "CustomerNumberKidAlias": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "AvtaleGiroNotification": {
            "type": "boolean"
          },
          "PeppolAddress": {
            "type": "string"
          },
          "DefaultSellerID": {
            "type": "integer"
          },
          "SocialSecurityNumber": {
            "type": "string"
          },
          "CurrencyCodeID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "DefaultCustomerQuoteReportID": {
            "type": "integer"
          },
          "FactoringNumber": {
            "type": "integer"
          },
          "CreditDays": {
            "type": "integer"
          },
          "Localization": {
            "type": "string"
          },
          "AcceptableDelta4CustomerPaymentAccountID": {
            "type": "integer"
          },
          "CustomerInvoiceReminderSettingsID": {
            "type": "integer"
          },
          "Info": {
            "$ref": "#/components/schemas/BusinessRelation"
          },
          "Distributions": {
            "$ref": "#/components/schemas/Distributions"
          },
          "PaymentTerms": {
            "$ref": "#/components/schemas/Terms"
          },
          "DeliveryTerms": {
            "$ref": "#/components/schemas/Terms"
          },
          "Dimensions": {
            "$ref": "#/components/schemas/Dimensions"
          },
          "CustomerInvoiceReminderSettings": {
            "$ref": "#/components/schemas/CustomerInvoiceReminderSettings"
          },
          "CustomerQuotes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerQuote"
            }
          },
          "CustomerOrders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerOrder"
            }
          },
          "CustomerInvoices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerInvoice"
            }
          },
          "DefaultSeller": {
            "$ref": "#/components/schemas/Seller"
          },
          "Sellers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SellerLink"
            }
          },
          "Companies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubCompany"
            }
          },
          "Account": {
            "$ref": "#/components/schemas/Account"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "CustomerInvoice": {
        "type": "object",
        "properties": {
          "ShippingAddressLine3": {
            "type": "string"
          },
          "UseReportID": {
            "type": "integer"
          },
          "CustomerID": {
            "type": "integer"
          },
          "InvoiceAddressLine2": {
            "type": "string"
          },
          "InvoiceReceiverName": {
            "type": "string"
          },
          "CustomerPerson": {
            "type": "string"
          },
          "UpdateCurrencyAmountsOnDateChange": {
            "type": "boolean"
          },
          "AmountRegards": {
            "type": "string"
          },
          "FreeTxt": {
            "type": "string"
          },
          "OurReference": {
            "type": "string"
          },
          "YourReference": {
            "type": "string"
          },
          "PaymentTermsID": {
            "type": "integer"
          },
          "ShippingAddressLine2": {
            "type": "string"
          },
          "PaymentTerm": {
            "type": "string"
          },
          "Requisition": {
            "type": "string"
          },
          "PaymentInformation": {
            "type": "string"
          },
          "CustomerName": {
            "type": "string"
          },
          "ShippingCountryCode": {
            "type": "string"
          },
          "SalesPerson": {
            "type": "string"
          },
          "InvoiceNumber": {
            "type": "string"
          },
          "DeliveryMethod": {
            "type": "string"
          },
          "AccrualID": {
            "type": "integer"
          },
          "DefaultDimensionsID": {
            "type": "integer"
          },
          "DeliveryTermsID": {
            "type": "integer"
          },
          "InvoiceType": {
            "type": "integer"
          },
          "JournalEntryID": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "InvoiceReferenceID": {
            "type": "integer"
          },
          "ShippingPostalCode": {
            "type": "string"
          },
          "EmailAddress": {
            "type": "string"
          },
          "InvoiceCity": {
            "type": "string"
          },
          "DontSendReminders": {
            "type": "boolean"
          },
          "BankAccountID": {
            "type": "integer"
          },
          "DeliveryName": {
            "type": "string"
          },
          "ExternalStatus": {
            "type": "integer"
          },
          "ExternalReference": {
            "type": "string"
          },
          "PrintStatus": {
            "type": "integer"
          },
          "PaymentID": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "ShippingCity": {
            "type": "string"
          },
          "PaymentInfoTypeID": {
            "type": "integer"
          },
          "DefaultSellerID": {
            "type": "integer"
          },
          "DeliveryTerm": {
            "type": "string"
          },
          "ShippingAddressLine1": {
            "type": "string"
          },
          "CurrencyCodeID": {
            "type": "integer"
          },
          "InvoiceAddressLine1": {
            "type": "string"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "Credited": {
            "type": "boolean"
          },
          "SupplierOrgNumber": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "Comment": {
            "type": "string"
          },
          "Payment": {
            "type": "string"
          },
          "DistributionPlanID": {
            "type": "integer"
          },
          "InvoiceCountry": {
            "type": "string"
          },
          "InvoiceCountryCode": {
            "type": "string"
          },
          "InvoicePostalCode": {
            "type": "string"
          },
          "CollectorStatusCode": {
            "type": "integer"
          },
          "CreditDays": {
            "type": "integer"
          },
          "CustomerOrgNumber": {
            "type": "string"
          },
          "InvoiceAddressLine3": {
            "type": "string"
          },
          "InternalNote": {
            "type": "string"
          },
          "InvoiceNumberSeriesID": {
            "type": "integer"
          },
          "ShippingCountry": {
            "type": "string"
          },
          "Payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Payment"
            }
          },
          "JournalEntry": {
            "$ref": "#/components/schemas/JournalEntry"
          },
          "PaymentTerms": {
            "$ref": "#/components/schemas/Terms"
          },
          "DeliveryTerms": {
            "$ref": "#/components/schemas/Terms"
          },
          "Customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerInvoiceItem"
            }
          },
          "DefaultDimensions": {
            "$ref": "#/components/schemas/Dimensions"
          },
          "Accrual": {
            "$ref": "#/components/schemas/Accrual"
          },
          "DefaultSeller": {
            "$ref": "#/components/schemas/Seller"
          },
          "CustomerInvoiceReminders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerInvoiceReminder"
            }
          },
          "Sellers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SellerLink"
            }
          },
          "DistributionPlan": {
            "$ref": "#/components/schemas/DistributionPlan"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "CustomerInvoiceItem": {
        "type": "object",
        "properties": {
          "CustomerInvoiceID": {
            "type": "integer"
          },
          "SortIndex": {
            "type": "integer"
          },
          "PriceSetByUser": {
            "type": "boolean"
          },
          "AccountID": {
            "type": "integer"
          },
          "DimensionsID": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "Unit": {
            "type": "string"
          },
          "ProductID": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "VatTypeID": {
            "type": "integer"
          },
          "CalculateGrossPriceBasedOnNetPrice": {
            "type": "boolean"
          },
          "ItemText": {
            "type": "string"
          },
          "CurrencyCodeID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "Comment": {
            "type": "string"
          },
          "AccountingCost": {
            "type": "string"
          },
          "ItemSourceID": {
            "type": "integer"
          },
          "Dimensions": {
            "$ref": "#/components/schemas/Dimensions"
          },
          "ItemSource": {
            "$ref": "#/components/schemas/ItemSource"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "CustomerInvoiceReminder": {
        "type": "object",
        "properties": {
          "Notified": {
            "type": "boolean"
          },
          "CreatedByReminderRuleID": {
            "type": "integer"
          },
          "Description": {
            "type": "string"
          },
          "CustomerInvoiceID": {
            "type": "integer"
          },
          "Title": {
            "type": "string"
          },
          "DimensionsID": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "EmailAddress": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "ReminderNumber": {
            "type": "integer"
          },
          "CurrencyCodeID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "RunNumber": {
            "type": "integer"
          },
          "Payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Payment"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "CustomerInvoiceReminderRule": {
        "type": "object",
        "properties": {
          "Description": {
            "type": "string"
          },
          "UseMaximumLegalReminderFee": {
            "type": "boolean"
          },
          "Title": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "MinimumDaysFromDueDate": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "ReminderNumber": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CreditDays": {
            "type": "integer"
          },
          "CustomerInvoiceReminderSettingsID": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "CustomerInvoiceReminderSettings": {
        "type": "object",
        "properties": {
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "RemindersBeforeDebtCollection": {
            "type": "integer"
          },
          "AcceptPaymentWithoutReminderFee": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "DefaultReminderFeeAccountID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "DebtCollectionSettingsID": {
            "type": "integer"
          },
          "CustomerInvoiceReminderRules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerInvoiceReminderRule"
            }
          },
          "DebtCollectionSettings": {
            "$ref": "#/components/schemas/DebtCollectionSettings"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "CustomerOrder": {
        "type": "object",
        "properties": {
          "ShippingAddressLine3": {
            "type": "string"
          },
          "UseReportID": {
            "type": "integer"
          },
          "CustomerID": {
            "type": "integer"
          },
          "InvoiceAddressLine2": {
            "type": "string"
          },
          "InvoiceReceiverName": {
            "type": "string"
          },
          "CustomerPerson": {
            "type": "string"
          },
          "UpdateCurrencyAmountsOnDateChange": {
            "type": "boolean"
          },
          "FreeTxt": {
            "type": "string"
          },
          "OurReference": {
            "type": "string"
          },
          "UpdateCurrencyOnToInvoice": {
            "type": "boolean"
          },
          "OrderNumber": {
            "type": "integer"
          },
          "YourReference": {
            "type": "string"
          },
          "PaymentTermsID": {
            "type": "integer"
          },
          "ShippingAddressLine2": {
            "type": "string"
          },
          "PaymentTerm": {
            "type": "string"
          },
          "Requisition": {
            "type": "string"
          },
          "CustomerName": {
            "type": "string"
          },
          "ShippingCountryCode": {
            "type": "string"
          },
          "SalesPerson": {
            "type": "string"
          },
          "DeliveryMethod": {
            "type": "string"
          },
          "AccrualID": {
            "type": "integer"
          },
          "DefaultDimensionsID": {
            "type": "integer"
          },
          "DeliveryTermsID": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ShippingPostalCode": {
            "type": "string"
          },
          "EmailAddress": {
            "type": "string"
          },
          "InvoiceCity": {
            "type": "string"
          },
          "DeliveryName": {
            "type": "string"
          },
          "PrintStatus": {
            "type": "integer"
          },
          "ReadyToInvoice": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "ShippingCity": {
            "type": "string"
          },
          "PaymentInfoTypeID": {
            "type": "integer"
          },
          "DefaultSellerID": {
            "type": "integer"
          },
          "DeliveryTerm": {
            "type": "string"
          },
          "ShippingAddressLine1": {
            "type": "string"
          },
          "CurrencyCodeID": {
            "type": "integer"
          },
          "InvoiceAddressLine1": {
            "type": "string"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "SupplierOrgNumber": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "Comment": {
            "type": "string"
          },
          "DistributionPlanID": {
            "type": "integer"
          },
          "InvoiceCountry": {
            "type": "string"
          },
          "InvoiceCountryCode": {
            "type": "string"
          },
          "InvoicePostalCode": {
            "type": "string"
          },
          "OrderNumberSeriesID": {
            "type": "integer"
          },
          "CreditDays": {
            "type": "integer"
          },
          "CustomerOrgNumber": {
            "type": "string"
          },
          "InvoiceAddressLine3": {
            "type": "string"
          },
          "InternalNote": {
            "type": "string"
          },
          "ShippingCountry": {
            "type": "string"
          },
          "Accrual": {
            "$ref": "#/components/schemas/Accrual"
          },
          "PaymentTerms": {
            "$ref": "#/components/schemas/Terms"
          },
          "DeliveryTerms": {
            "$ref": "#/components/schemas/Terms"
          },
          "DefaultDimensions": {
            "$ref": "#/components/schemas/Dimensions"
          },
          "Customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerOrderItem"
            }
          },
          "DefaultSeller": {
            "$ref": "#/components/schemas/Seller"
          },
          "Sellers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SellerLink"
            }
          },
          "OrderDistributionPlan": {
            "$ref": "#/components/schemas/DistributionPlan"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "CustomerOrderItem": {
        "type": "object",
        "properties": {
          "CustomerOrderID": {
            "type": "integer"
          },
          "SortIndex": {
            "type": "integer"
          },
          "PriceSetByUser": {
            "type": "boolean"
          },
          "AccountID": {
            "type": "integer"
          },
          "DimensionsID": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "Unit": {
            "type": "string"
          },
          "ProductID": {
            "type": "integer"
          },
          "ReadyToInvoice": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "VatTypeID": {
            "type": "integer"
          },
          "CalculateGrossPriceBasedOnNetPrice": {
            "type": "boolean"
          },
          "ItemText": {
            "type": "string"
          },
          "CurrencyCodeID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "Comment": {
            "type": "string"
          },
          "ItemSourceID": {
            "type": "integer"
          },
          "Dimensions": {
            "$ref": "#/components/schemas/Dimensions"
          },
          "ItemSource": {
            "$ref": "#/components/schemas/ItemSource"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "CustomerQuote": {
        "type": "object",
        "properties": {
          "ShippingAddressLine3": {
            "type": "string"
          },
          "UseReportID": {
            "type": "integer"
          },
          "CustomerID": {
            "type": "integer"
          },
          "InvoiceAddressLine2": {
            "type": "string"
          },
          "InquiryReference": {
            "type": "integer"
          },
          "InvoiceReceiverName": {
            "type": "string"
          },
          "CustomerPerson": {
            "type": "string"
          },
          "UpdateCurrencyAmountsOnDateChange": {
            "type": "boolean"
          },
          "FreeTxt": {
            "type": "string"
          },
          "OurReference": {
            "type": "string"
          },
          "QuoteNumber": {
            "type": "integer"
          },
          "UpdateCurrencyOnToInvoice": {
            "type": "boolean"
          },
          "YourReference": {
            "type": "string"
          },
          "PaymentTermsID": {
            "type": "integer"
          },
          "ShippingAddressLine2": {
            "type": "string"
          },
          "PaymentTerm": {
            "type": "string"
          },
          "Requisition": {
            "type": "string"
          },
          "CustomerName": {
            "type": "string"
          },
          "ShippingCountryCode": {
            "type": "string"
          },
          "SalesPerson": {
            "type": "string"
          },
          "DeliveryMethod": {
            "type": "string"
          },
          "DefaultDimensionsID": {
            "type": "integer"
          },
          "DeliveryTermsID": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ShippingPostalCode": {
            "type": "string"
          },
          "EmailAddress": {
            "type": "string"
          },
          "InvoiceCity": {
            "type": "string"
          },
          "DeliveryName": {
            "type": "string"
          },
          "PrintStatus": {
            "type": "integer"
          },
          "QuoteNumberSeriesID": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "ShippingCity": {
            "type": "string"
          },
          "PaymentInfoTypeID": {
            "type": "integer"
          },
          "DefaultSellerID": {
            "type": "integer"
          },
          "DeliveryTerm": {
            "type": "string"
          },
          "ShippingAddressLine1": {
            "type": "string"
          },
          "CurrencyCodeID": {
            "type": "integer"
          },
          "InvoiceAddressLine1": {
            "type": "string"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "UpdateCurrencyOnToOrder": {
            "type": "boolean"
          },
          "SupplierOrgNumber": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "Comment": {
            "type": "string"
          },
          "DistributionPlanID": {
            "type": "integer"
          },
          "InvoiceCountry": {
            "type": "string"
          },
          "InvoiceCountryCode": {
            "type": "string"
          },
          "InvoicePostalCode": {
            "type": "string"
          },
          "CreditDays": {
            "type": "integer"
          },
          "CustomerOrgNumber": {
            "type": "string"
          },
          "InvoiceAddressLine3": {
            "type": "string"
          },
          "InternalNote": {
            "type": "string"
          },
          "ShippingCountry": {
            "type": "string"
          },
          "PaymentTerms": {
            "$ref": "#/components/schemas/Terms"
          },
          "DeliveryTerms": {
            "$ref": "#/components/schemas/Terms"
          },
          "Customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "DefaultDimensions": {
            "$ref": "#/components/schemas/Dimensions"
          },
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerQuoteItem"
            }
          },
          "DefaultSeller": {
            "$ref": "#/components/schemas/Seller"
          },
          "Sellers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SellerLink"
            }
          },
          "DistributionPlan": {
            "$ref": "#/components/schemas/DistributionPlan"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "CustomerQuoteItem": {
        "type": "object",
        "properties": {
          "SortIndex": {
            "type": "integer"
          },
          "PriceSetByUser": {
            "type": "boolean"
          },
          "AccountID": {
            "type": "integer"
          },
          "CustomerQuoteID": {
            "type": "integer"
          },
          "DimensionsID": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "Unit": {
            "type": "string"
          },
          "ProductID": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "VatTypeID": {
            "type": "integer"
          },
          "CalculateGrossPriceBasedOnNetPrice": {
            "type": "boolean"
          },
          "ItemText": {
            "type": "string"
          },
          "CurrencyCodeID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "Comment": {
            "type": "string"
          },
          "Dimensions": {
            "$ref": "#/components/schemas/Dimensions"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "DebtCollectionSettings": {
        "type": "object",
        "properties": {
          "CreditorNumber": {
            "type": "integer"
          },
          "DebtCollectionAutomationID": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "IntegrateWithDebtCollection": {
            "type": "boolean"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "DebtCollectionFormat": {
            "type": "integer"
          },
          "CustomerInvoiceReminderSettingsID": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "ItemSource": {
        "type": "object",
        "properties": {
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "Details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemSourceDetail"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "ItemSourceDetail": {
        "type": "object",
        "properties": {
          "Description": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "SourceFK": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "SourceType": {
            "type": "string"
          },
          "Tag": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "ItemSourceID": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "PaymentInfoType": {
        "type": "object",
        "properties": {
          "Locked": {
            "type": "boolean"
          },
          "Control": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "Type": {
            "type": "string"
          },
          "Length": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "PaymentInfoTypeParts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentInfoTypePart"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "PaymentInfoTypePart": {
        "type": "object",
        "properties": {
          "Part": {
            "type": "string"
          },
          "SortIndex": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "Length": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "PaymentInfoTypeID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "RecurringInvoice": {
        "type": "object",
        "properties": {
          "ShippingAddressLine3": {
            "type": "string"
          },
          "UseReportID": {
            "type": "integer"
          },
          "CustomerID": {
            "type": "integer"
          },
          "NotifyWhenRecurringEnds": {
            "type": "boolean"
          },
          "InvoiceAddressLine2": {
            "type": "string"
          },
          "InvoiceReceiverName": {
            "type": "string"
          },
          "CustomerPerson": {
            "type": "string"
          },
          "UpdateCurrencyAmountsOnDateChange": {
            "type": "boolean"
          },
          "AmountRegards": {
            "type": "string"
          },
          "FreeTxt": {
            "type": "string"
          },
          "OurReference": {
            "type": "string"
          },
          "YourReference": {
            "type": "string"
          },
          "NoCreditDays": {
            "type": "boolean"
          },
          "PaymentTermsID": {
            "type": "integer"
          },
          "ShippingAddressLine2": {
            "type": "string"
          },
          "PaymentTerm": {
            "type": "string"
          },
          "Requisition": {
            "type": "string"
          },
          "PaymentInformation": {
            "type": "string"
          },
          "CustomerName": {
            "type": "string"
          },
          "ShippingCountryCode": {
            "type": "string"
          },
          "SalesPerson": {
            "type": "string"
          },
          "DeliveryMethod": {
            "type": "string"
          },
          "DefaultDimensionsID": {
            "type": "integer"
          },
          "DeliveryTermsID": {
            "type": "integer"
          },
          "ProduceAs": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ShippingPostalCode": {
            "type": "string"
          },
          "EmailAddress": {
            "type": "string"
          },
          "InvoiceCity": {
            "type": "string"
          },
          "DeliveryName": {
            "type": "string"
          },
          "PrintStatus": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "ShippingCity": {
            "type": "string"
          },
          "PaymentInfoTypeID": {
            "type": "integer"
          },
          "NotifyWhenOrdersArePrepared": {
            "type": "boolean"
          },
          "DefaultSellerID": {
            "type": "integer"
          },
          "DeliveryTerm": {
            "type": "string"
          },
          "ShippingAddressLine1": {
            "type": "string"
          },
          "CurrencyCodeID": {
            "type": "integer"
          },
          "InvoiceAddressLine1": {
            "type": "string"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "PreparationDays": {
            "type": "integer"
          },
          "SupplierOrgNumber": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "Comment": {
            "type": "string"
          },
          "Payment": {
            "type": "string"
          },
          "DistributionPlanID": {
            "type": "integer"
          },
          "InvoiceCountry": {
            "type": "string"
          },
          "InvoiceCountryCode": {
            "type": "string"
          },
          "InvoicePostalCode": {
            "type": "string"
          },
          "CreditDays": {
            "type": "integer"
          },
          "NotifyUser": {
            "type": "string"
          },
          "CustomerOrgNumber": {
            "type": "string"
          },
          "InvoiceAddressLine3": {
            "type": "string"
          },
          "InternalNote": {
            "type": "string"
          },
          "InvoiceNumberSeriesID": {
            "type": "integer"
          },
          "ShippingCountry": {
            "type": "string"
          },
          "TimePeriod": {
            "type": "string"
          },
          "PaymentTerms": {
            "$ref": "#/components/schemas/Terms"
          },
          "DeliveryTerms": {
            "$ref": "#/components/schemas/Terms"
          },
          "Customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecurringInvoiceItem"
            }
          },
          "DefaultDimensions": {
            "$ref": "#/components/schemas/Dimensions"
          },
          "DefaultSeller": {
            "$ref": "#/components/schemas/Seller"
          },
          "Sellers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SellerLink"
            }
          },
          "DistributionPlan": {
            "$ref": "#/components/schemas/DistributionPlan"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "RecurringInvoiceItem": {
        "type": "object",
        "properties": {
          "TimeFactor": {
            "type": "string"
          },
          "SortIndex": {
            "type": "integer"
          },
          "ReduceIncompletePeriod": {
            "type": "boolean"
          },
          "PriceSetByUser": {
            "type": "boolean"
          },
          "AccountID": {
            "type": "integer"
          },
          "DimensionsID": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "Unit": {
            "type": "string"
          },
          "ProductID": {
            "type": "integer"
          },
          "PricingSource": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "VatTypeID": {
            "type": "integer"
          },
          "CalculateGrossPriceBasedOnNetPrice": {
            "type": "boolean"
          },
          "ItemText": {
            "type": "string"
          },
          "RecurringInvoiceID": {
            "type": "integer"
          },
          "CurrencyCodeID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "Comment": {
            "type": "string"
          },
          "Dimensions": {
            "$ref": "#/components/schemas/Dimensions"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "RecurringInvoiceLog": {
        "type": "object",
        "properties": {
          "OrderID": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "NotifiedOrdersPrepared": {
            "type": "boolean"
          },
          "IterationNumber": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "RecurringInvoiceID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "InvoiceID": {
            "type": "integer"
          },
          "Comment": {
            "type": "string"
          },
          "NotifiedRecurringEnds": {
            "type": "boolean"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Seller": {
        "type": "object",
        "properties": {
          "UserID": {
            "type": "integer"
          },
          "Name": {
            "type": "string"
          },
          "DefaultDimensionsID": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "EmployeeID": {
            "type": "integer"
          },
          "TeamID": {
            "type": "integer"
          },
          "DefaultDimensions": {
            "$ref": "#/components/schemas/Dimensions"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "SellerLink": {
        "type": "object",
        "properties": {
          "CustomerID": {
            "type": "integer"
          },
          "CustomerInvoiceID": {
            "type": "integer"
          },
          "CustomerOrderID": {
            "type": "integer"
          },
          "CustomerQuoteID": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "Percent": {
            "type": "integer"
          },
          "SellerID": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "RecurringInvoiceID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "SubCompany": {
        "type": "object",
        "properties": {
          "CustomerID": {
            "type": "integer"
          },
          "CompanyKey": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "CompanyName": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CompanyType": {
            "type": "string"
          },
          "CompanyID": {
            "type": "integer"
          },
          "Customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Supplier": {
        "type": "object",
        "properties": {
          "OrgNumber": {
            "type": "string"
          },
          "BusinessRelationID": {
            "type": "integer"
          },
          "GLN": {
            "type": "string"
          },
          "SubAccountNumberSeriesID": {
            "type": "integer"
          },
          "SupplierNumber": {
            "type": "integer"
          },
          "WebUrl": {
            "type": "string"
          },
          "CostAllocationID": {
            "type": "integer"
          },
          "DimensionsID": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "SelfEmployed": {
            "type": "boolean"
          },
          "PeppolAddress": {
            "type": "string"
          },
          "CurrencyCodeID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CreditDays": {
            "type": "integer"
          },
          "Localization": {
            "type": "string"
          },
          "Info": {
            "$ref": "#/components/schemas/BusinessRelation"
          },
          "Dimensions": {
            "$ref": "#/components/schemas/Dimensions"
          },
          "CostAllocation": {
            "$ref": "#/components/schemas/CostAllocation"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Terms": {
        "type": "object",
        "properties": {
          "Description": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "TermsType": {
            "type": "string"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CreditDays": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "TOFCurrencySettings": {
        "type": "object",
        "properties": {
          "UpdateCurrencyAmountsOnOrderdateChange": {
            "type": "boolean"
          },
          "UpdateCurrencyAmountsOnOrderToInvoice": {
            "type": "boolean"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "UpdateCurrencyAmountsOnQuotedateChange": {
            "type": "boolean"
          },
          "UpdateCurrencyAmountsOnInvoicedateChange": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdateCurrencyAmountsOnQuoteToOrder": {
            "type": "boolean"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "UpdateCurrencyAmountsOnQuoteToInvoice": {
            "type": "boolean"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Address": {
        "type": "object",
        "properties": {
          "BusinessRelationID": {
            "type": "integer"
          },
          "CountryCode": {
            "type": "string"
          },
          "AddressLine1": {
            "type": "string"
          },
          "Country": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "AddressLine2": {
            "type": "string"
          },
          "City": {
            "type": "string"
          },
          "AddressLine3": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "PostalCode": {
            "type": "string"
          },
          "Region": {
            "type": "string"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "BusinessRelation": {
            "$ref": "#/components/schemas/BusinessRelation"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "BusinessRelation": {
        "type": "object",
        "properties": {
          "DefaultContactID": {
            "type": "integer"
          },
          "DefaultPhoneID": {
            "type": "integer"
          },
          "DefaultBankAccountID": {
            "type": "integer"
          },
          "Name": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "DefaultEmailID": {
            "type": "integer"
          },
          "ShippingAddressID": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "InvoiceAddressID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "DefaultContact": {
            "$ref": "#/components/schemas/Contact"
          },
          "Contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Contact"
            }
          },
          "Addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Address"
            }
          },
          "Phones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Phone"
            }
          },
          "Emails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Email"
            }
          },
          "BankAccounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BankAccount"
            }
          },
          "InvoiceAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "ShippingAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "DefaultPhone": {
            "$ref": "#/components/schemas/Phone"
          },
          "DefaultEmail": {
            "$ref": "#/components/schemas/Email"
          },
          "DefaultBankAccount": {
            "$ref": "#/components/schemas/BankAccount"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Contact": {
        "type": "object",
        "properties": {
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "Role": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "Comment": {
            "type": "string"
          },
          "InfoID": {
            "type": "integer"
          },
          "ParentBusinessRelationID": {
            "type": "integer"
          },
          "ParentBusinessRelation": {
            "$ref": "#/components/schemas/BusinessRelation"
          },
          "Info": {
            "$ref": "#/components/schemas/BusinessRelation"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Email": {
        "type": "object",
        "properties": {
          "BusinessRelationID": {
            "type": "integer"
          },
          "Description": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "EmailAddress": {
            "type": "string"
          },
          "Type": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Phone": {
        "type": "object",
        "properties": {
          "BusinessRelationID": {
            "type": "integer"
          },
          "Description": {
            "type": "string"
          },
          "CountryCode": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "Number": {
            "type": "string"
          },
          "Type": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "AGACalculation": {
        "type": "object",
        "properties": {
          "DimensionsID": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "PayrollRunID": {
            "type": "integer"
          },
          "freeAmountUsed": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FreeAmountUsed"
            }
          },
          "agaTax": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AGATax"
            }
          },
          "agaDraw": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AGADraw"
            }
          },
          "agaPension": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AGAPension"
            }
          },
          "foreignerWithPercent": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ForeignerWithPercent"
            }
          },
          "drawForeignerWithPercent": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DrawForeignerWithPercent"
            }
          },
          "foreignerWithAmount": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ForeignerWithAmount"
            }
          },
          "payrollRun": {
            "$ref": "#/components/schemas/PayrollRun"
          },
          "Dimensions": {
            "$ref": "#/components/schemas/Dimensions"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "FreeAmountUsed": {
        "type": "object",
        "properties": {
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "AGACalculationID": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "SubEntityID": {
            "type": "integer"
          },
          "subEntity": {
            "$ref": "#/components/schemas/SubEntity"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "AGATax": {
        "type": "object",
        "properties": {
          "AGARateID": {
            "type": "integer"
          },
          "zone": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "AGACalculationID": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "beregningsKode": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "SubEntityID": {
            "type": "integer"
          },
          "subEntity": {
            "$ref": "#/components/schemas/SubEntity"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "AGAPension": {
        "type": "object",
        "properties": {
          "AGARateID": {
            "type": "integer"
          },
          "zone": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "AGACalculationID": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "beregningsKode": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "SubEntityID": {
            "type": "integer"
          },
          "subEntity": {
            "$ref": "#/components/schemas/SubEntity"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "AGADraw": {
        "type": "object",
        "properties": {
          "AGARateID": {
            "type": "integer"
          },
          "zone": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "AGACalculationID": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "beregningsKode": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "SubEntityID": {
            "type": "integer"
          },
          "subEntity": {
            "$ref": "#/components/schemas/SubEntity"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "ForeignerWithPercent": {
        "type": "object",
        "properties": {
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "AGACalculationID": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "SubEntityID": {
            "type": "integer"
          },
          "subEntity": {
            "$ref": "#/components/schemas/SubEntity"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "DrawForeignerWithPercent": {
        "type": "object",
        "properties": {
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "AGACalculationID": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "SubEntityID": {
            "type": "integer"
          },
          "subEntity": {
            "$ref": "#/components/schemas/SubEntity"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "ForeignerWithAmount": {
        "type": "object",
        "properties": {
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "AGACalculationID": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "SubEntityID": {
            "type": "integer"
          },
          "persons": {
            "type": "integer"
          },
          "subEntity": {
            "$ref": "#/components/schemas/SubEntity"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "TaxAndAgaSums": {
        "type": "object",
        "properties": {
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "WithholdingTax": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "AmeldingData": {
        "type": "object",
        "properties": {
          "year": {
            "type": "integer"
          },
          "messageID": {
            "type": "string"
          },
          "altinnStatus": {
            "type": "string"
          },
          "mainFileID": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "status": {
            "type": "integer"
          },
          "type": {
            "type": "string"
          },
          "feedbackFileID": {
            "type": "integer"
          },
          "receiptID": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "OppgaveHash": {
            "type": "string"
          },
          "replacesID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "attachmentFileID": {
            "type": "integer"
          },
          "period": {
            "type": "integer"
          },
          "PayrollRunID": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "AmeldingLog": {
        "type": "object",
        "properties": {
          "key": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "registry": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "AmeldingsID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "BasicAmount": {
        "type": "object",
        "properties": {
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "CompanySalary": {
        "type": "object",
        "properties": {
          "MainAccountCostVacation": {
            "type": "integer"
          },
          "MainAccountAllocatedFinancialVacation": {
            "type": "integer"
          },
          "Base_NettoPaymentForMaritim": {
            "type": "boolean"
          },
          "MainAccountAllocatedVacation": {
            "type": "integer"
          },
          "OtpExportActive": {
            "type": "boolean"
          },
          "Base_SpesialDeductionForMaritim": {
            "type": "boolean"
          },
          "InterrimRemitAccount": {
            "type": "integer"
          },
          "Base_NettoPayment": {
            "type": "boolean"
          },
          "MainAccountCostAGAVacation": {
            "type": "integer"
          },
          "WagetypeAdvancePayment": {
            "type": "integer"
          },
          "WageDeductionDueToHoliday": {
            "type": "string"
          },
          "Base_TaxFreeOrganization": {
            "type": "boolean"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "AllowOver6G": {
            "type": "boolean"
          },
          "AnnualStatementZipReportID": {
            "type": "integer"
          },
          "Base_PayAsYouEarnTaxOnPensions": {
            "type": "boolean"
          },
          "PostGarnishmentToTaxAccount": {
            "type": "boolean"
          },
          "MainAccountCostFinancial": {
            "type": "integer"
          },
          "WagetypeAdvancePaymentAuto": {
            "type": "integer"
          },
          "PostToTaxDraw": {
            "type": "boolean"
          },
          "Base_Svalbard": {
            "type": "boolean"
          },
          "MainAccountCostAGA": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "MainAccountAllocatedFinancial": {
            "type": "integer"
          },
          "MainAccountAllocatedAGA": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "Base_JanMayenAndBiCountries": {
            "type": "boolean"
          },
          "PaycheckZipReportID": {
            "type": "integer"
          },
          "CreatedBy": {
            "type": "string"
          },
          "MainAccountCostFinancialVacation": {
            "type": "integer"
          },
          "CalculateFinancialTax": {
            "type": "boolean"
          },
          "MainAccountAllocatedAGAVacation": {
            "type": "integer"
          },
          "PaymentInterval": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "CompanyVacationRate": {
        "type": "object",
        "properties": {
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "EmployeeCategory": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "EmployeeCategoryLinkID": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "EmployeeCategoryLink": {
        "type": "object",
        "properties": {
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "EmployeeNumber": {
            "type": "integer"
          },
          "EmployeeCategoryID": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "EmployeeID": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Employee": {
        "type": "object",
        "properties": {
          "UserID": {
            "type": "integer"
          },
          "BusinessRelationID": {
            "type": "integer"
          },
          "IncludeOtpUntilYear": {
            "type": "integer"
          },
          "IncludeOtpUntilMonth": {
            "type": "integer"
          },
          "EmployeeLanguageID": {
            "type": "integer"
          },
          "Active": {
            "type": "boolean"
          },
          "OtpExport": {
            "type": "boolean"
          },
          "InternasjonalIDType": {
            "type": "string"
          },
          "FreeText": {
            "type": "string"
          },
          "MunicipalityNo": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "PhotoID": {
            "type": "integer"
          },
          "InternasjonalIDCountry": {
            "type": "string"
          },
          "EmployeeNumber": {
            "type": "integer"
          },
          "TypeOfPaymentOtp": {
            "type": "string"
          },
          "OtpStatus": {
            "type": "string"
          },
          "InternationalID": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "SocialSecurityNumber": {
            "type": "string"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "Sex": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "SubEntityID": {
            "type": "integer"
          },
          "ForeignWorker": {
            "type": "string"
          },
          "PaymentInterval": {
            "type": "string"
          },
          "BusinessRelationInfo": {
            "$ref": "#/components/schemas/BusinessRelation"
          },
          "Employments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Employment"
            }
          },
          "VacationRateEmployees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VacationRateEmployee"
            }
          },
          "TaxCards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmployeeTaxCard"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "EmployeeTaxCard": {
        "type": "object",
        "properties": {
          "loennKunTrygdeavgiftTilUtenlandskBorgerID": {
            "type": "integer"
          },
          "Table": {
            "type": "string"
          },
          "Year": {
            "type": "integer"
          },
          "pensjonID": {
            "type": "integer"
          },
          "TaxcardId": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "loennFraBiarbeidsgiverID": {
            "type": "integer"
          },
          "loennTilUtenrikstjenestemannID": {
            "type": "integer"
          },
          "EmployeeNumber": {
            "type": "integer"
          },
          "NotMainEmployer": {
            "type": "boolean"
          },
          "loennKunTrygdeavgiftTilUtenlandskBorgerSomGrensegjengerID": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "SecondaryTable": {
            "type": "string"
          },
          "ResultatStatus": {
            "type": "string"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "loennFraHovedarbeidsgiverID": {
            "type": "integer"
          },
          "ufoereYtelserAndreID": {
            "type": "integer"
          },
          "EmployeeID": {
            "type": "integer"
          },
          "Tilleggsopplysning": {
            "type": "string"
          },
          "SKDXml": {
            "type": "string"
          },
          "loennFraHovedarbeidsgiver": {
            "$ref": "#/components/schemas/TaxCard"
          },
          "loennFraBiarbeidsgiver": {
            "$ref": "#/components/schemas/TaxCard"
          },
          "pensjon": {
            "$ref": "#/components/schemas/TaxCard"
          },
          "loennTilUtenrikstjenestemann": {
            "$ref": "#/components/schemas/TaxCard"
          },
          "loennKunTrygdeavgiftTilUtenlandskBorger": {
            "$ref": "#/components/schemas/TaxCard"
          },
          "loennKunTrygdeavgiftTilUtenlandskBorgerSomGrensegjenger": {
            "$ref": "#/components/schemas/TaxCard"
          },
          "ufoereYtelserAndre": {
            "$ref": "#/components/schemas/TaxCard"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "TaxCard": {
        "type": "object",
        "properties": {
          "tabellType": {
            "type": "string"
          },
          "Table": {
            "type": "string"
          },
          "Deleted": {
            "type": "boolean"
          },
          "freeAmountType": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "EmployeeLeave": {
        "type": "object",
        "properties": {
          "LeaveType": {
            "type": "string"
          },
          "Description": {
            "type": "string"
          },
          "AffectsOtp": {
            "type": "boolean"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "EmploymentID": {
            "type": "integer"
          },
          "CreatedBy": {
            "type": "string"
          },
          "Employment": {
            "$ref": "#/components/schemas/Employment"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Employment": {
        "type": "object",
        "properties": {
          "RemunerationType": {
            "type": "string"
          },
          "EndDateReason": {
            "type": "string"
          },
          "TradeArea": {
            "type": "string"
          },
          "DimensionsID": {
            "type": "integer"
          },
          "Standard": {
            "type": "boolean"
          },
          "ShipReg": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "LedgerAccount": {
            "type": "string"
          },
          "ShipType": {
            "type": "string"
          },
          "TypeOfEmployment": {
            "type": "string"
          },
          "EmployeeNumber": {
            "type": "integer"
          },
          "JobCode": {
            "type": "string"
          },
          "WorkingHoursScheme": {
            "type": "string"
          },
          "RegulativeStepNr": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "RegulativeGroupID": {
            "type": "integer"
          },
          "JobName": {
            "type": "string"
          },
          "SubEntityID": {
            "type": "integer"
          },
          "PayGrade": {
            "type": "string"
          },
          "EmploymentType": {
            "type": "string"
          },
          "EmployeeID": {
            "type": "integer"
          },
          "Employee": {
            "$ref": "#/components/schemas/Employee"
          },
          "Dimensions": {
            "$ref": "#/components/schemas/Dimensions"
          },
          "Leaves": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmployeeLeave"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Grant": {
        "type": "object",
        "properties": {
          "Description": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "SubentityID": {
            "type": "integer"
          },
          "AffectsAGA": {
            "type": "boolean"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "OtpExportWagetype": {
        "type": "object",
        "properties": {
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "WageTypeNumber": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "PayrollRun": {
        "type": "object",
        "properties": {
          "Description": {
            "type": "string"
          },
          "JournalEntryNumber": {
            "type": "string"
          },
          "ExcludeRecurringPosts": {
            "type": "boolean"
          },
          "FreeText": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "HolidayPayDeduction": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "needsRecalc": {
            "type": "boolean"
          },
          "taxdrawfactor": {
            "type": "string"
          },
          "PaycheckFileID": {
            "type": "integer"
          },
          "transactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SalaryTransaction"
            }
          },
          "agacalculation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AGACalculation"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "PayrollRunCategoryLink": {
        "type": "object",
        "properties": {
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "EmployeeCategoryID": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "PayrollRunID": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "PostingSummaryDraft": {
        "type": "object",
        "properties": {
          "draftWithDimsOnBalance": {
            "type": "string"
          },
          "PayrollID": {
            "type": "integer"
          },
          "JobInfoID": {
            "type": "integer"
          },
          "status": {
            "type": "string"
          },
          "draftWithDims": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "draftBasic": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Regulative": {
        "type": "object",
        "properties": {
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "RegulativeGroupID": {
            "type": "integer"
          },
          "Steps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegulativeStep"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "RegulativeGroup": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "Regulatives": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Regulative"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "RegulativeStep": {
        "type": "object",
        "properties": {
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "RegulativeID": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "Step": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "SalaryBalance": {
        "type": "object",
        "properties": {
          "SalaryBalanceTemplateID": {
            "type": "integer"
          },
          "CreatePayment": {
            "type": "boolean"
          },
          "InstalmentType": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "Type": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "EmploymentID": {
            "type": "integer"
          },
          "CreatedBy": {
            "type": "string"
          },
          "WageTypeNumber": {
            "type": "integer"
          },
          "SupplierID": {
            "type": "integer"
          },
          "EmployeeID": {
            "type": "integer"
          },
          "KID": {
            "type": "string"
          },
          "Source": {
            "type": "string"
          },
          "Transactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SalaryBalanceLine"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "SalaryBalanceLine": {
        "type": "object",
        "properties": {
          "SalaryBalanceID": {
            "type": "integer"
          },
          "Description": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "SalaryTransactionID": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "SalaryBalanceTemplate": {
        "type": "object",
        "properties": {
          "CreatePayment": {
            "type": "boolean"
          },
          "InstalmentType": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "SalarytransactionDescription": {
            "type": "string"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "WageTypeNumber": {
            "type": "integer"
          },
          "SupplierID": {
            "type": "integer"
          },
          "Account": {
            "type": "integer"
          },
          "KID": {
            "type": "string"
          },
          "SalaryBalances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SalaryBalance"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "SalaryTransaction": {
        "type": "object",
        "properties": {
          "WageTypeID": {
            "type": "integer"
          },
          "TaxbasisID": {
            "type": "integer"
          },
          "SalaryBalanceID": {
            "type": "integer"
          },
          "DimensionsID": {
            "type": "integer"
          },
          "MunicipalityNo": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "HolidayPayDeduction": {
            "type": "boolean"
          },
          "ChildSalaryTransactionID": {
            "type": "integer"
          },
          "EmployeeNumber": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "VatTypeID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "EmploymentID": {
            "type": "integer"
          },
          "Text": {
            "type": "string"
          },
          "RecurringID": {
            "type": "integer"
          },
          "CreatedBy": {
            "type": "string"
          },
          "WageTypeNumber": {
            "type": "integer"
          },
          "EmployeeID": {
            "type": "integer"
          },
          "IsRecurringPost": {
            "type": "boolean"
          },
          "SystemType": {
            "type": "string"
          },
          "Account": {
            "type": "integer"
          },
          "PayrollRunID": {
            "type": "integer"
          },
          "payrollrun": {
            "$ref": "#/components/schemas/PayrollRun"
          },
          "Employee": {
            "$ref": "#/components/schemas/Employee"
          },
          "employment": {
            "$ref": "#/components/schemas/Employment"
          },
          "Dimensions": {
            "$ref": "#/components/schemas/Dimensions"
          },
          "Supplements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SalaryTransactionSupplement"
            }
          },
          "Taxbasis": {
            "$ref": "#/components/schemas/TaxBasis"
          },
          "VatType": {
            "$ref": "#/components/schemas/VatType"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "SalaryTransactionSupplement": {
        "type": "object",
        "properties": {
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "WageTypeSupplementID": {
            "type": "integer"
          },
          "ValueBool": {
            "type": "boolean"
          },
          "CreatedBy": {
            "type": "string"
          },
          "SalaryTransactionID": {
            "type": "integer"
          },
          "ValueString": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "SalaryYear": {
        "type": "object",
        "properties": {
          "CurrentYear": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "SubEntity": {
        "type": "object",
        "properties": {
          "OrgNumber": {
            "type": "string"
          },
          "BusinessRelationID": {
            "type": "integer"
          },
          "SuperiorOrganizationID": {
            "type": "integer"
          },
          "MunicipalityNo": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "AgaZone": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "AgaRule": {
            "type": "integer"
          },
          "BusinessRelationInfo": {
            "$ref": "#/components/schemas/BusinessRelation"
          },
          "SuperiorOrganization": {
            "$ref": "#/components/schemas/SubEntity"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "TaxBasis": {
        "type": "object",
        "properties": {
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "SalaryTransactionID": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Travel": {
        "type": "object",
        "properties": {
          "State": {
            "type": "string"
          },
          "Email": {
            "type": "string"
          },
          "Phone": {
            "type": "string"
          },
          "Description": {
            "type": "string"
          },
          "PersonID": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "DimensionsID": {
            "type": "integer"
          },
          "Purpose": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "EmployeeNumber": {
            "type": "integer"
          },
          "SourceSystem": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "Comment": {
            "type": "string"
          },
          "TravelIdentificator": {
            "type": "string"
          },
          "SupplierID": {
            "type": "integer"
          },
          "TravelLines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TravelLine"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "TravelLine": {
        "type": "object",
        "properties": {
          "AccountNumber": {
            "type": "integer"
          },
          "TravelID": {
            "type": "integer"
          },
          "Description": {
            "type": "string"
          },
          "LineState": {
            "type": "string"
          },
          "InvoiceAccount": {
            "type": "integer"
          },
          "DimensionsID": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "VatTypeID": {
            "type": "integer"
          },
          "paytransID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "TypeID": {
            "type": "integer"
          },
          "TravelIdentificator": {
            "type": "string"
          },
          "CostType": {
            "type": "string"
          },
          "Travel": {
            "$ref": "#/components/schemas/Travel"
          },
          "VatType": {
            "$ref": "#/components/schemas/VatType"
          },
          "travelType": {
            "$ref": "#/components/schemas/TravelType"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "TravelType": {
        "type": "object",
        "properties": {
          "Description": {
            "type": "string"
          },
          "InvoiceAccount": {
            "type": "integer"
          },
          "ForeignTypeID": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ForeignDescription": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "WageTypeNumber": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "VacationPayLine": {
        "type": "object",
        "properties": {
          "Year": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "EmployeeID": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "VacationRateEmployee": {
        "type": "object",
        "properties": {
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "EmployeeID": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "WageType": {
        "type": "object",
        "properties": {
          "AccountNumber": {
            "type": "integer"
          },
          "Postnr": {
            "type": "string"
          },
          "Base_div3": {
            "type": "boolean"
          },
          "Base_Vacation": {
            "type": "boolean"
          },
          "Description": {
            "type": "string"
          },
          "ValidYear": {
            "type": "integer"
          },
          "FixedSalaryHolidayDeduction": {
            "type": "boolean"
          },
          "GetRateFrom": {
            "type": "string"
          },
          "StandardWageTypeFor": {
            "type": "string"
          },
          "RatetypeColumn": {
            "type": "string"
          },
          "Limit_type": {
            "type": "string"
          },
          "Base_Payment": {
            "type": "boolean"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "IncomeType": {
            "type": "string"
          },
          "Limit_WageTypeNumber": {
            "type": "integer"
          },
          "DaysOnBoard": {
            "type": "boolean"
          },
          "SystemRequiredWageType": {
            "type": "integer"
          },
          "Base_div2": {
            "type": "boolean"
          },
          "AccountNumber_balance": {
            "type": "integer"
          },
          "NoNumberOfHours": {
            "type": "boolean"
          },
          "HideFromPaycheck": {
            "type": "boolean"
          },
          "Benefit": {
            "type": "string"
          },
          "SpecialTaxAndContributionsRule": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "Base_EmploymentTax": {
            "type": "boolean"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "SpecialTaxHandling": {
            "type": "string"
          },
          "SupplementPackage": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "WageTypeNumber": {
            "type": "integer"
          },
          "SpecialAgaRule": {
            "type": "string"
          },
          "Systemtype": {
            "type": "string"
          },
          "WageTypeName": {
            "type": "string"
          },
          "taxtype": {
            "type": "string"
          },
          "SupplementaryInformations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WageTypeSupplement"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "WageTypeSupplement": {
        "type": "object",
        "properties": {
          "WageTypeID": {
            "type": "integer"
          },
          "Description": {
            "type": "string"
          },
          "ameldingType": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "GetValueFromTrans": {
            "type": "boolean"
          },
          "SuggestedValue": {
            "type": "string"
          },
          "ValueType": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "WageTypeTranslation": {
        "type": "object",
        "properties": {
          "EmployeeLanguageID": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "WageTypeNumber": {
            "type": "integer"
          },
          "WageTypeName": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "PensionScheme": {
        "type": "object",
        "properties": {
          "Year": {
            "type": "integer"
          },
          "Identificator": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "Period": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "PensionSchemeSupplier": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "Identificator": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "StandardPensionSchemeSupplier": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "Identificator": {
            "type": "string"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "EmployeeLanguage": {
        "type": "object",
        "properties": {
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "LanguageCode": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "ComponentLayout": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "BaseEntity": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "Fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FieldLayout"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "FieldLayout": {
        "type": "object",
        "properties": {
          "Section": {
            "type": "integer"
          },
          "Property": {
            "type": "string"
          },
          "Label": {
            "type": "string"
          },
          "Hidden": {
            "type": "boolean"
          },
          "Sectionheader": {
            "type": "string"
          },
          "LineBreak": {
            "type": "boolean"
          },
          "Description": {
            "type": "string"
          },
          "DisplayField": {
            "type": "string"
          },
          "Width": {
            "type": "string"
          },
          "Legend": {
            "type": "string"
          },
          "FieldSet": {
            "type": "integer"
          },
          "Placement": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "EntityType": {
            "type": "string"
          },
          "HelpText": {
            "type": "string"
          },
          "FieldType": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "Alignment": {
            "type": "string"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "ComponentLayoutID": {
            "type": "integer"
          },
          "Placeholder": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "ReadOnly": {
            "type": "boolean"
          },
          "Combo": {
            "type": "integer"
          },
          "Options": {
            "type": "string"
          },
          "LookupField": {
            "type": "boolean"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "CurrencyOverride": {
        "type": "object",
        "properties": {
          "Factor": {
            "type": "integer"
          },
          "FromCurrencyCodeID": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "ToCurrencyCodeID": {
            "type": "integer"
          },
          "Source": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "AccountAssetGroup": {
        "type": "object",
        "properties": {
          "AssetGroupCode": {
            "type": "string"
          },
          "FromAccountNumber": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "ToAccountNumber": {
            "type": "integer"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "AccountGroupSetup": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ParentID": {
            "type": "integer"
          },
          "ExternalReference": {
            "type": "string"
          },
          "PlanType": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "Parent": {
            "$ref": "#/components/schemas/AccountGroupSetup"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "AccountSetup": {
        "type": "object",
        "properties": {
          "AccountGroupSetupID": {
            "type": "integer"
          },
          "AccountNumber": {
            "type": "integer"
          },
          "SaftMappingAccountID": {
            "type": "integer"
          },
          "VatCode": {
            "type": "string"
          },
          "Visible": {
            "type": "boolean"
          },
          "AccountName": {
            "type": "string"
          },
          "Deleted": {
            "type": "boolean"
          },
          "PlanType": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "ExpectedDebitBalance": {
            "type": "boolean"
          },
          "AccountGroup": {
            "$ref": "#/components/schemas/AccountGroupSetup"
          },
          "SaftMappingAccount": {
            "$ref": "#/components/schemas/SaftMappingAccount"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "AccountVisibilityGroup": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "Accounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountVisibilityGroupAccount"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "AccountVisibilityGroupAccount": {
        "type": "object",
        "properties": {
          "AccountSetupID": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "AccountVisibilityGroupID": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "AGARate": {
        "type": "object",
        "properties": {
          "Deleted": {
            "type": "boolean"
          },
          "ZoneID": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "sector": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AGASector"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "AGASector": {
        "type": "object",
        "properties": {
          "Sector": {
            "type": "string"
          },
          "Deleted": {
            "type": "boolean"
          },
          "SectorID": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "RateID": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "AGAZone": {
        "type": "object",
        "properties": {
          "Deleted": {
            "type": "boolean"
          },
          "ZoneName": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "rates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AGARate"
            }
          },
          "municipalsOnZone": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MunicipalAGAZone"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Agreement": {
        "type": "object",
        "properties": {
          "Template": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "AppliesTo": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "AssetGroup": {
        "type": "object",
        "properties": {
          "Code": {
            "type": "string"
          },
          "DepreciationRate": {
            "type": "integer"
          },
          "DepreciationYears": {
            "type": "integer"
          },
          "Name": {
            "type": "string"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "DepreciationAccountNumber": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "BankIdentifierCode": {
        "type": "object",
        "properties": {
          "BankName": {
            "type": "string"
          },
          "Deleted": {
            "type": "boolean"
          },
          "BankIdentifier": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "Bic": {
            "type": "string"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "CompanyType": {
        "type": "object",
        "properties": {
          "Description": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "Deleted": {
            "type": "boolean"
          },
          "Priority": {
            "type": "boolean"
          },
          "DefaultPlanType": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "DefaultAccountVisibilityGroupID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "FullName": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Confirmation": {
        "type": "object",
        "properties": {
          "Email": {
            "type": "string"
          },
          "Phone": {
            "type": "string"
          },
          "Code": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "CompanyName": {
            "type": "string"
          },
          "ContractType": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "DisplayName": {
            "type": "string"
          },
          "PostalCode": {
            "type": "string"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "SignUpReferrer": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Country": {
        "type": "object",
        "properties": {
          "CountryCode": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "CurrencyRateSource": {
            "type": "string"
          },
          "DefaultCurrencyCode": {
            "type": "string"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Currency": {
        "type": "object",
        "properties": {
          "Factor": {
            "type": "integer"
          },
          "FromCurrencyCodeID": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "ToCurrencyCodeID": {
            "type": "integer"
          },
          "Source": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "CurrencyCode": {
        "type": "object",
        "properties": {
          "Code": {
            "type": "string"
          },
          "Description": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ShortCode": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "DebtCollectionAutomation": {
        "type": "object",
        "properties": {
          "Description": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "DebtCollectionSettingsID": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "EmploymentValidValues": {
        "type": "object",
        "properties": {
          "RemunerationType": {
            "type": "boolean"
          },
          "employment": {
            "type": "string"
          },
          "LastSalaryChangeDate": {
            "type": "boolean"
          },
          "WorkPercent": {
            "type": "boolean"
          },
          "TradeArea": {
            "type": "boolean"
          },
          "SeniorityDate": {
            "type": "boolean"
          },
          "EndDate": {
            "type": "boolean"
          },
          "UserDefinedRate": {
            "type": "boolean"
          },
          "ShipReg": {
            "type": "boolean"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ShipType": {
            "type": "boolean"
          },
          "typeOfEmployment": {
            "type": "boolean"
          },
          "JobCode": {
            "type": "boolean"
          },
          "WorkingHoursScheme": {
            "type": "boolean"
          },
          "StartDate": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "HoursPerWeek": {
            "type": "boolean"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "JobName": {
            "type": "boolean"
          },
          "MonthRate": {
            "type": "boolean"
          },
          "PaymentType": {
            "type": "string"
          },
          "LastWorkPercentChange": {
            "type": "boolean"
          },
          "HourRate": {
            "type": "boolean"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "FinancialDeadline": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "PassableDueDate": {
            "type": "integer"
          },
          "AdditionalInfo": {
            "type": "string"
          },
          "Type": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "LanguageCode": {
        "type": "object",
        "properties": {
          "Code": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Municipal": {
        "type": "object",
        "properties": {
          "MunicipalityName": {
            "type": "string"
          },
          "MunicipalityNo": {
            "type": "string"
          },
          "Deleted": {
            "type": "boolean"
          },
          "Retired": {
            "type": "boolean"
          },
          "CountyNo": {
            "type": "string"
          },
          "CountyName": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "MunicipalAGAZone": {
        "type": "object",
        "properties": {
          "MunicipalityNo": {
            "type": "string"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ZoneID": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "PaymentBatchType": {
        "type": "object",
        "properties": {
          "Code": {
            "type": "integer"
          },
          "Description": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "PaymentCode": {
        "type": "object",
        "properties": {
          "Code": {
            "type": "integer"
          },
          "Description": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "Deleted": {
            "type": "boolean"
          },
          "PaymentGroup": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "PostalCode": {
        "type": "object",
        "properties": {
          "Code": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "City": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "SaftMappingAccount": {
        "type": "object",
        "properties": {
          "Description": {
            "type": "string"
          },
          "AccountID": {
            "type": "string"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "StaticRegister": {
        "type": "object",
        "properties": {
          "Deleted": {
            "type": "boolean"
          },
          "Registry": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "STYRKCode": {
        "type": "object",
        "properties": {
          "tittel": {
            "type": "string"
          },
          "ynr": {
            "type": "integer"
          },
          "lnr": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "styrk": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Language": {
        "type": "object",
        "properties": {
          "Code": {
            "type": "string"
          },
          "FallBackLanguageID": {
            "type": "integer"
          },
          "Name": {
            "type": "string"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "Translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Translation"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Translatable": {
        "type": "object",
        "properties": {
          "Description": {
            "type": "string"
          },
          "Meaning": {
            "type": "string"
          },
          "Value": {
            "type": "string"
          },
          "Deleted": {
            "type": "boolean"
          },
          "Column": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "Module": {
            "type": "string"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "Model": {
            "type": "string"
          },
          "Static": {
            "type": "boolean"
          },
          "Translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Translation"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Translation": {
        "type": "object",
        "properties": {
          "LanguageID": {
            "type": "integer"
          },
          "Value": {
            "type": "string"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "TranslatableID": {
            "type": "integer"
          },
          "Language": {
            "$ref": "#/components/schemas/Language"
          },
          "Translatable": {
            "$ref": "#/components/schemas/Translatable"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "VatCodeGroupSetup": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "Deleted": {
            "type": "boolean"
          },
          "No": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "VatPostSetup": {
        "type": "object",
        "properties": {
          "HasTaxAmount": {
            "type": "boolean"
          },
          "HasTaxBasis": {
            "type": "boolean"
          },
          "Name": {
            "type": "string"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ReportAsNegativeAmount": {
            "type": "boolean"
          },
          "VatCodeGroupSetupNo": {
            "type": "string"
          },
          "No": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "VatReportForm": {
        "type": "object",
        "properties": {
          "Description": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "VatReportReferenceSetup": {
        "type": "object",
        "properties": {
          "AccountNumber": {
            "type": "integer"
          },
          "VatCode": {
            "type": "string"
          },
          "Deleted": {
            "type": "boolean"
          },
          "VatPostNo": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "VatTypeSetup": {
        "type": "object",
        "properties": {
          "IsNotVatRegistered": {
            "type": "boolean"
          },
          "OutputVat": {
            "type": "boolean"
          },
          "IsCompensated": {
            "type": "boolean"
          },
          "VatCodeGroupNo": {
            "type": "string"
          },
          "VatCode": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "IncomingAccountNumber": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "DirectJournalEntryOnly": {
            "type": "boolean"
          },
          "DefaultVisible": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "ReversedTaxDutyVat": {
            "type": "boolean"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "OutgoingAccountNumber": {
            "type": "integer"
          },
          "VatTypeSetupPercentages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VatTypeSetupPercentage"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "VatTypeSetupPercentage": {
        "type": "object",
        "properties": {
          "Deleted": {
            "type": "boolean"
          },
          "VatTypeSetupID": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "CompanyReport": {
        "type": "object",
        "properties": {
          "CompanyKey": {
            "type": "string"
          },
          "ReportDefinitionID": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ContractId": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "ReportDefinition": {
        "type": "object",
        "properties": {
          "Category": {
            "type": "string"
          },
          "Version": {
            "type": "string"
          },
          "Description": {
            "type": "string"
          },
          "TemplateLinkId": {
            "type": "string"
          },
          "Visible": {
            "type": "boolean"
          },
          "UniqueReportID": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "Deleted": {
            "type": "boolean"
          },
          "CategoryLabel": {
            "type": "string"
          },
          "ReportType": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "ReportSource": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "IsStandard": {
            "type": "boolean"
          },
          "Md5": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "ReportDefinitionDataSource": {
        "type": "object",
        "properties": {
          "ReportDefinitionId": {
            "type": "integer"
          },
          "Name": {
            "type": "string"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "DataSourceUrl": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "ReportDefinitionParameter": {
        "type": "object",
        "properties": {
          "Label": {
            "type": "string"
          },
          "DefaultValue": {
            "type": "string"
          },
          "SortIndex": {
            "type": "integer"
          },
          "Visible": {
            "type": "boolean"
          },
          "DefaultValueSource": {
            "type": "string"
          },
          "ReportDefinitionId": {
            "type": "integer"
          },
          "Name": {
            "type": "string"
          },
          "DefaultValueList": {
            "type": "string"
          },
          "Deleted": {
            "type": "boolean"
          },
          "Type": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "DefaultValueLookupType": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "PeriodSeries": {
        "type": "object",
        "properties": {
          "Active": {
            "type": "boolean"
          },
          "Name": {
            "type": "string"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "SeriesType": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "PeriodTemplate": {
        "type": "object",
        "properties": {
          "PeriodSeriesID": {
            "type": "integer"
          },
          "Name": {
            "type": "string"
          },
          "Deleted": {
            "type": "boolean"
          },
          "No": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "PeriodSeries": {
            "$ref": "#/components/schemas/PeriodSeries"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Model": {
        "type": "object",
        "properties": {
          "Shared": {
            "type": "boolean"
          },
          "Label": {
            "type": "string"
          },
          "Admin": {
            "type": "boolean"
          },
          "Description": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "Deleted": {
            "type": "boolean"
          },
          "LabelPlural": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "Fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Field"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Field": {
        "type": "object",
        "properties": {
          "ModelID": {
            "type": "integer"
          },
          "Label": {
            "type": "string"
          },
          "Description": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "Deleted": {
            "type": "boolean"
          },
          "HelpText": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Notification": {
        "type": "object",
        "properties": {
          "SourceEntityType": {
            "type": "string"
          },
          "Message": {
            "type": "string"
          },
          "SenderDisplayName": {
            "type": "string"
          },
          "CompanyKey": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "EntityType": {
            "type": "string"
          },
          "CompanyName": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "SourceEntityID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "RecipientID": {
            "type": "string"
          },
          "EntityID": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "CompanySettings": {
        "type": "object",
        "properties": {
          "CustomerCreditDays": {
            "type": "integer"
          },
          "DefaultTOFCurrencySettingsID": {
            "type": "integer"
          },
          "XtraPaymentOrgXmlTagValue": {
            "type": "string"
          },
          "PaymentBankIdentification": {
            "type": "string"
          },
          "DefaultPhoneID": {
            "type": "integer"
          },
          "AllowAvtalegiroRegularInvoice": {
            "type": "boolean"
          },
          "GLN": {
            "type": "string"
          },
          "TaxMandatoryType": {
            "type": "integer"
          },
          "SAFTimportAccountID": {
            "type": "integer"
          },
          "EnableCheckboxesForSupplierInvoiceList": {
            "type": "boolean"
          },
          "RoundingNumberOfDecimals": {
            "type": "integer"
          },
          "TwoStageAutobankEnabled": {
            "type": "boolean"
          },
          "DefaultAccrualAccountID": {
            "type": "integer"
          },
          "IgnorePaymentsWithoutEndToEndID": {
            "type": "boolean"
          },
          "NetsIntegrationActivated": {
            "type": "boolean"
          },
          "ShowNumberOfDecimals": {
            "type": "integer"
          },
          "PeriodSeriesVatID": {
            "type": "integer"
          },
          "APActivated": {
            "type": "boolean"
          },
          "CompanyTypeID": {
            "type": "integer"
          },
          "RoundingType": {
            "type": "string"
          },
          "LogoFileID": {
            "type": "integer"
          },
          "PeriodSeriesAccountID": {
            "type": "integer"
          },
          "LogoAlign": {
            "type": "integer"
          },
          "BankChargeAccountID": {
            "type": "integer"
          },
          "AgioGainAccountID": {
            "type": "integer"
          },
          "APContactID": {
            "type": "integer"
          },
          "SaveCustomersFromQuoteAsLead": {
            "type": "boolean"
          },
          "UseFinancialDateToCalculateVatPercent": {
            "type": "boolean"
          },
          "Factoring": {
            "type": "integer"
          },
          "EnableApprovalFlow": {
            "type": "boolean"
          },
          "DefaultCustomerOrderReportID": {
            "type": "integer"
          },
          "OrganizationNumber": {
            "type": "string"
          },
          "TaxBankAccountID": {
            "type": "integer"
          },
          "HasAutobank": {
            "type": "boolean"
          },
          "StatusCode": {
            "type": "integer"
          },
          "CompanyBankAccountID": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "DefaultEmailID": {
            "type": "integer"
          },
          "DefaultCustomerInvoiceReminderReportID": {
            "type": "integer"
          },
          "EnableArchiveSupplierInvoice": {
            "type": "boolean"
          },
          "LogoHideField": {
            "type": "integer"
          },
          "InterrimPaymentAccountID": {
            "type": "integer"
          },
          "PaymentBankAgreementNumber": {
            "type": "string"
          },
          "DefaultCustomerInvoiceReportID": {
            "type": "integer"
          },
          "EnableSendPaymentBeforeJournaled": {
            "type": "boolean"
          },
          "UseOcrInterpretation": {
            "type": "boolean"
          },
          "CompanyName": {
            "type": "string"
          },
          "DefaultDistributionsID": {
            "type": "integer"
          },
          "StoreDistributedInvoice": {
            "type": "boolean"
          },
          "EnableAdvancedJournalEntry": {
            "type": "boolean"
          },
          "HideInActiveCustomers": {
            "type": "boolean"
          },
          "AutoJournalPayment": {
            "type": "string"
          },
          "AccountVisibilityGroupID": {
            "type": "integer"
          },
          "FactoringEmailID": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "BookCustomerInvoiceOnDeliveryDate": {
            "type": "boolean"
          },
          "AgioLossAccountID": {
            "type": "integer"
          },
          "UsePaymentBankValues": {
            "type": "boolean"
          },
          "ShowKIDOnCustomerInvoice": {
            "type": "boolean"
          },
          "CompanyRegistered": {
            "type": "boolean"
          },
          "HideInActiveSuppliers": {
            "type": "boolean"
          },
          "TaxMandatory": {
            "type": "boolean"
          },
          "DefaultAddressID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "AutoDistributeInvoice": {
            "type": "boolean"
          },
          "WebAddress": {
            "type": "string"
          },
          "OfficeMunicipalityNo": {
            "type": "string"
          },
          "UseAssetRegister": {
            "type": "boolean"
          },
          "CreatedBy": {
            "type": "string"
          },
          "DefaultCustomerQuoteReportID": {
            "type": "integer"
          },
          "SupplierAccountID": {
            "type": "integer"
          },
          "DefaultSalesAccountID": {
            "type": "integer"
          },
          "SettlementVatAccountID": {
            "type": "integer"
          },
          "APIncludeAttachment": {
            "type": "boolean"
          },
          "VatReportFormID": {
            "type": "integer"
          },
          "CustomerAccountID": {
            "type": "integer"
          },
          "SalaryBankAccountID": {
            "type": "integer"
          },
          "APGuid": {
            "type": "string"
          },
          "FactoringNumber": {
            "type": "integer"
          },
          "UseNetsIntegration": {
            "type": "boolean"
          },
          "InterrimRemitAccountID": {
            "type": "integer"
          },
          "Localization": {
            "type": "string"
          },
          "ForceSupplierInvoiceApproval": {
            "type": "boolean"
          },
          "AcceptableDelta4CustomerPaymentAccountID": {
            "type": "integer"
          },
          "UseXtraPaymentOrgXmlTag": {
            "type": "boolean"
          },
          "CustomerInvoiceReminderSettingsID": {
            "type": "integer"
          },
          "AccountGroupSetID": {
            "type": "integer"
          },
          "BaseCurrencyCodeID": {
            "type": "integer"
          },
          "DefaultAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "DefaultPhone": {
            "$ref": "#/components/schemas/Phone"
          },
          "DefaultEmail": {
            "$ref": "#/components/schemas/Email"
          },
          "SAFTimportAccount": {
            "$ref": "#/components/schemas/Account"
          },
          "BankAccounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BankAccount"
            }
          },
          "CompanyBankAccount": {
            "$ref": "#/components/schemas/BankAccount"
          },
          "TaxBankAccount": {
            "$ref": "#/components/schemas/BankAccount"
          },
          "SalaryBankAccount": {
            "$ref": "#/components/schemas/BankAccount"
          },
          "APContact": {
            "$ref": "#/components/schemas/Contact"
          },
          "APIncomming": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccessPointFormat"
            }
          },
          "APOutgoing": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccessPointFormat"
            }
          },
          "Distributions": {
            "$ref": "#/components/schemas/Distributions"
          },
          "CustomerInvoiceReminderSettings": {
            "$ref": "#/components/schemas/CustomerInvoiceReminderSettings"
          },
          "DefaultTOFCurrencySettings": {
            "$ref": "#/components/schemas/TOFCurrencySettings"
          },
          "FactoringEmail": {
            "$ref": "#/components/schemas/Email"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "DistributionPlan": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "EntityType": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "Elements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DistributionPlanElement"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "DistributionPlanElement": {
        "type": "object",
        "properties": {
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "Priority": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "DistributionPlanID": {
            "type": "integer"
          },
          "DistributionPlanElementTypeID": {
            "type": "integer"
          },
          "ElementType": {
            "$ref": "#/components/schemas/DistributionPlanElementType"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "DistributionPlanElementType": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "LegalEntities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DistributionPlanElementTypeLegalEntity"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "DistributionPlanElementTypeLegalEntity": {
        "type": "object",
        "properties": {
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "EntityType": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "DistributionPlanElementTypeID": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Distributions": {
        "type": "object",
        "properties": {
          "PayCheckDistributionPlanID": {
            "type": "integer"
          },
          "CustomerInvoiceDistributionPlanID": {
            "type": "integer"
          },
          "CustomerQuoteDistributionPlanID": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "AnnualStatementDistributionPlanID": {
            "type": "integer"
          },
          "CustomerOrderDistributionPlanID": {
            "type": "integer"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomerInvoiceReminderDistributionPlanID": {
            "type": "integer"
          },
          "CustomerInvoiceDistributionPlan": {
            "$ref": "#/components/schemas/DistributionPlan"
          },
          "CustomerOrderDistributionPlan": {
            "$ref": "#/components/schemas/DistributionPlan"
          },
          "CustomerQuoteDistributionPlan": {
            "$ref": "#/components/schemas/DistributionPlan"
          },
          "CustomerInvoiceReminderDistributionPlan": {
            "$ref": "#/components/schemas/DistributionPlan"
          },
          "PayCheckDistributionPlan": {
            "$ref": "#/components/schemas/DistributionPlan"
          },
          "AnnualStatementDistributionPlan": {
            "$ref": "#/components/schemas/DistributionPlan"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "DistributionType": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "EmailLog": {
        "type": "object",
        "properties": {
          "EntityDisplayValue": {
            "type": "string"
          },
          "JobRunExternalRef": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "EntityType": {
            "type": "string"
          },
          "Type": {
            "type": "string"
          },
          "Subject": {
            "type": "string"
          },
          "From": {
            "type": "string"
          },
          "ExternalReference": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "ExternalMessage": {
            "type": "string"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "JobRunID": {
            "type": "integer"
          },
          "To": {
            "type": "string"
          },
          "EntityID": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Eventplan": {
        "type": "object",
        "properties": {
          "SigningKey": {
            "type": "string"
          },
          "JobNames": {
            "type": "string"
          },
          "Active": {
            "type": "boolean"
          },
          "ModelFilter": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "Cargo": {
            "type": "string"
          },
          "PlanType": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "OperationFilter": {
            "type": "string"
          },
          "IsSystemPlan": {
            "type": "boolean"
          },
          "ExpressionFilters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExpressionFilter"
            }
          },
          "Subscribers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventSubscriber"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "EventSubscriber": {
        "type": "object",
        "properties": {
          "Headers": {
            "type": "string"
          },
          "EventplanID": {
            "type": "integer"
          },
          "Active": {
            "type": "boolean"
          },
          "Authorization": {
            "type": "string"
          },
          "Endpoint": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "Eventplan": {
            "$ref": "#/components/schemas/Eventplan"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "ExpressionFilter": {
        "type": "object",
        "properties": {
          "EventplanID": {
            "type": "integer"
          },
          "Expression": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "EntityName": {
            "type": "string"
          },
          "Eventplan": {
            "$ref": "#/components/schemas/Eventplan"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Period": {
        "type": "object",
        "properties": {
          "PeriodSeriesID": {
            "type": "integer"
          },
          "AccountYear": {
            "type": "integer"
          },
          "Name": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "PeriodTemplateID": {
            "type": "integer"
          },
          "No": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "PredefinedDescription": {
        "type": "object",
        "properties": {
          "Code": {
            "type": "string"
          },
          "Description": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "Type": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "ProductCategory": {
        "type": "object",
        "properties": {
          "Depth": {
            "type": "integer"
          },
          "Description": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ParentID": {
            "type": "integer"
          },
          "Status": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "Rght": {
            "type": "integer"
          },
          "CreatedBy": {
            "type": "string"
          },
          "Comment": {
            "type": "string"
          },
          "Lft": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "ProductCategoryLink": {
        "type": "object",
        "properties": {
          "ProductCategoryID": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ProductID": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "ProductCategory": {
            "$ref": "#/components/schemas/ProductCategory"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Sharing": {
        "type": "object",
        "properties": {
          "EntityDisplayValue": {
            "type": "string"
          },
          "JobRunExternalRef": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "EntityType": {
            "type": "string"
          },
          "Type": {
            "type": "string"
          },
          "Subject": {
            "type": "string"
          },
          "From": {
            "type": "string"
          },
          "ExternalReference": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "ExternalMessage": {
            "type": "string"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "JobRunID": {
            "type": "integer"
          },
          "To": {
            "type": "string"
          },
          "EntityID": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "StatusLog": {
        "type": "object",
        "properties": {
          "Deleted": {
            "type": "boolean"
          },
          "EntityType": {
            "type": "string"
          },
          "ToStatus": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "FromStatus": {
            "type": "integer"
          },
          "CreatedBy": {
            "type": "string"
          },
          "EntityID": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Tracelink": {
        "type": "object",
        "properties": {
          "SourceInstanceID": {
            "type": "integer"
          },
          "DestinationEntityName": {
            "type": "string"
          },
          "SourceEntityName": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "DestinationInstanceID": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "Email": {
            "type": "string"
          },
          "Protected": {
            "type": "boolean"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "PhoneNumber": {
            "type": "string"
          },
          "IsAutobankAdmin": {
            "type": "boolean"
          },
          "UserName": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "DisplayName": {
            "type": "string"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "GlobalIdentity": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "BankIntegrationUserName": {
            "type": "string"
          },
          "HasAgreedToImportDisclaimer": {
            "type": "boolean"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "UniQueryDefinition": {
        "type": "object",
        "properties": {
          "UserID": {
            "type": "integer"
          },
          "Category": {
            "type": "string"
          },
          "MainModelName": {
            "type": "string"
          },
          "Code": {
            "type": "string"
          },
          "Description": {
            "type": "string"
          },
          "SystemGeneratedQuery": {
            "type": "boolean"
          },
          "SortIndex": {
            "type": "integer"
          },
          "Name": {
            "type": "string"
          },
          "ClickParam": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "IsShared": {
            "type": "boolean"
          },
          "ModuleID": {
            "type": "integer"
          },
          "ClickUrl": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "UniQueryFilters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UniQueryFilter"
            }
          },
          "UniQueryFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UniQueryField"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "UniQueryField": {
        "type": "object",
        "properties": {
          "Path": {
            "type": "string"
          },
          "SumFunction": {
            "type": "string"
          },
          "Header": {
            "type": "string"
          },
          "Width": {
            "type": "string"
          },
          "Field": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "UniQueryDefinitionID": {
            "type": "integer"
          },
          "Alias": {
            "type": "string"
          },
          "FieldType": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "Index": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "UniQueryFilter": {
        "type": "object",
        "properties": {
          "Group": {
            "type": "integer"
          },
          "Value": {
            "type": "string"
          },
          "Field": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "UniQueryDefinitionID": {
            "type": "integer"
          },
          "Operator": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Team": {
        "type": "object",
        "properties": {
          "Depth": {
            "type": "integer"
          },
          "Name": {
            "type": "string"
          },
          "DimensionsID": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ParentID": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "Rght": {
            "type": "integer"
          },
          "CreatedBy": {
            "type": "string"
          },
          "Lft": {
            "type": "integer"
          },
          "Dimensions": {
            "$ref": "#/components/schemas/Dimensions"
          },
          "Positions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TeamPosition"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "TeamPosition": {
        "type": "object",
        "properties": {
          "UserID": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "RelatedSharedRoleId": {
            "type": "integer"
          },
          "Position": {
            "type": "string"
          },
          "ApproveOrder": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "TeamID": {
            "type": "integer"
          },
          "Team": {
            "$ref": "#/components/schemas/Team"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "ApprovalRule": {
        "type": "object",
        "properties": {
          "Description": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "RuleType": {
            "type": "string"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "IndustryCodes": {
            "type": "string"
          },
          "Keywords": {
            "type": "string"
          },
          "Steps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApprovalRuleStep"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "ApprovalRuleStep": {
        "type": "object",
        "properties": {
          "UserID": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "StepNumber": {
            "type": "integer"
          },
          "ApprovalRuleID": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "ApprovalSubstitute": {
        "type": "object",
        "properties": {
          "SubstituteUserID": {
            "type": "integer"
          },
          "UserID": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "TaskApprovalPlan": {
        "type": "object",
        "properties": {
          "UserID": {
            "type": "integer"
          },
          "ApprovalID": {
            "type": "integer"
          },
          "TaskID": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "StepNumber": {
            "type": "integer"
          },
          "ApprovalRuleID": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "Comment": {
            "type": "string"
          },
          "Task": {
            "$ref": "#/components/schemas/Task"
          },
          "Approval": {
            "$ref": "#/components/schemas/Approval"
          },
          "ApprovalRule": {
            "$ref": "#/components/schemas/ApprovalRule"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Status": {
        "type": "object",
        "properties": {
          "Description": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "EntityType": {
            "type": "string"
          },
          "IsDepricated": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "System": {
            "type": "boolean"
          },
          "StatusCategoryID": {
            "type": "integer"
          },
          "Order": {
            "type": "integer"
          },
          "StatusCategory": {
            "$ref": "#/components/schemas/StatusCategory"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "StatusCategory": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "Deleted": {
            "type": "boolean"
          },
          "StatusCategoryCode": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "StatusRemark": {
        "type": "object",
        "properties": {
          "Remark": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "EntityType": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "EntityID": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Transition": {
        "type": "object",
        "properties": {
          "MethodName": {
            "type": "string"
          },
          "Deleted": {
            "type": "boolean"
          },
          "EntityType": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "Controller": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "TransitionThreshold": {
        "type": "object",
        "properties": {
          "Value": {
            "type": "string"
          },
          "SharedRoleId": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "SharedRejectTransitionId": {
            "type": "integer"
          },
          "Disabled": {
            "type": "boolean"
          },
          "PropertyName": {
            "type": "string"
          },
          "RejectStatusCode": {
            "type": "integer"
          },
          "Operator": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "SharedApproveTransitionId": {
            "type": "integer"
          },
          "Operation": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "TransitionThresholdApproval": {
        "type": "object",
        "properties": {
          "ApprovalID": {
            "type": "integer"
          },
          "Value": {
            "type": "string"
          },
          "SharedRoleId": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "SharedRejectTransitionId": {
            "type": "integer"
          },
          "PropertyName": {
            "type": "string"
          },
          "RejectStatusCode": {
            "type": "integer"
          },
          "Operator": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "SharedApproveTransitionId": {
            "type": "integer"
          },
          "Operation": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Approval": {
        "type": "object",
        "properties": {
          "UserID": {
            "type": "integer"
          },
          "TaskID": {
            "type": "integer"
          },
          "SharedRoleId": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "Task": {
            "$ref": "#/components/schemas/Task"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Task": {
        "type": "object",
        "properties": {
          "UserID": {
            "type": "integer"
          },
          "ModelID": {
            "type": "integer"
          },
          "Title": {
            "type": "string"
          },
          "SharedRoleId": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "SharedRejectTransitionId": {
            "type": "integer"
          },
          "RejectStatusCode": {
            "type": "integer"
          },
          "Type": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "SharedApproveTransitionId": {
            "type": "integer"
          },
          "CreatedBy": {
            "type": "string"
          },
          "EntityID": {
            "type": "integer"
          },
          "Approvals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Approval"
            }
          },
          "ApprovalPlan": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskApprovalPlan"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "TransitionFlow": {
        "type": "object",
        "properties": {
          "TransitionID": {
            "type": "integer"
          },
          "FromStatusID": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "EntityType": {
            "type": "string"
          },
          "IsDepricated": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "ToStatusID": {
            "type": "integer"
          },
          "FromStatus": {
            "$ref": "#/components/schemas/Status"
          },
          "ToStatus": {
            "$ref": "#/components/schemas/Status"
          },
          "Transition": {
            "$ref": "#/components/schemas/Transition"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Project": {
        "type": "object",
        "properties": {
          "Description": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "DimensionsID": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "WorkPlaceAddressID": {
            "type": "integer"
          },
          "ProjectNumberNumeric": {
            "type": "integer"
          },
          "ProjectNumberSeriesID": {
            "type": "integer"
          },
          "ProjectLeadName": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "ProjectNumber": {
            "type": "string"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "ProjectCustomerID": {
            "type": "integer"
          },
          "ProjectCustomer": {
            "$ref": "#/components/schemas/Customer"
          },
          "WorkPlaceAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "ProjectTasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectTask"
            }
          },
          "ProjectResources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectResource"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "ProjectResource": {
        "type": "object",
        "properties": {
          "UserID": {
            "type": "integer"
          },
          "Responsibility": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ProjectID": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "ProjectUser": {
            "$ref": "#/components/schemas/User"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "ProjectResourceSchedule": {
        "type": "object",
        "properties": {
          "ProjectTaskID": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "ProjectTaskScheduleID": {
            "type": "integer"
          },
          "ProjectResourceID": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "ProjectTask": {
        "type": "object",
        "properties": {
          "Description": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "Number": {
            "type": "string"
          },
          "ProjectID": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "SuggestedNumber": {
            "type": "string"
          },
          "ProjectTaskSchedules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectTaskSchedule"
            }
          },
          "ProjectTaskResources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectResourceSchedule"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "ProjectTaskSchedule": {
        "type": "object",
        "properties": {
          "ProjectTaskID": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "ScheduleResources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectResourceSchedule"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "BarnepassProduct": {
        "type": "object",
        "properties": {
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ProductID": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "Product": {
            "$ref": "#/components/schemas/Product"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Product": {
        "type": "object",
        "properties": {
          "Description": {
            "type": "string"
          },
          "PartName": {
            "type": "string"
          },
          "AccountID": {
            "type": "integer"
          },
          "VariansParentID": {
            "type": "integer"
          },
          "Name": {
            "type": "string"
          },
          "DimensionsID": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "Unit": {
            "type": "string"
          },
          "DefaultProductCategoryID": {
            "type": "integer"
          },
          "Type": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "VatTypeID": {
            "type": "integer"
          },
          "CalculateGrossPriceBasedOnNetPrice": {
            "type": "boolean"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "ImageFileID": {
            "type": "integer"
          },
          "CreatedBy": {
            "type": "string"
          },
          "ProductCategoryLinks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductCategoryLink"
            }
          },
          "Dimensions": {
            "$ref": "#/components/schemas/Dimensions"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "NumberSeries": {
        "type": "object",
        "properties": {
          "AccountYear": {
            "type": "integer"
          },
          "NumberSeriesTaskID": {
            "type": "integer"
          },
          "Empty": {
            "type": "boolean"
          },
          "Name": {
            "type": "string"
          },
          "NextNumber": {
            "type": "integer"
          },
          "IsDefaultForTask": {
            "type": "boolean"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "Disabled": {
            "type": "boolean"
          },
          "FromNumber": {
            "type": "integer"
          },
          "MainAccountID": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "DisplayName": {
            "type": "string"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "System": {
            "type": "boolean"
          },
          "Comment": {
            "type": "string"
          },
          "NumberLock": {
            "type": "boolean"
          },
          "ToNumber": {
            "type": "integer"
          },
          "UseNumbersFromNumberSeriesID": {
            "type": "integer"
          },
          "NumberSeriesTypeID": {
            "type": "integer"
          },
          "NumberSeriesType": {
            "$ref": "#/components/schemas/NumberSeriesType"
          },
          "UseNumbersFromNumberSeries": {
            "$ref": "#/components/schemas/NumberSeries"
          },
          "NumberSeriesTask": {
            "$ref": "#/components/schemas/NumberSeriesTask"
          },
          "MainAccount": {
            "$ref": "#/components/schemas/Account"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "NumberSeriesInvalidOverlap": {
        "type": "object",
        "properties": {
          "NumberSerieTypeAID": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "NumberSerieTypeBID": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "NumberSerieTypeA": {
            "$ref": "#/components/schemas/NumberSeriesType"
          },
          "NumberSerieTypeB": {
            "$ref": "#/components/schemas/NumberSeriesType"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "NumberSeriesTask": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "EntityType": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "NumberSeriesType": {
        "type": "object",
        "properties": {
          "CanHaveSeveralActiveSeries": {
            "type": "boolean"
          },
          "Name": {
            "type": "string"
          },
          "Yearly": {
            "type": "boolean"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "EntityType": {
            "type": "string"
          },
          "EntityField": {
            "type": "string"
          },
          "EntitySeriesIDField": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "System": {
            "type": "boolean"
          },
          "Series": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NumberSeries"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "EncryptionInfo": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "Deleted": {
            "type": "boolean"
          },
          "type": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "password": {
            "type": "string"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "File": {
        "type": "object",
        "properties": {
          "Pages": {
            "type": "integer"
          },
          "Description": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "ContentType": {
            "type": "string"
          },
          "encryptionID": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "StorageReference": {
            "type": "string"
          },
          "Size": {
            "type": "string"
          },
          "PermaLink": {
            "type": "string"
          },
          "OCRData": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "Md5": {
            "type": "string"
          },
          "FileTags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FileTag"
            }
          },
          "EntityLinks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FileEntityLink"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "FileTag": {
        "type": "object",
        "properties": {
          "TagName": {
            "type": "string"
          },
          "Deleted": {
            "type": "boolean"
          },
          "Status": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "FileID": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "FileEntityLink": {
        "type": "object",
        "properties": {
          "IsAttachment": {
            "type": "boolean"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "EntityType": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "FileID": {
            "type": "integer"
          },
          "EntityID": {
            "type": "integer"
          },
          "File": {
            "$ref": "#/components/schemas/File"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "ElsaUsageLog": {
        "type": "object",
        "properties": {
          "Quantity": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ExternalReference": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "ProductType": {
            "type": "string"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "AccessPointFormat": {
        "type": "object",
        "properties": {
          "Label": {
            "type": "string"
          },
          "OutgoingID": {
            "type": "integer"
          },
          "IncommingID": {
            "type": "integer"
          },
          "Name": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "ResourceName": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "EHFLog": {
        "type": "object",
        "properties": {
          "EntityDisplayValue": {
            "type": "string"
          },
          "JobRunExternalRef": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "EntityType": {
            "type": "string"
          },
          "Type": {
            "type": "string"
          },
          "Subject": {
            "type": "string"
          },
          "From": {
            "type": "string"
          },
          "ExternalReference": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "ExternalMessage": {
            "type": "string"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "JobRunID": {
            "type": "integer"
          },
          "To": {
            "type": "string"
          },
          "EntityID": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Department": {
        "type": "object",
        "properties": {
          "Description": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "DepartmentNumber": {
            "type": "string"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "DepartmentNumberSeriesID": {
            "type": "integer"
          },
          "DepartmentNumberNumeric": {
            "type": "integer"
          },
          "DepartmentManagerName": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Dimension10": {
        "type": "object",
        "properties": {
          "Description": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "Number": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "NumberNumeric": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Dimension5": {
        "type": "object",
        "properties": {
          "Description": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "Number": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "NumberNumeric": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Dimension6": {
        "type": "object",
        "properties": {
          "Description": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "Number": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "NumberNumeric": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Dimension7": {
        "type": "object",
        "properties": {
          "Description": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "Number": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "NumberNumeric": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Dimension8": {
        "type": "object",
        "properties": {
          "Description": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "Number": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "NumberNumeric": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Dimension9": {
        "type": "object",
        "properties": {
          "Description": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "Number": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "NumberNumeric": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Dimensions": {
        "type": "object",
        "properties": {
          "Dimension10ID": {
            "type": "integer"
          },
          "RegionID": {
            "type": "integer"
          },
          "DepartmentID": {
            "type": "integer"
          },
          "ProjectTaskID": {
            "type": "integer"
          },
          "Dimension7ID": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "Dimension8ID": {
            "type": "integer"
          },
          "ProjectID": {
            "type": "integer"
          },
          "Dimension6ID": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "ResponsibleID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "Dimension5ID": {
            "type": "integer"
          },
          "Dimension9ID": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "DimensionsInfo": {
        "type": "object",
        "properties": {
          "ProjectName": {
            "type": "string"
          },
          "Dimension6Number": {
            "type": "string"
          },
          "ProjectTaskNumber": {
            "type": "string"
          },
          "Dimension8Name": {
            "type": "string"
          },
          "Dimension7Name": {
            "type": "string"
          },
          "RegionName": {
            "type": "string"
          },
          "Dimension10Number": {
            "type": "string"
          },
          "Dimension9Number": {
            "type": "string"
          },
          "DimensionsID": {
            "type": "integer"
          },
          "Dimension7Number": {
            "type": "string"
          },
          "Dimension5Number": {
            "type": "string"
          },
          "ProjectTaskName": {
            "type": "string"
          },
          "Dimension9Name": {
            "type": "string"
          },
          "Dimension5Name": {
            "type": "string"
          },
          "Dimension8Number": {
            "type": "string"
          },
          "DepartmentName": {
            "type": "string"
          },
          "RegionCode": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "DepartmentNumber": {
            "type": "string"
          },
          "Dimension6Name": {
            "type": "string"
          },
          "ResponsibleName": {
            "type": "string"
          },
          "ProjectNumber": {
            "type": "string"
          },
          "Dimension10Name": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "DimensionSettings": {
        "type": "object",
        "properties": {
          "Label": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "IsActive": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "Dimension": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Region": {
        "type": "object",
        "properties": {
          "Description": {
            "type": "string"
          },
          "CountryCode": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "RegionCode": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Responsible": {
        "type": "object",
        "properties": {
          "Description": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "NameOfResponsible": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Contract": {
        "type": "object",
        "properties": {
          "Hash": {
            "type": "string"
          },
          "Engine": {
            "type": "string"
          },
          "Description": {
            "type": "string"
          },
          "ContractCode": {
            "type": "string"
          },
          "TeamsUri": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "HashTransactionAddress": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "Parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContractParameter"
            }
          },
          "Triggers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContractTrigger"
            }
          },
          "RunLogs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContractRunLog"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "ContractAddress": {
        "type": "object",
        "properties": {
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "EntityType": {
            "type": "string"
          },
          "ContractID": {
            "type": "integer"
          },
          "Type": {
            "type": "string"
          },
          "Address": {
            "type": "string"
          },
          "ContractAssetID": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "EntityID": {
            "type": "integer"
          },
          "AssetAddress": {
            "type": "string"
          },
          "Contract": {
            "$ref": "#/components/schemas/Contract"
          },
          "ContractAsset": {
            "$ref": "#/components/schemas/ContractAsset"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "ContractAsset": {
        "type": "object",
        "properties": {
          "IsAutoDestroy": {
            "type": "boolean"
          },
          "IsCosignedByDefiner": {
            "type": "boolean"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ContractID": {
            "type": "integer"
          },
          "Type": {
            "type": "string"
          },
          "IsFixedDenominations": {
            "type": "boolean"
          },
          "IsPrivate": {
            "type": "boolean"
          },
          "SpenderAttested": {
            "type": "boolean"
          },
          "IsTransferrable": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "IsIssuedByDefinerOnly": {
            "type": "boolean"
          },
          "CreatedBy": {
            "type": "string"
          },
          "Contract": {
            "$ref": "#/components/schemas/Contract"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "ContractDebugLog": {
        "type": "object",
        "properties": {
          "Message": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ContractID": {
            "type": "integer"
          },
          "Type": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "ContractRunLogID": {
            "type": "integer"
          },
          "Contract": {
            "$ref": "#/components/schemas/Contract"
          },
          "ContractRunLog": {
            "$ref": "#/components/schemas/ContractRunLog"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "ContractParameter": {
        "type": "object",
        "properties": {
          "Value": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ContractID": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "Contract": {
            "$ref": "#/components/schemas/Contract"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "ContractRunLog": {
        "type": "object",
        "properties": {
          "Message": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ContractID": {
            "type": "integer"
          },
          "Type": {
            "type": "string"
          },
          "ContractTriggerID": {
            "type": "integer"
          },
          "RunTime": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "Contract": {
            "$ref": "#/components/schemas/Contract"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "ContractTransaction": {
        "type": "object",
        "properties": {
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ContractAddressID": {
            "type": "integer"
          },
          "ReceiverAddress": {
            "type": "string"
          },
          "ContractID": {
            "type": "integer"
          },
          "SenderAddress": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "AssetAddress": {
            "type": "string"
          },
          "Contract": {
            "$ref": "#/components/schemas/Contract"
          },
          "ContractAddress": {
            "$ref": "#/components/schemas/ContractAddress"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "ContractTrigger": {
        "type": "object",
        "properties": {
          "ModelFilter": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ContractID": {
            "type": "integer"
          },
          "Type": {
            "type": "string"
          },
          "ExpressionFilter": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "OperationFilter": {
            "type": "string"
          },
          "Contract": {
            "$ref": "#/components/schemas/Contract"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Comment": {
        "type": "object",
        "properties": {
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "EntityType": {
            "type": "string"
          },
          "AuthorID": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "Text": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "EntityID": {
            "type": "integer"
          },
          "Mentioned": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Mentioned"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Mentioned": {
        "type": "object",
        "properties": {
          "UserID": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "CommentID": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "ApiKey": {
        "type": "object",
        "properties": {
          "Url": {
            "type": "string"
          },
          "Description": {
            "type": "string"
          },
          "ExternalId": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "Encrypt": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "IntegrationKey": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "IntegrationType": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Altinn": {
        "type": "object",
        "properties": {
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "Language": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "PreferredLogin": {
            "type": "string"
          },
          "SystemPw": {
            "type": "string"
          },
          "SystemID": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "AltinnReceipt": {
        "type": "object",
        "properties": {
          "AltinnResponseData": {
            "type": "string"
          },
          "XmlReceipt": {
            "type": "string"
          },
          "ErrorText": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ReceiptID": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "HasBeenRegistered": {
            "type": "boolean"
          },
          "CreatedBy": {
            "type": "string"
          },
          "Form": {
            "type": "string"
          },
          "UserSign": {
            "type": "string"
          },
          "Signings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AltinnSigning"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "AltinnSigning": {
        "type": "object",
        "properties": {
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "SignatureReference": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "SignatureText": {
            "type": "string"
          },
          "AltinnReceiptID": {
            "type": "integer"
          },
          "StatusText": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Barnepass": {
        "type": "object",
        "properties": {
          "inntektsaar": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "oppgave": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BarnepassOppgave"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "BarnepassOppgave": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "foedselsnummer": {
            "type": "string"
          },
          "BarnepassID": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "navn": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "paaloeptBeloep": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "UserRole": {
        "type": "object",
        "properties": {
          "UserID": {
            "type": "integer"
          },
          "SharedRoleName": {
            "type": "string"
          },
          "SharedRoleId": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "User": {
            "$ref": "#/components/schemas/User"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Role": {
        "type": "object",
        "properties": {
          "Label": {
            "type": "string"
          },
          "Description": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "RolePermissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RolePermission"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "RolePermission": {
        "type": "object",
        "properties": {
          "Deleted": {
            "type": "boolean"
          },
          "RoleID": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "PermissionID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "Role": {
            "$ref": "#/components/schemas/Role"
          },
          "Permission": {
            "$ref": "#/components/schemas/Permission"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Permission": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "RolePermissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RolePermission"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "ApiMessage": {
        "type": "object",
        "properties": {
          "Message": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "Service": {
            "type": "string"
          },
          "Type": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "AvtaleGiroAgreement": {
        "type": "object",
        "properties": {
          "DataSender": {
            "type": "string"
          },
          "Description": {
            "type": "string"
          },
          "NextNumber": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "Thumbprint": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "KeyPath": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "AvtaleGiroBankAccount": {
        "type": "object",
        "properties": {
          "BankAccountNumber": {
            "type": "string"
          },
          "AvtaleGiroAgreementID": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CompanyID": {
            "type": "integer"
          },
          "Company": {
            "$ref": "#/components/schemas/Company"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "AvtaleGiroFile": {
        "type": "object",
        "properties": {
          "AvtaleGiroAgreementID": {
            "type": "integer"
          },
          "AvtaleGiroContent": {
            "type": "string"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "AvtaleGiroMergedFileID": {
            "type": "integer"
          },
          "CompanyID": {
            "type": "integer"
          },
          "FileID": {
            "type": "integer"
          },
          "Company": {
            "$ref": "#/components/schemas/Company"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "AvtaleGiroMergedFile": {
        "type": "object",
        "properties": {
          "TransmissionNumber": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "BankAgreement": {
        "type": "object",
        "properties": {
          "OrderName": {
            "type": "string"
          },
          "AccountOwnerOrgNumber": {
            "type": "string"
          },
          "CustomerName": {
            "type": "string"
          },
          "ServiceAccountID": {
            "type": "integer"
          },
          "AccountOwnerName": {
            "type": "string"
          },
          "OrderMobile": {
            "type": "string"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ReceiptID": {
            "type": "string"
          },
          "ServiceID": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "OrderEmail": {
            "type": "string"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomerOrgNumber": {
            "type": "string"
          },
          "CompanyID": {
            "type": "integer"
          },
          "ServiceAccount": {
            "$ref": "#/components/schemas/ServiceAccount"
          },
          "Company": {
            "$ref": "#/components/schemas/Company"
          },
          "Services": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BankService"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "BankService": {
        "type": "object",
        "properties": {
          "KidRule": {
            "type": "string"
          },
          "DivisionName": {
            "type": "string"
          },
          "Deleted": {
            "type": "boolean"
          },
          "FileType": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "DivisionID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "ConfirmInNetbank": {
            "type": "boolean"
          },
          "BankAgreementID": {
            "type": "integer"
          },
          "CreatedBy": {
            "type": "string"
          },
          "ServiceType": {
            "type": "integer"
          },
          "BankAgreement": {
            "$ref": "#/components/schemas/BankAgreement"
          },
          "BankAccounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BankServiceBankAccount"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "BankServiceBankAccount": {
        "type": "object",
        "properties": {
          "AccountNumber": {
            "type": "string"
          },
          "BankServiceID": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "BankService": {
            "$ref": "#/components/schemas/BankService"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Company": {
        "type": "object",
        "properties": {
          "IsTemplate": {
            "type": "boolean"
          },
          "SchemaName": {
            "type": "string"
          },
          "Key": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "OrganizationNumber": {
            "type": "string"
          },
          "StatusCode": {
            "type": "string"
          },
          "Deleted": {
            "type": "boolean"
          },
          "MigrationVersion": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "WebHookSubscriberId": {
            "type": "string"
          },
          "FileFlowEmail": {
            "type": "string"
          },
          "ConnectionString": {
            "type": "string"
          },
          "IsGlobalTemplate": {
            "type": "boolean"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "FileFlowOrgnrEmail": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "ClientNumber": {
            "type": "integer"
          },
          "IsTest": {
            "type": "boolean"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "CompanyAccess": {
        "type": "object",
        "properties": {
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "GlobalIdentity": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "Roles": {
            "type": "string"
          },
          "CompanyID": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "CompanyBackup": {
        "type": "object",
        "properties": {
          "OrgNumber": {
            "type": "string"
          },
          "CopyFiles": {
            "type": "boolean"
          },
          "SchemaName": {
            "type": "string"
          },
          "Message": {
            "type": "string"
          },
          "ContainerName": {
            "type": "string"
          },
          "CompanyKey": {
            "type": "string"
          },
          "CustomerName": {
            "type": "string"
          },
          "Environment": {
            "type": "string"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ContractID": {
            "type": "integer"
          },
          "CompanyName": {
            "type": "string"
          },
          "ContractType": {
            "type": "integer"
          },
          "Reason": {
            "type": "string"
          },
          "CloudBlobName": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "BackupStatus": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "ContractCron": {
        "type": "object",
        "properties": {
          "Expression": {
            "type": "string"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ContractID": {
            "type": "integer"
          },
          "ContractTriggerID": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CompanyID": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "ContractObyte": {
        "type": "object",
        "properties": {
          "Deleted": {
            "type": "boolean"
          },
          "ContractAddressID": {
            "type": "integer"
          },
          "ContractID": {
            "type": "integer"
          },
          "Address": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CompanyID": {
            "type": "integer"
          },
          "AssetAddress": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "DeniedUserAccessLog": {
        "type": "object",
        "properties": {
          "Email": {
            "type": "string"
          },
          "Message": {
            "type": "string"
          },
          "Deleted": {
            "type": "boolean"
          },
          "CompanyName": {
            "type": "string"
          },
          "Username": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CompanyID": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "FailedBankFile": {
        "type": "object",
        "properties": {
          "CompanyKey": {
            "type": "string"
          },
          "FileName": {
            "type": "string"
          },
          "Deleted": {
            "type": "boolean"
          },
          "FileContent": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "FailedReason": {
            "type": "string"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "HangfireJob": {
        "type": "object",
        "properties": {
          "Completed": {
            "type": "boolean"
          },
          "Year": {
            "type": "integer"
          },
          "CompanyKey": {
            "type": "string"
          },
          "Status": {
            "type": "integer"
          },
          "HasError": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "GlobalIdentity": {
            "type": "string"
          },
          "JobId": {
            "type": "string"
          },
          "CompanyID": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "HangfireJobContext": {
        "type": "object",
        "properties": {
          "Completed": {
            "type": "boolean"
          },
          "SchemaName": {
            "type": "string"
          },
          "Year": {
            "type": "integer"
          },
          "CompanyKey": {
            "type": "string"
          },
          "Status": {
            "type": "integer"
          },
          "HasError": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "GlobalIdentity": {
            "type": "string"
          },
          "JobId": {
            "type": "string"
          },
          "CompanyID": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "HangfireResponse": {
        "type": "object",
        "properties": {
          "State": {
            "type": "string"
          },
          "Completed": {
            "type": "boolean"
          },
          "Year": {
            "type": "integer"
          },
          "CompanyKey": {
            "type": "string"
          },
          "Status": {
            "type": "integer"
          },
          "HasError": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "GlobalIdentity": {
            "type": "string"
          },
          "ProgressUrl": {
            "type": "string"
          },
          "JobId": {
            "type": "string"
          },
          "CompanyID": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "KpiDefinition": {
        "type": "object",
        "properties": {
          "Route": {
            "type": "string"
          },
          "RoleNames": {
            "type": "string"
          },
          "Interval": {
            "type": "string"
          },
          "Application": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "Deleted": {
            "type": "boolean"
          },
          "IsPerUser": {
            "type": "boolean"
          },
          "RefreshModels": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "SourceType": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CompanyID": {
            "type": "integer"
          },
          "ValueType": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "KpiValue": {
        "type": "object",
        "properties": {
          "Deleted": {
            "type": "boolean"
          },
          "ValueStatus": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "Counter": {
            "type": "integer"
          },
          "Text": {
            "type": "string"
          },
          "KpiName": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "UserIdentity": {
            "type": "string"
          },
          "KpiDefinitionID": {
            "type": "integer"
          },
          "CompanyID": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "OutgoingInvoice": {
        "type": "object",
        "properties": {
          "RecipientPhoneNumber": {
            "type": "string"
          },
          "InvoiceType": {
            "type": "string"
          },
          "MetaJson": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "RecipientOrganizationNumber": {
            "type": "string"
          },
          "Status": {
            "type": "integer"
          },
          "ExternalReference": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "InvoiceID": {
            "type": "integer"
          },
          "ISPOrganizationNumber": {
            "type": "string"
          },
          "CompanyID": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "ProcessFileLog": {
        "type": "object",
        "properties": {
          "EntityCount": {
            "type": "integer"
          },
          "Message": {
            "type": "string"
          },
          "CompanyKey": {
            "type": "string"
          },
          "FileName": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "CompanyName": {
            "type": "string"
          },
          "EntityInstanceID": {
            "type": "string"
          },
          "FileType": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "UserIdentity": {
            "type": "string"
          },
          "CompanyID": {
            "type": "integer"
          },
          "FileID": {
            "type": "integer"
          },
          "EntityName": {
            "type": "string"
          },
          "Company": {
            "$ref": "#/components/schemas/Company"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "ServiceAccount": {
        "type": "object",
        "properties": {
          "DataSender": {
            "type": "string"
          },
          "Description": {
            "type": "string"
          },
          "NextNumber": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "Thumbprint": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "KeyPath": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "UserVerification": {
        "type": "object",
        "properties": {
          "UserId": {
            "type": "integer"
          },
          "Email": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "VerificationCode": {
            "type": "string"
          },
          "RequestOrigin": {
            "type": "string"
          },
          "UserType": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "DisplayName": {
            "type": "string"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CompanyId": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Account": {
        "type": "object",
        "properties": {
          "AccountSetupID": {
            "type": "integer"
          },
          "CustomerID": {
            "type": "integer"
          },
          "DoSynchronize": {
            "type": "boolean"
          },
          "AccountNumber": {
            "type": "integer"
          },
          "Locked": {
            "type": "boolean"
          },
          "UseVatDeductionGroupID": {
            "type": "integer"
          },
          "SaftMappingAccountID": {
            "type": "integer"
          },
          "Description": {
            "type": "string"
          },
          "CostAllocationID": {
            "type": "integer"
          },
          "AccountID": {
            "type": "integer"
          },
          "Visible": {
            "type": "boolean"
          },
          "Active": {
            "type": "boolean"
          },
          "AccountName": {
            "type": "string"
          },
          "DimensionsID": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "LockManualPosts": {
            "type": "boolean"
          },
          "SystemAccount": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "VatTypeID": {
            "type": "integer"
          },
          "UsePostPost": {
            "type": "boolean"
          },
          "AccountGroupID": {
            "type": "integer"
          },
          "CurrencyCodeID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "TopLevelAccountGroupID": {
            "type": "integer"
          },
          "CreatedBy": {
            "type": "string"
          },
          "SupplierID": {
            "type": "integer"
          },
          "EmployeeID": {
            "type": "integer"
          },
          "Keywords": {
            "type": "string"
          },
          "AccountGroup": {
            "$ref": "#/components/schemas/AccountGroup"
          },
          "TopLevelAccountGroup": {
            "$ref": "#/components/schemas/AccountGroup"
          },
          "VatType": {
            "$ref": "#/components/schemas/VatType"
          },
          "MainAccount": {
            "$ref": "#/components/schemas/Account"
          },
          "Customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "Supplier": {
            "$ref": "#/components/schemas/Supplier"
          },
          "Employee": {
            "$ref": "#/components/schemas/Employee"
          },
          "Dimensions": {
            "$ref": "#/components/schemas/Dimensions"
          },
          "Alias": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountAlias"
            }
          },
          "MandatoryDimensions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountMandatoryDimension"
            }
          },
          "CompatibleAccountGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountGroup"
            }
          },
          "SubAccounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Account"
            }
          },
          "CostAllocation": {
            "$ref": "#/components/schemas/CostAllocation"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "AccountAlias": {
        "type": "object",
        "properties": {
          "AccountID": {
            "type": "integer"
          },
          "Name": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "AccountGroup": {
        "type": "object",
        "properties": {
          "AccountGroupSetupID": {
            "type": "integer"
          },
          "CompatibleAccountID": {
            "type": "integer"
          },
          "AccountID": {
            "type": "integer"
          },
          "Name": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "Summable": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "MainGroupID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "GroupNumber": {
            "type": "string"
          },
          "AccountGroupSetID": {
            "type": "integer"
          },
          "MainGroup": {
            "$ref": "#/components/schemas/AccountGroup"
          },
          "AccountGroupSet": {
            "$ref": "#/components/schemas/AccountGroupSet"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "AccountGroupSet": {
        "type": "object",
        "properties": {
          "Shared": {
            "type": "boolean"
          },
          "FromAccountNumber": {
            "type": "integer"
          },
          "Name": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "SubAccountAllowed": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "ToAccountNumber": {
            "type": "integer"
          },
          "CreatedBy": {
            "type": "string"
          },
          "System": {
            "type": "boolean"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "AccountMandatoryDimension": {
        "type": "object",
        "properties": {
          "MandatoryType": {
            "type": "integer"
          },
          "AccountID": {
            "type": "integer"
          },
          "DimensionNo": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Accrual": {
        "type": "object",
        "properties": {
          "JournalEntryLineDraftID": {
            "type": "integer"
          },
          "AccrualJournalEntryMode": {
            "type": "integer"
          },
          "BalanceAccountID": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "ResultAccountID": {
            "type": "integer"
          },
          "JournalEntryLineDraft": {
            "$ref": "#/components/schemas/JournalEntryLineDraft"
          },
          "Periods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccrualPeriod"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "AccrualPeriod": {
        "type": "object",
        "properties": {
          "JournalEntryDraftLineID": {
            "type": "integer"
          },
          "AccountYear": {
            "type": "integer"
          },
          "AccrualID": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "PeriodNo": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "Accrual": {
            "$ref": "#/components/schemas/Accrual"
          },
          "JournalEntryLineDraft": {
            "$ref": "#/components/schemas/JournalEntryLineDraft"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "ApprovalData": {
        "type": "object",
        "properties": {
          "EntityCount": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "EntityHash": {
            "type": "string"
          },
          "VerificationMethod": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "VerificationReference": {
            "type": "string"
          },
          "EntityReference": {
            "type": "string"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "EntityName": {
            "type": "string"
          },
          "EntityID": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Asset": {
        "type": "object",
        "properties": {
          "AssetGroupCode": {
            "type": "string"
          },
          "DepreciationAccountID": {
            "type": "integer"
          },
          "Lifetime": {
            "type": "integer"
          },
          "BalanceAccountID": {
            "type": "integer"
          },
          "Name": {
            "type": "string"
          },
          "DimensionsID": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "DepreciationCycle": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "AutoDepreciation": {
            "type": "boolean"
          },
          "BalanceAccount": {
            "$ref": "#/components/schemas/Account"
          },
          "DepreciationAccount": {
            "$ref": "#/components/schemas/Account"
          },
          "Dimensions": {
            "$ref": "#/components/schemas/Dimensions"
          },
          "DepreciationLines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DepreciationLine"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Bank": {
        "type": "object",
        "properties": {
          "EmailID": {
            "type": "integer"
          },
          "InitialBIC": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "PhoneID": {
            "type": "integer"
          },
          "BIC": {
            "type": "string"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "AddressID": {
            "type": "integer"
          },
          "Web": {
            "type": "string"
          },
          "Address": {
            "$ref": "#/components/schemas/Address"
          },
          "Phone": {
            "$ref": "#/components/schemas/Phone"
          },
          "Email": {
            "$ref": "#/components/schemas/Email"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "BankAccount": {
        "type": "object",
        "properties": {
          "BusinessRelationID": {
            "type": "integer"
          },
          "AccountNumber": {
            "type": "string"
          },
          "IntegrationStatus": {
            "type": "integer"
          },
          "Locked": {
            "type": "boolean"
          },
          "Label": {
            "type": "string"
          },
          "AccountID": {
            "type": "integer"
          },
          "BankAccountType": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "IBAN": {
            "type": "string"
          },
          "IntegrationSettings": {
            "type": "string"
          },
          "BankID": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "CompanySettingsID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "BankIntegrationAgreement": {
        "type": "object",
        "properties": {
          "Email": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "DefaultAgreement": {
            "type": "boolean"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "PropertiesJson": {
            "type": "string"
          },
          "BankAccountID": {
            "type": "integer"
          },
          "ServiceTemplateID": {
            "type": "string"
          },
          "ServiceID": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "BankAcceptance": {
            "type": "boolean"
          },
          "IsInbound": {
            "type": "boolean"
          },
          "ServiceProvider": {
            "type": "integer"
          },
          "HasOrderedIntegrationChange": {
            "type": "boolean"
          },
          "HasNewAccountInformation": {
            "type": "boolean"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "IsBankBalance": {
            "type": "boolean"
          },
          "CreatedBy": {
            "type": "string"
          },
          "IsOutgoing": {
            "type": "boolean"
          },
          "BankAccount": {
            "$ref": "#/components/schemas/BankAccount"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "BankRule": {
        "type": "object",
        "properties": {
          "AccountID": {
            "type": "integer"
          },
          "Name": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "Priority": {
            "type": "integer"
          },
          "IsActive": {
            "type": "boolean"
          },
          "ActionCode": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "Rule": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "BankStatement": {
        "type": "object",
        "properties": {
          "AccountID": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "BankAccountID": {
            "type": "integer"
          },
          "ArchiveReference": {
            "type": "string"
          },
          "CurrencyCode": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "FileID": {
            "type": "integer"
          },
          "Entries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BankStatementEntry"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "BankStatementEntry": {
        "type": "object",
        "properties": {
          "SenderName": {
            "type": "string"
          },
          "Category": {
            "type": "string"
          },
          "SenderAccount": {
            "type": "string"
          },
          "Description": {
            "type": "string"
          },
          "InvoiceNumber": {
            "type": "string"
          },
          "TransactionId": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "BankStatementID": {
            "type": "integer"
          },
          "StructuredReference": {
            "type": "string"
          },
          "ArchiveReference": {
            "type": "string"
          },
          "CurrencyCode": {
            "type": "string"
          },
          "ReceiverAccount": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "Receivername": {
            "type": "string"
          },
          "CID": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "BankStatementMatch": {
        "type": "object",
        "properties": {
          "Group": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "BankStatementEntryID": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "JournalEntryLineID": {
            "type": "integer"
          },
          "Batch": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "BankStatementRule": {
        "type": "object",
        "properties": {
          "EntryText": {
            "type": "string"
          },
          "AccountID": {
            "type": "integer"
          },
          "Name": {
            "type": "string"
          },
          "DimensionsID": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "Priority": {
            "type": "integer"
          },
          "IsActive": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "Rule": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "Dimensions": {
            "$ref": "#/components/schemas/Dimensions"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Budget": {
        "type": "object",
        "properties": {
          "AccountingYear": {
            "type": "integer"
          },
          "Name": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "Entries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BudgetEntry"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "BudgetEntry": {
        "type": "object",
        "properties": {
          "PeriodNumber": {
            "type": "integer"
          },
          "BudgetID": {
            "type": "integer"
          },
          "AccountID": {
            "type": "integer"
          },
          "DimensionsID": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "Dimensions": {
            "$ref": "#/components/schemas/Dimensions"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "CompanyAccountingSettings": {
        "type": "object",
        "properties": {
          "AssetSaleProfitNoVatAccountID": {
            "type": "integer"
          },
          "ReInvoicingCostsharingProductID": {
            "type": "integer"
          },
          "AssetSaleProfitVatAccountID": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "AssetSaleProductID": {
            "type": "integer"
          },
          "ReInvoicingMethod": {
            "type": "integer"
          },
          "AssetSaleProfitBalancingAccountID": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "ReInvoicingTurnoverProductID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "AssetWriteoffAccountID": {
            "type": "integer"
          },
          "AssetSaleLossBalancingAccountID": {
            "type": "integer"
          },
          "CreatedBy": {
            "type": "string"
          },
          "AssetSaleLossVatAccountID": {
            "type": "integer"
          },
          "AssetSaleLossNoVatAccountID": {
            "type": "integer"
          },
          "ReInvoicingCostsharingProduct": {
            "$ref": "#/components/schemas/Product"
          },
          "ReInvoicingTurnoverProduct": {
            "$ref": "#/components/schemas/Product"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "CompanyBankAccount": {
        "type": "object",
        "properties": {
          "AccountID": {
            "type": "integer"
          },
          "Name": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "BankAccountID": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "IsSalary": {
            "type": "boolean"
          },
          "CreatedBy": {
            "type": "string"
          },
          "IsOutgoing": {
            "type": "boolean"
          },
          "IsIncomming": {
            "type": "boolean"
          },
          "IsTax": {
            "type": "boolean"
          },
          "BankAccount": {
            "$ref": "#/components/schemas/BankAccount"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "CostAllocation": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CostAllocationItem"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "CostAllocationItem": {
        "type": "object",
        "properties": {
          "Description": {
            "type": "string"
          },
          "CostAllocationID": {
            "type": "integer"
          },
          "AccountID": {
            "type": "integer"
          },
          "DimensionsID": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "VatTypeID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "Account": {
            "$ref": "#/components/schemas/Account"
          },
          "VatType": {
            "$ref": "#/components/schemas/VatType"
          },
          "Dimensions": {
            "$ref": "#/components/schemas/Dimensions"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "CustomLiquidityPayment": {
        "type": "object",
        "properties": {
          "Description": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "CurrencyCodeID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CustomLiquidityPaymentType": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "IsCustomerPayment": {
            "type": "boolean"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "DepreciationLine": {
        "type": "object",
        "properties": {
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "AssetID": {
            "type": "integer"
          },
          "DepreciationType": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "AssetJELineID": {
            "type": "integer"
          },
          "DepreciationJELineID": {
            "type": "integer"
          },
          "DepreciationJELine": {
            "$ref": "#/components/schemas/JournalEntryLine"
          },
          "AssetJELine": {
            "$ref": "#/components/schemas/JournalEntryLine"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "FinancialYear": {
        "type": "object",
        "properties": {
          "Year": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "JournalEntry": {
        "type": "object",
        "properties": {
          "NumberSeriesTaskID": {
            "type": "integer"
          },
          "Description": {
            "type": "string"
          },
          "JournalEntryNumber": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "JournalEntryDraftGroup": {
            "type": "string"
          },
          "NumberSeriesID": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "FinancialYearID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "JournalEntryAccrualID": {
            "type": "integer"
          },
          "CreatedBy": {
            "type": "string"
          },
          "JournalEntryNumberNumeric": {
            "type": "integer"
          },
          "Lines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JournalEntryLine"
            }
          },
          "DraftLines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JournalEntryLineDraft"
            }
          },
          "JournalEntryAccrual": {
            "$ref": "#/components/schemas/Accrual"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "JournalEntryLine": {
        "type": "object",
        "properties": {
          "JournalEntryLineDraftID": {
            "type": "integer"
          },
          "PostPostJournalEntryLineID": {
            "type": "integer"
          },
          "Description": {
            "type": "string"
          },
          "CustomerInvoiceID": {
            "type": "integer"
          },
          "CustomerOrderID": {
            "type": "integer"
          },
          "VatJournalEntryPostID": {
            "type": "integer"
          },
          "OriginalJournalEntryPost": {
            "type": "integer"
          },
          "Signature": {
            "type": "string"
          },
          "JournalEntryNumber": {
            "type": "string"
          },
          "AccountID": {
            "type": "integer"
          },
          "InvoiceNumber": {
            "type": "string"
          },
          "DimensionsID": {
            "type": "integer"
          },
          "AccrualID": {
            "type": "integer"
          },
          "SubAccountID": {
            "type": "integer"
          },
          "JournalEntryID": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "VatPeriodID": {
            "type": "integer"
          },
          "OriginalReferencePostID": {
            "type": "integer"
          },
          "PeriodID": {
            "type": "integer"
          },
          "PaymentID": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "VatTypeID": {
            "type": "integer"
          },
          "PaymentInfoTypeID": {
            "type": "integer"
          },
          "PaymentReferenceID": {
            "type": "integer"
          },
          "ReferenceCreditPostID": {
            "type": "integer"
          },
          "CurrencyCodeID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "VatDeductionPercent": {
            "type": "integer"
          },
          "JournalEntryNumberNumeric": {
            "type": "integer"
          },
          "ReferenceOriginalPostID": {
            "type": "integer"
          },
          "JournalEntryTypeID": {
            "type": "integer"
          },
          "VatReportID": {
            "type": "integer"
          },
          "SupplierInvoiceID": {
            "type": "integer"
          },
          "BatchNumber": {
            "type": "integer"
          },
          "JournalEntry": {
            "$ref": "#/components/schemas/JournalEntry"
          },
          "VatJournalEntryPost": {
            "$ref": "#/components/schemas/JournalEntryLine"
          },
          "ReferenceCreditPost": {
            "$ref": "#/components/schemas/JournalEntryLine"
          },
          "OriginalReferencePost": {
            "$ref": "#/components/schemas/JournalEntryLine"
          },
          "ReferenceOriginalPost": {
            "$ref": "#/components/schemas/JournalEntryLine"
          },
          "Dimensions": {
            "$ref": "#/components/schemas/Dimensions"
          },
          "Accrual": {
            "$ref": "#/components/schemas/Accrual"
          },
          "JournalEntryLineDraft": {
            "$ref": "#/components/schemas/JournalEntryLineDraft"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "JournalEntryLineDraft": {
        "type": "object",
        "properties": {
          "PostPostJournalEntryLineID": {
            "type": "integer"
          },
          "Description": {
            "type": "string"
          },
          "CustomerInvoiceID": {
            "type": "integer"
          },
          "CustomerOrderID": {
            "type": "integer"
          },
          "Signature": {
            "type": "string"
          },
          "JournalEntryNumber": {
            "type": "string"
          },
          "AccountID": {
            "type": "integer"
          },
          "InvoiceNumber": {
            "type": "string"
          },
          "DimensionsID": {
            "type": "integer"
          },
          "AccrualID": {
            "type": "integer"
          },
          "SubAccountID": {
            "type": "integer"
          },
          "JournalEntryID": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "VatPeriodID": {
            "type": "integer"
          },
          "PeriodID": {
            "type": "integer"
          },
          "PaymentID": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "VatTypeID": {
            "type": "integer"
          },
          "PaymentInfoTypeID": {
            "type": "integer"
          },
          "PaymentReferenceID": {
            "type": "integer"
          },
          "CurrencyCodeID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "VatDeductionPercent": {
            "type": "integer"
          },
          "JournalEntryNumberNumeric": {
            "type": "integer"
          },
          "JournalEntryTypeID": {
            "type": "integer"
          },
          "SupplierInvoiceID": {
            "type": "integer"
          },
          "BatchNumber": {
            "type": "integer"
          },
          "Dimensions": {
            "$ref": "#/components/schemas/Dimensions"
          },
          "Accrual": {
            "$ref": "#/components/schemas/Accrual"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "JournalEntryMode": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "VisibleModules": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "TraceLinkTypes": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "ColumnSetUp": {
            "type": "string"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "JournalEntrySourceSerie": {
        "type": "object",
        "properties": {
          "JournalEntrySourceID": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "JournalEntryType": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "Deleted": {
            "type": "boolean"
          },
          "Number": {
            "type": "integer"
          },
          "MainName": {
            "type": "string"
          },
          "ExpectNegativeAmount": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "DisplayName": {
            "type": "string"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "LedgerSuggestion": {
        "type": "object",
        "properties": {
          "OrgNumber": {
            "type": "string"
          },
          "BusinessType": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "IndustryName": {
            "type": "string"
          },
          "IndustryCode": {
            "type": "string"
          },
          "Source": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Payment": {
        "type": "object",
        "properties": {
          "PaymentNotificationReportFileID": {
            "type": "integer"
          },
          "IsExternal": {
            "type": "boolean"
          },
          "BusinessRelationID": {
            "type": "integer"
          },
          "PaymentCodeID": {
            "type": "integer"
          },
          "Description": {
            "type": "string"
          },
          "CustomerInvoiceID": {
            "type": "integer"
          },
          "Debtor": {
            "type": "string"
          },
          "SerialNumberOrAcctSvcrRef": {
            "type": "string"
          },
          "IsPaymentClaim": {
            "type": "boolean"
          },
          "AutoJournal": {
            "type": "boolean"
          },
          "InvoiceNumber": {
            "type": "string"
          },
          "FromBankAccountID": {
            "type": "integer"
          },
          "OcrPaymentStrings": {
            "type": "string"
          },
          "XmlTagPmtInfIdReference": {
            "type": "string"
          },
          "JournalEntryID": {
            "type": "integer"
          },
          "ExternalBankAccountNumber": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ReconcilePayment": {
            "type": "boolean"
          },
          "XmlTagEndToEndIdReference": {
            "type": "string"
          },
          "Domain": {
            "type": "string"
          },
          "IsPaymentCancellationRequest": {
            "type": "boolean"
          },
          "InPaymentID": {
            "type": "string"
          },
          "CustomerInvoiceReminderID": {
            "type": "integer"
          },
          "PaymentBatchID": {
            "type": "integer"
          },
          "ToBankAccountID": {
            "type": "integer"
          },
          "PaymentID": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "CurrencyCodeID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "PaymentStatusReportFileID": {
            "type": "integer"
          },
          "CreatedBy": {
            "type": "string"
          },
          "Proprietary": {
            "type": "string"
          },
          "StatusText": {
            "type": "string"
          },
          "SupplierInvoiceID": {
            "type": "integer"
          },
          "IsCustomerPayment": {
            "type": "boolean"
          },
          "CustomerInvoice": {
            "$ref": "#/components/schemas/CustomerInvoice"
          },
          "SupplierInvoice": {
            "$ref": "#/components/schemas/SupplierInvoice"
          },
          "CustomerInvoiceReminder": {
            "$ref": "#/components/schemas/CustomerInvoiceReminder"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "PaymentBatch": {
        "type": "object",
        "properties": {
          "PaymentBatchTypeID": {
            "type": "integer"
          },
          "Camt054CMsgId": {
            "type": "string"
          },
          "PaymentFileID": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "HashValue": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "PaymentReferenceID": {
            "type": "string"
          },
          "OcrTransmissionNumber": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "PaymentStatusReportFileID": {
            "type": "integer"
          },
          "CreatedBy": {
            "type": "string"
          },
          "NumberOfPayments": {
            "type": "integer"
          },
          "OcrHeadingStrings": {
            "type": "string"
          },
          "IsCustomerPayment": {
            "type": "boolean"
          },
          "Payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Payment"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "PostPost": {
        "type": "object",
        "properties": {
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "CurrencyCodeID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "JournalEntryLine2ID": {
            "type": "integer"
          },
          "JournalEntryLine1ID": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "ReInvoice": {
        "type": "object",
        "properties": {
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ProductID": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "ReInvoicingType": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "SupplierInvoiceID": {
            "type": "integer"
          },
          "SupplierInvoice": {
            "$ref": "#/components/schemas/SupplierInvoice"
          },
          "Product": {
            "$ref": "#/components/schemas/Product"
          },
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReInvoiceItem"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "ReInvoiceItem": {
        "type": "object",
        "properties": {
          "CustomerID": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ReInvoiceID": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "Surcharge": {
            "type": "integer"
          },
          "Customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "SupplierInvoice": {
        "type": "object",
        "properties": {
          "ShippingAddressLine3": {
            "type": "string"
          },
          "ReInvoiced": {
            "type": "boolean"
          },
          "PaymentStatus": {
            "type": "integer"
          },
          "InvoiceAddressLine2": {
            "type": "string"
          },
          "InvoiceReceiverName": {
            "type": "string"
          },
          "CustomerPerson": {
            "type": "string"
          },
          "AmountRegards": {
            "type": "string"
          },
          "FreeTxt": {
            "type": "string"
          },
          "OurReference": {
            "type": "string"
          },
          "YourReference": {
            "type": "string"
          },
          "PaymentTermsID": {
            "type": "integer"
          },
          "ShippingAddressLine2": {
            "type": "string"
          },
          "PaymentTerm": {
            "type": "string"
          },
          "Requisition": {
            "type": "string"
          },
          "PaymentInformation": {
            "type": "string"
          },
          "ShippingCountryCode": {
            "type": "string"
          },
          "SalesPerson": {
            "type": "string"
          },
          "InvoiceNumber": {
            "type": "string"
          },
          "DeliveryMethod": {
            "type": "string"
          },
          "DefaultDimensionsID": {
            "type": "integer"
          },
          "DeliveryTermsID": {
            "type": "integer"
          },
          "InvoiceType": {
            "type": "integer"
          },
          "JournalEntryID": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "InvoiceReferenceID": {
            "type": "integer"
          },
          "ShippingPostalCode": {
            "type": "string"
          },
          "InvoiceCity": {
            "type": "string"
          },
          "BankAccountID": {
            "type": "integer"
          },
          "ReInvoiceID": {
            "type": "integer"
          },
          "DeliveryName": {
            "type": "string"
          },
          "ProjectID": {
            "type": "integer"
          },
          "IsSentToPayment": {
            "type": "boolean"
          },
          "PrintStatus": {
            "type": "integer"
          },
          "PaymentID": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "InvoiceOriginType": {
            "type": "string"
          },
          "ShippingCity": {
            "type": "string"
          },
          "DeliveryTerm": {
            "type": "string"
          },
          "ShippingAddressLine1": {
            "type": "string"
          },
          "CurrencyCodeID": {
            "type": "integer"
          },
          "InvoiceAddressLine1": {
            "type": "string"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "Credited": {
            "type": "boolean"
          },
          "SupplierOrgNumber": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "Comment": {
            "type": "string"
          },
          "Payment": {
            "type": "string"
          },
          "InvoiceCountry": {
            "type": "string"
          },
          "InvoiceCountryCode": {
            "type": "string"
          },
          "InvoicePostalCode": {
            "type": "string"
          },
          "CreditDays": {
            "type": "integer"
          },
          "CustomerOrgNumber": {
            "type": "string"
          },
          "SupplierID": {
            "type": "integer"
          },
          "InvoiceAddressLine3": {
            "type": "string"
          },
          "InternalNote": {
            "type": "string"
          },
          "ShippingCountry": {
            "type": "string"
          },
          "Payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Payment"
            }
          },
          "JournalEntry": {
            "$ref": "#/components/schemas/JournalEntry"
          },
          "DefaultDimensions": {
            "$ref": "#/components/schemas/Dimensions"
          },
          "Supplier": {
            "$ref": "#/components/schemas/Supplier"
          },
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SupplierInvoiceItem"
            }
          },
          "ReInvoice": {
            "$ref": "#/components/schemas/ReInvoice"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "SupplierInvoiceItem": {
        "type": "object",
        "properties": {
          "SortIndex": {
            "type": "integer"
          },
          "PriceSetByUser": {
            "type": "boolean"
          },
          "DimensionsID": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "Unit": {
            "type": "string"
          },
          "ProductID": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "VatTypeID": {
            "type": "integer"
          },
          "CalculateGrossPriceBasedOnNetPrice": {
            "type": "boolean"
          },
          "ItemText": {
            "type": "string"
          },
          "CurrencyCodeID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "Comment": {
            "type": "string"
          },
          "AccountingCost": {
            "type": "string"
          },
          "SupplierInvoiceID": {
            "type": "integer"
          },
          "Dimensions": {
            "$ref": "#/components/schemas/Dimensions"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "VatCodeGroup": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "No": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "VatDeduction": {
        "type": "object",
        "properties": {
          "VatDeductionGroupID": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "DeductionPercent": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "VatDeductionGroup": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "VatPost": {
        "type": "object",
        "properties": {
          "HasTaxAmount": {
            "type": "boolean"
          },
          "HasTaxBasis": {
            "type": "boolean"
          },
          "Name": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ReportAsNegativeAmount": {
            "type": "boolean"
          },
          "No": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "VatCodeGroupID": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "VatReport": {
        "type": "object",
        "properties": {
          "VatReportTypeID": {
            "type": "integer"
          },
          "Title": {
            "type": "string"
          },
          "JournalEntryID": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ExternalRefNo": {
            "type": "string"
          },
          "InternalComment": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "TerminPeriodID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "Comment": {
            "type": "string"
          },
          "VatReportArchivedSummaryID": {
            "type": "integer"
          },
          "VatReportType": {
            "$ref": "#/components/schemas/VatReportType"
          },
          "JournalEntry": {
            "$ref": "#/components/schemas/JournalEntry"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "VatReportArchivedSummary": {
        "type": "object",
        "properties": {
          "PaymentPeriod": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ReportName": {
            "type": "string"
          },
          "SummaryHeader": {
            "type": "string"
          },
          "PaymentYear": {
            "type": "integer"
          },
          "PaymentToDescription": {
            "type": "string"
          },
          "PaymentID": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "PaymentBankAccountNumber": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "VatReportReference": {
        "type": "object",
        "properties": {
          "AccountID": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "VatTypeID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "VatPostID": {
            "type": "integer"
          },
          "Account": {
            "$ref": "#/components/schemas/Account"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "VatReportType": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "VatType": {
        "type": "object",
        "properties": {
          "OutputVat": {
            "type": "boolean"
          },
          "Locked": {
            "type": "boolean"
          },
          "VatCode": {
            "type": "string"
          },
          "Visible": {
            "type": "boolean"
          },
          "Name": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "Alias": {
            "type": "string"
          },
          "DirectJournalEntryOnly": {
            "type": "boolean"
          },
          "VatCodeGroupingValue": {
            "type": "string"
          },
          "VatTypeSetupID": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "ReversedTaxDutyVat": {
            "type": "boolean"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "IncomingAccountID": {
            "type": "integer"
          },
          "CreatedBy": {
            "type": "string"
          },
          "VatCodeGroupID": {
            "type": "integer"
          },
          "OutgoingAccountID": {
            "type": "integer"
          },
          "AvailableInModules": {
            "type": "boolean"
          },
          "InUse": {
            "type": "boolean"
          },
          "IncomingAccount": {
            "$ref": "#/components/schemas/Account"
          },
          "OutgoingAccount": {
            "$ref": "#/components/schemas/Account"
          },
          "VatCodeGroup": {
            "$ref": "#/components/schemas/VatCodeGroup"
          },
          "VatReportReferences": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VatReportReference"
            }
          },
          "VatTypePercentages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VatTypePercentage"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "VatTypePercentage": {
        "type": "object",
        "properties": {
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "VatTypeID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "EntityValidationRule": {
        "type": "object",
        "properties": {
          "Message": {
            "type": "string"
          },
          "Value": {
            "type": "string"
          },
          "SyncKey": {
            "type": "string"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ChangedByCompany": {
            "type": "boolean"
          },
          "Level": {
            "type": "string"
          },
          "PropertyName": {
            "type": "string"
          },
          "EntityType": {
            "type": "string"
          },
          "Operator": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "Operation": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "System": {
            "type": "boolean"
          },
          "OnConflict": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "EntityValidationRuleTemplate": {
        "type": "object",
        "properties": {
          "Message": {
            "type": "string"
          },
          "Value": {
            "type": "string"
          },
          "SyncKey": {
            "type": "string"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ChangedByCompany": {
            "type": "boolean"
          },
          "Level": {
            "type": "string"
          },
          "PropertyName": {
            "type": "string"
          },
          "EntityType": {
            "type": "string"
          },
          "Operator": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "Operation": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "System": {
            "type": "boolean"
          },
          "OnConflict": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "ComplexValidationRule": {
        "type": "object",
        "properties": {
          "Message": {
            "type": "string"
          },
          "SyncKey": {
            "type": "string"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ChangedByCompany": {
            "type": "boolean"
          },
          "Level": {
            "type": "string"
          },
          "EntityType": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "ValidationCode": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "Operation": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "System": {
            "type": "boolean"
          },
          "OnConflict": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "ComplexValidationRuleTemplate": {
        "type": "object",
        "properties": {
          "Message": {
            "type": "string"
          },
          "SyncKey": {
            "type": "string"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ChangedByCompany": {
            "type": "boolean"
          },
          "Level": {
            "type": "string"
          },
          "EntityType": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "ValidationCode": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "Operation": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "System": {
            "type": "boolean"
          },
          "OnConflict": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "CustomField": {
        "type": "object",
        "properties": {
          "ModelID": {
            "type": "integer"
          },
          "Name": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "DataType": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "Nullable": {
            "type": "boolean"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "ValueList": {
        "type": "object",
        "properties": {
          "Code": {
            "type": "string"
          },
          "Description": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValueItem"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "ValueItem": {
        "type": "object",
        "properties": {
          "Code": {
            "type": "string"
          },
          "Description": {
            "type": "string"
          },
          "Value": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ValueListID": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "Index": {
            "type": "integer"
          },
          "ValueList": {
            "$ref": "#/components/schemas/ValueList"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "ComponentLayoutDto": {
        "type": "object",
        "properties": {
          "Url": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "BaseEntity": {
            "type": "string"
          },
          "Fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FieldLayoutDto"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "FieldLayoutDto": {
        "type": "object",
        "properties": {
          "Section": {
            "type": "integer"
          },
          "Property": {
            "type": "string"
          },
          "Label": {
            "type": "string"
          },
          "Hidden": {
            "type": "boolean"
          },
          "Sectionheader": {
            "type": "string"
          },
          "LineBreak": {
            "type": "boolean"
          },
          "Url": {
            "type": "string"
          },
          "Description": {
            "type": "string"
          },
          "DisplayField": {
            "type": "string"
          },
          "Width": {
            "type": "string"
          },
          "Legend": {
            "type": "string"
          },
          "FieldSet": {
            "type": "integer"
          },
          "Placement": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "EntityType": {
            "type": "string"
          },
          "HelpText": {
            "type": "string"
          },
          "FieldType": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "Alignment": {
            "type": "string"
          },
          "ValueList": {
            "type": "string"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "ComponentLayoutID": {
            "type": "integer"
          },
          "Placeholder": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "ReadOnly": {
            "type": "boolean"
          },
          "LookupEntityType": {
            "type": "string"
          },
          "Combo": {
            "type": "integer"
          },
          "Options": {
            "type": "string"
          },
          "LookupField": {
            "type": "boolean"
          },
          "Validations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntityValidationRule"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "AssignmentDetails": {
        "type": "object",
        "properties": {
          "Message": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "TimeSheet": {
        "type": "object",
        "properties": {
          "Workflow": {
            "type": "string"
          },
          "Relation": {
            "$ref": "#/components/schemas/WorkRelation"
          },
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TimeSheetItem"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "TimeSheetItem": {
        "type": "object",
        "properties": {
          "IsWeekend": {
            "type": "boolean"
          },
          "WeekNumber": {
            "type": "integer"
          },
          "Status": {
            "type": "string"
          },
          "Workflow": {
            "type": "string"
          },
          "WeekDay": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "WorkBalanceDto": {
        "type": "object",
        "properties": {
          "SumOvertime": {
            "type": "integer"
          },
          "Minutes": {
            "type": "integer"
          },
          "Description": {
            "type": "string"
          },
          "Balancetype": {
            "type": "string"
          },
          "IsStartBalance": {
            "type": "boolean"
          },
          "LastDayExpected": {
            "type": "integer"
          },
          "WorkRelationID": {
            "type": "integer"
          },
          "ValidTimeOff": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "LastDayActual": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "ActualMinutes": {
            "type": "integer"
          },
          "ExpectedMinutes": {
            "type": "integer"
          },
          "Previous": {
            "$ref": "#/components/schemas/BalanceInfo"
          },
          "Details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FlexDetail"
            }
          },
          "WorkRelation": {
            "$ref": "#/components/schemas/WorkRelation"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "BalanceInfo": {
        "type": "object",
        "properties": {
          "Minutes": {
            "type": "integer"
          },
          "Description": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "FlexDetail": {
        "type": "object",
        "properties": {
          "IsWeekend": {
            "type": "boolean"
          },
          "ValidTimeOff": {
            "type": "integer"
          },
          "WorkedMinutes": {
            "type": "integer"
          },
          "ExpectedMinutes": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "ContactSearchServiceResponse": {
        "type": "object",
        "properties": {
          "Success": {
            "type": "boolean"
          },
          "ErrorMessage": {
            "type": "string"
          },
          "ErrorCode": {
            "type": "integer"
          },
          "ObjectName": {
            "type": "string"
          },
          "Method": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "InvoicesAndRemindersReadyToRemind": {
        "type": "object",
        "properties": {
          "CustomerID": {
            "type": "integer"
          },
          "CustomerInvoiceID": {
            "type": "integer"
          },
          "CustomerNumber": {
            "type": "integer"
          },
          "CustomerName": {
            "type": "string"
          },
          "InvoiceNumber": {
            "type": "integer"
          },
          "CurrencyCodeCode": {
            "type": "string"
          },
          "StatusCode": {
            "type": "integer"
          },
          "EmailAddress": {
            "type": "string"
          },
          "DontSendReminders": {
            "type": "boolean"
          },
          "CustomerInvoiceReminderID": {
            "type": "integer"
          },
          "ExternalReference": {
            "type": "string"
          },
          "ReminderNumber": {
            "type": "integer"
          },
          "CurrencyCodeID": {
            "type": "integer"
          },
          "CurrencyCodeShortCode": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "TradeHeaderCalculationSummary": {
        "type": "object",
        "properties": {
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "VatCalculationSummary": {
        "type": "object",
        "properties": {
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "InvoicePaymentData": {
        "type": "object",
        "properties": {
          "BankChargeAccountID": {
            "type": "integer"
          },
          "AccountID": {
            "type": "integer"
          },
          "DimensionsID": {
            "type": "integer"
          },
          "FromBankAccountID": {
            "type": "integer"
          },
          "AgioAccountID": {
            "type": "integer"
          },
          "PaymentID": {
            "type": "string"
          },
          "CurrencyCodeID": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "InvoiceSummary": {
        "type": "object",
        "properties": {
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "CustomerNoAndName": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "Number": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "InvoicePayment": {
        "type": "object",
        "properties": {
          "Description": {
            "type": "string"
          },
          "JournalEntryNumber": {
            "type": "string"
          },
          "JournalEntryID": {
            "type": "integer"
          },
          "JournalEntryLineID": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "OrderOffer": {
        "type": "object",
        "properties": {
          "Message": {
            "type": "string"
          },
          "OrderId": {
            "type": "string"
          },
          "Status": {
            "type": "string"
          },
          "Reasons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Reason"
            }
          },
          "PurchaseAmount": {
            "$ref": "#/components/schemas/AmountDetail"
          },
          "InvoiceAmount": {
            "$ref": "#/components/schemas/AmountDetail"
          },
          "FinancialCost": {
            "$ref": "#/components/schemas/AmountDetail"
          },
          "Fee": {
            "$ref": "#/components/schemas/AmountDetail"
          },
          "TotalCost": {
            "$ref": "#/components/schemas/AmountDetail"
          },
          "DisbursementAmount": {
            "$ref": "#/components/schemas/AmountDetail"
          },
          "Limits": {
            "$ref": "#/components/schemas/Limits"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Reason": {
        "type": "object",
        "properties": {
          "ReasonDescription": {
            "type": "string"
          },
          "ReasonHelpLink": {
            "type": "string"
          },
          "ReasonCode": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "AmountDetail": {
        "type": "object",
        "properties": {
          "Currency": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Limits": {
        "type": "object",
        "properties": {
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "AmeldingAgaAndTaxSums": {
        "type": "object",
        "properties": {
          "AccountNumber": {
            "type": "string"
          },
          "MessageID": {
            "type": "string"
          },
          "KIDEmploymentTax": {
            "type": "string"
          },
          "KIDGarnishment": {
            "type": "string"
          },
          "KIDFinancialTax": {
            "type": "string"
          },
          "KIDTaxDraw": {
            "type": "string"
          },
          "period": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "PayrollRunInAmeldingPeriod": {
        "type": "object",
        "properties": {
          "PayrollrunDescription": {
            "type": "string"
          },
          "CanGenerateAddition": {
            "type": "boolean"
          },
          "PayrollrunID": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "PayAgaTaxDTO": {
        "type": "object",
        "properties": {
          "correctPennyDiff": {
            "type": "boolean"
          },
          "payTaxDraw": {
            "type": "boolean"
          },
          "payFinancialTax": {
            "type": "boolean"
          },
          "payGarnishment": {
            "type": "boolean"
          },
          "payAga": {
            "type": "boolean"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "AmeldingSumUp": {
        "type": "object",
        "properties": {
          "entities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AmeldingEntity"
            }
          },
          "agadetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AGADetails"
            }
          },
          "totals": {
            "$ref": "#/components/schemas/Totals"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "AmeldingEntity": {
        "type": "object",
        "properties": {
          "sums": {
            "$ref": "#/components/schemas/Sums"
          },
          "employees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Employees"
            }
          },
          "transactionTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransactionTypes"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Sums": {
        "type": "object",
        "properties": {
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Employees": {
        "type": "object",
        "properties": {
          "arbeidsforhold": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Employments"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Employments": {
        "type": "object",
        "properties": {
          "permisjon": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmploymentLeaves"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "EmploymentLeaves": {
        "type": "object",
        "properties": {
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "TransactionTypes": {
        "type": "object",
        "properties": {
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "AGADetails": {
        "type": "object",
        "properties": {
          "sectorName": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "zoneName": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Totals": {
        "type": "object",
        "properties": {
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "AnnualStatement": {
        "type": "object",
        "properties": {
          "EmployerTaxMandatory": {
            "type": "boolean"
          },
          "Year": {
            "type": "integer"
          },
          "EmployeeName": {
            "type": "string"
          },
          "EmployerPhoneNumber": {
            "type": "string"
          },
          "EmployerEmail": {
            "type": "string"
          },
          "EmployerOrgNr": {
            "type": "string"
          },
          "EmployerCountry": {
            "type": "string"
          },
          "EmployerName": {
            "type": "string"
          },
          "EmployeeMunicipalNumber": {
            "type": "string"
          },
          "EmployeeNumber": {
            "type": "integer"
          },
          "EmployeeCity": {
            "type": "string"
          },
          "EmployerWebAddress": {
            "type": "string"
          },
          "EmployerCity": {
            "type": "string"
          },
          "EmployeePostCode": {
            "type": "string"
          },
          "EmployeeMunicipalName": {
            "type": "string"
          },
          "EmployerCountryCode": {
            "type": "string"
          },
          "EmployerAddress": {
            "type": "string"
          },
          "EmployeeAddress": {
            "type": "string"
          },
          "EmployerPostCode": {
            "type": "string"
          },
          "EmployeeSSn": {
            "type": "string"
          },
          "Contributions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnnualStatementLine"
            }
          },
          "PensionOrBenefits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnnualStatementLine"
            }
          },
          "Deductions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnnualStatementLine"
            }
          },
          "Draws": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnnualStatementLine"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "AnnualStatementLine": {
        "type": "object",
        "properties": {
          "LineIndex": {
            "type": "integer"
          },
          "Description": {
            "type": "string"
          },
          "IsDeduction": {
            "type": "boolean"
          },
          "TaxReturnPost": {
            "type": "string"
          },
          "SupplementPackageName": {
            "type": "string"
          },
          "Supplements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SupplementInfo"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "SupplementInfo": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "WageTypeSupplementID": {
            "type": "integer"
          },
          "ValueBool": {
            "type": "boolean"
          },
          "ValueString": {
            "type": "string"
          },
          "ValueType": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "AnnualStatementReportSetup": {
        "type": "object",
        "properties": {
          "Mail": {
            "$ref": "#/components/schemas/AnnualStatementEmailInfo"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "AnnualStatementEmailInfo": {
        "type": "object",
        "properties": {
          "Message": {
            "type": "string"
          },
          "Subject": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "HandleState": {
        "type": "object",
        "properties": {
          "inState": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "TaxCardReadStatus": {
        "type": "object",
        "properties": {
          "IsJob": {
            "type": "boolean"
          },
          "mainStatus": {
            "type": "string"
          },
          "Title": {
            "type": "string"
          },
          "Text": {
            "type": "string"
          },
          "employeestatus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmployeeStatus"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "EmployeeStatus": {
        "type": "object",
        "properties": {
          "year": {
            "type": "integer"
          },
          "ssn": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "employeeNumber": {
            "type": "integer"
          },
          "info": {
            "type": "string"
          },
          "employeeID": {
            "type": "integer"
          },
          "changedFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FieldsChanged"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "FieldsChanged": {
        "type": "object",
        "properties": {
          "valFrom": {
            "type": "string"
          },
          "fieldName": {
            "type": "string"
          },
          "valTo": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "EmploymentHistoryRecord": {
        "type": "object",
        "properties": {
          "RegulativeStepNr": {
            "type": "integer"
          },
          "RegulativeGroupID": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Paycheck": {
        "type": "object",
        "properties": {
          "employee": {
            "$ref": "#/components/schemas/Employee"
          },
          "payroll": {
            "$ref": "#/components/schemas/PayrollRun"
          },
          "transactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SalaryTransaction"
            }
          },
          "sumOnPay": {
            "$ref": "#/components/schemas/SumOnRun"
          },
          "sumOnYear": {
            "$ref": "#/components/schemas/SumOnYear"
          },
          "sumVacationLastYear": {
            "$ref": "#/components/schemas/VacationPayLastYear"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "SumOnRun": {
        "type": "object",
        "properties": {
          "employeeID": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "SumOnYear": {
        "type": "object",
        "properties": {
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "VacationPayLastYear": {
        "type": "object",
        "properties": {
          "employeeID": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "SalaryTransactionPay": {
        "type": "object",
        "properties": {
          "CompanyAddress": {
            "type": "string"
          },
          "TaxBankAccountID": {
            "type": "integer"
          },
          "CompanyPostalCode": {
            "type": "string"
          },
          "CompanyBankAccountID": {
            "type": "integer"
          },
          "CompanyName": {
            "type": "string"
          },
          "CompanyCity": {
            "type": "string"
          },
          "SalaryBankAccountID": {
            "type": "integer"
          },
          "PayList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SalaryTransactionPayLine"
            }
          },
          "SalaryBalancePayList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SalaryBalancePayLine"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "SalaryTransactionPayLine": {
        "type": "object",
        "properties": {
          "EmployeeName": {
            "type": "string"
          },
          "EmployeeNumber": {
            "type": "integer"
          },
          "City": {
            "type": "string"
          },
          "Address": {
            "type": "string"
          },
          "PostalCode": {
            "type": "string"
          },
          "Account": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "SalaryBalancePayLine": {
        "type": "object",
        "properties": {
          "Text": {
            "type": "string"
          },
          "Account": {
            "type": "string"
          },
          "Kid": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "PostingSummary": {
        "type": "object",
        "properties": {
          "SubEntity": {
            "$ref": "#/components/schemas/SubEntity"
          },
          "PayrollRun": {
            "$ref": "#/components/schemas/PayrollRun"
          },
          "PostList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JournalEntryLine"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "PaycheckReportSetup": {
        "type": "object",
        "properties": {
          "Mail": {
            "$ref": "#/components/schemas/PaycheckEmailInfo"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "PaycheckEmailInfo": {
        "type": "object",
        "properties": {
          "Message": {
            "type": "string"
          },
          "Subject": {
            "type": "string"
          },
          "ReportID": {
            "type": "integer"
          },
          "GroupByWageType": {
            "type": "boolean"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "WorkItemToSalary": {
        "type": "object",
        "properties": {
          "PayrollRunID": {
            "type": "integer"
          },
          "WageType": {
            "$ref": "#/components/schemas/WageType"
          },
          "Employment": {
            "$ref": "#/components/schemas/Employment"
          },
          "WorkItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkItem"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Reconciliation": {
        "type": "object",
        "properties": {
          "BookedPayruns": {
            "type": "integer"
          },
          "Year": {
            "type": "integer"
          },
          "ToPeriod": {
            "type": "integer"
          },
          "FromPeriod": {
            "type": "integer"
          },
          "CreatedPayruns": {
            "type": "integer"
          },
          "CalculatedPayruns": {
            "type": "integer"
          },
          "Groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReconciliationGroup"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "ReconciliationGroup": {
        "type": "object",
        "properties": {
          "AccountNumber": {
            "type": "string"
          },
          "Lines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReconciliationLine"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "ReconciliationLine": {
        "type": "object",
        "properties": {
          "Description": {
            "type": "string"
          },
          "HasEmploymentTax": {
            "type": "boolean"
          },
          "IncomeType": {
            "type": "string"
          },
          "Benefit": {
            "type": "string"
          },
          "WageTypeNumber": {
            "type": "integer"
          },
          "WageTypeName": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "UnionReport": {
        "type": "object",
        "properties": {
          "Year": {
            "type": "integer"
          },
          "Summaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UnionSummary"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "UnionSummary": {
        "type": "object",
        "properties": {
          "SupplierID": {
            "type": "integer"
          },
          "Supplier": {
            "$ref": "#/components/schemas/Supplier"
          },
          "Members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UnionMember"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "UnionMember": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "MemberNumber": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "SalaryTransactionSums": {
        "type": "object",
        "properties": {
          "Payrun": {
            "type": "integer"
          },
          "Employee": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "SalaryTransactionPeriodSums": {
        "type": "object",
        "properties": {
          "OrgNumber": {
            "type": "string"
          },
          "Year": {
            "type": "integer"
          },
          "ToPeriod": {
            "type": "integer"
          },
          "FromPeriod": {
            "type": "integer"
          },
          "AgaZone": {
            "type": "string"
          },
          "MunicipalName": {
            "type": "string"
          },
          "Sums": {
            "$ref": "#/components/schemas/SalaryTransactionSums"
          },
          "Aga": {
            "$ref": "#/components/schemas/AGACalculation"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "code": {
        "type": "object",
        "properties": {
          "postnr": {
            "type": "string"
          },
          "gmlcode": {
            "type": "string"
          },
          "skatteOgAvgiftregel": {
            "type": "string"
          },
          "kunfranav": {
            "type": "string"
          },
          "gyldigtil": {
            "type": "string"
          },
          "fordel": {
            "type": "string"
          },
          "uninavn": {
            "type": "string"
          },
          "gyldigfom": {
            "type": "string"
          },
          "utloeserArbeidsgiveravgift": {
            "type": "string"
          },
          "inngaarIGrunnlagForTrekk": {
            "type": "string"
          },
          "loennsinntekt": {
            "$ref": "#/components/schemas/Loennsinntekt"
          },
          "ytelseFraOffentlige": {
            "$ref": "#/components/schemas/YtelseFraOffentlige"
          },
          "pensjonEllerTrygd": {
            "$ref": "#/components/schemas/PensjonEllerTrygd"
          },
          "naeringsinntekt": {
            "$ref": "#/components/schemas/Naeringsinntekt"
          },
          "fradrag": {
            "$ref": "#/components/schemas/Fradrag"
          },
          "forskuddstrekk": {
            "$ref": "#/components/schemas/Forskuddstrekk"
          },
          "utleggstrekk": {
            "$ref": "#/components/schemas/Utleggstrekk"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Loennsinntekt": {
        "type": "object",
        "properties": {
          "antallSpecified": {
            "type": "boolean"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "YtelseFraOffentlige": {
        "type": "object",
        "properties": {
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "PensjonEllerTrygd": {
        "type": "object",
        "properties": {
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Naeringsinntekt": {
        "type": "object",
        "properties": {
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Fradrag": {
        "type": "object",
        "properties": {
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Forskuddstrekk": {
        "type": "object",
        "properties": {
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Utleggstrekk": {
        "type": "object",
        "properties": {
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "IActionResult": {
        "type": "object",
        "properties": {
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "CreateCompanyDetails": {
        "type": "object",
        "properties": {
          "IsTemplate": {
            "type": "boolean"
          },
          "CopyFiles": {
            "type": "boolean"
          },
          "ContractID": {
            "type": "integer"
          },
          "CompanyName": {
            "type": "string"
          },
          "ContractType": {
            "type": "integer"
          },
          "ProductNames": {
            "type": "string"
          },
          "TemplateCompanyKey": {
            "type": "string"
          },
          "IsTest": {
            "type": "boolean"
          },
          "LicenseKey": {
            "type": "string"
          },
          "CompanySettings": {
            "$ref": "#/components/schemas/CompanySettings"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "UserDto": {
        "type": "object",
        "properties": {
          "Email": {
            "type": "string"
          },
          "PermissionHandling": {
            "type": "string"
          },
          "Protected": {
            "type": "boolean"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "PhoneNumber": {
            "type": "string"
          },
          "IsAutobankAdmin": {
            "type": "boolean"
          },
          "UserName": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "DisplayName": {
            "type": "string"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "GlobalIdentity": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "BankIntegrationUserName": {
            "type": "string"
          },
          "HasAgreedToImportDisclaimer": {
            "type": "boolean"
          },
          "License": {
            "$ref": "#/components/schemas/UserLicenseInformation"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "UserLicenseInformation": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "UserLicenseKey": {
            "type": "string"
          },
          "GlobalIdentity": {
            "type": "string"
          },
          "Comment": {
            "type": "string"
          },
          "CustomerAgreement": {
            "$ref": "#/components/schemas/CustomerLicenseAgreementInfo"
          },
          "UserType": {
            "$ref": "#/components/schemas/UserLicenseType"
          },
          "Company": {
            "$ref": "#/components/schemas/CompanyLicenseInfomation"
          },
          "ContractType": {
            "$ref": "#/components/schemas/ContractLicenseType"
          },
          "UserLicenseAgreement": {
            "$ref": "#/components/schemas/LicenseAgreementInfo"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "CustomerLicenseAgreementInfo": {
        "type": "object",
        "properties": {
          "AgreementId": {
            "type": "integer"
          },
          "CanAgreeToLicense": {
            "type": "boolean"
          },
          "HasAgreedToLicense": {
            "type": "boolean"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "UserLicenseType": {
        "type": "object",
        "properties": {
          "TypeName": {
            "type": "string"
          },
          "TypeID": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "CompanyLicenseInfomation": {
        "type": "object",
        "properties": {
          "ContactEmail": {
            "type": "string"
          },
          "Key": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "StatusCode": {
            "type": "string"
          },
          "ContractID": {
            "type": "integer"
          },
          "ID": {
            "type": "integer"
          },
          "ContactPerson": {
            "type": "string"
          },
          "Agency": {
            "$ref": "#/components/schemas/Agency"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Agency": {
        "type": "object",
        "properties": {
          "CompanyKey": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "ContractLicenseType": {
        "type": "object",
        "properties": {
          "TypeName": {
            "type": "string"
          },
          "TypeID": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "LicenseAgreementInfo": {
        "type": "object",
        "properties": {
          "AgreementId": {
            "type": "integer"
          },
          "HasAgreedToLicense": {
            "type": "boolean"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "CreateBankUserDTO": {
        "type": "object",
        "properties": {
          "Phone": {
            "type": "string"
          },
          "AdminPassword": {
            "type": "string"
          },
          "IsAdmin": {
            "type": "boolean"
          },
          "AdminUserId": {
            "type": "integer"
          },
          "Password": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "ChangeAutobankPasswordDTO": {
        "type": "object",
        "properties": {
          "Password": {
            "type": "string"
          },
          "NewPassword": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "ActiveNumberSeriesTask": {
        "type": "object",
        "properties": {
          "NumberSeriesTask": {
            "$ref": "#/components/schemas/NumberSeriesTask"
          },
          "DefaultNumberSeries": {
            "$ref": "#/components/schemas/NumberSeries"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "SplitFileResult": {
        "type": "object",
        "properties": {
          "FirstPart": {
            "$ref": "#/components/schemas/File"
          },
          "SecondPart": {
            "$ref": "#/components/schemas/File"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "SplitFileMultipeResult": {
        "type": "object",
        "properties": {
          "Parts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/File"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "FreeAmountSummary": {
        "type": "object",
        "properties": {
          "RestFreeAmount": {
            "type": "integer"
          },
          "SubEntitiesSums": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubEntityAgaSums"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "SubEntityAgaSums": {
        "type": "object",
        "properties": {
          "SubEntity": {
            "$ref": "#/components/schemas/SubEntity"
          },
          "Sums": {
            "$ref": "#/components/schemas/AGASums"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "AGASums": {
        "type": "object",
        "properties": {
          "MaxFreeAmount": {
            "type": "integer"
          },
          "GrantSum": {
            "type": "integer"
          },
          "UsedFreeAmount": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "AuthenticationChallengeBE": {
        "type": "object",
        "properties": {
          "Message": {
            "type": "string"
          },
          "Status": {
            "type": "string"
          },
          "ExtensionData": {
            "$ref": "#/components/schemas/ExtensionDataObject"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "ExtensionDataObject": {
        "type": "object",
        "properties": {
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "AltinnAuthRequest": {
        "type": "object",
        "properties": {
          "UserID": {
            "type": "string"
          },
          "UserPassword": {
            "type": "string"
          },
          "PreferredLogin": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "A06Options": {
        "type": "object",
        "properties": {
          "Year": {
            "type": "integer"
          },
          "ToPeriod": {
            "type": "string"
          },
          "FromPeriod": {
            "type": "string"
          },
          "IncludeInfoPerPerson": {
            "type": "boolean"
          },
          "ReportType": {
            "type": "string"
          },
          "IncludeEmployments": {
            "type": "boolean"
          },
          "IncludeIncome": {
            "type": "boolean"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "A07Response": {
        "type": "object",
        "properties": {
          "mainStatus": {
            "type": "string"
          },
          "Data": {
            "type": "string"
          },
          "Title": {
            "type": "string"
          },
          "DataName": {
            "type": "string"
          },
          "DataType": {
            "type": "string"
          },
          "Text": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "SelfEmployed": {
        "type": "object",
        "properties": {
          "year": {
            "type": "integer"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SelfEmployedItem"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "SelfEmployedItem": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "supplierID": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "SetIntegrationDataDto": {
        "type": "object",
        "properties": {
          "ExternalId": {
            "type": "string"
          },
          "IntegrationKey": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "CurrencyRateData": {
        "type": "object",
        "properties": {
          "IsOverrideRate": {
            "type": "boolean"
          },
          "FromCurrencyCode": {
            "$ref": "#/components/schemas/CurrencyCode"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "EmailDTO": {
        "type": "object",
        "properties": {
          "Message": {
            "type": "string"
          },
          "FromAddress": {
            "type": "string"
          },
          "Subject": {
            "type": "string"
          },
          "CopyAddress": {
            "type": "string"
          },
          "Format": {
            "type": "string"
          },
          "ReportID": {
            "type": "integer"
          },
          "Parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportParameter"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "ReportParameter": {
        "type": "object",
        "properties": {
          "Value": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "DistributionPlanElementValidation": {
        "type": "object",
        "properties": {
          "ElementType": {
            "type": "string"
          },
          "IsValid": {
            "type": "boolean"
          },
          "ElementTypeName": {
            "type": "string"
          },
          "Priority": {
            "type": "integer"
          },
          "PlanElement": {
            "$ref": "#/components/schemas/DistributionPlanElement"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "SendEmail": {
        "type": "object",
        "properties": {
          "Message": {
            "type": "string"
          },
          "EntityType": {
            "type": "string"
          },
          "FromAddress": {
            "type": "string"
          },
          "Subject": {
            "type": "string"
          },
          "CopyAddress": {
            "type": "string"
          },
          "ReportName": {
            "type": "string"
          },
          "ExternalReference": {
            "type": "string"
          },
          "ReportID": {
            "type": "integer"
          },
          "Localization": {
            "type": "string"
          },
          "EntityID": {
            "type": "integer"
          },
          "Attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SendEmailAttachment"
            }
          },
          "Parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportParameter"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "SendEmailAttachment": {
        "type": "object",
        "properties": {
          "FileName": {
            "type": "string"
          },
          "Attachment": {
            "type": "string"
          },
          "FileID": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "RssList": {
        "type": "object",
        "properties": {
          "Url": {
            "type": "string"
          },
          "Description": {
            "type": "string"
          },
          "Title": {
            "type": "string"
          },
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RssItem"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "RssItem": {
        "type": "object",
        "properties": {
          "Category": {
            "type": "string"
          },
          "Guid": {
            "type": "string"
          },
          "Description": {
            "type": "string"
          },
          "Link": {
            "type": "string"
          },
          "Title": {
            "type": "string"
          },
          "PubDate": {
            "type": "string"
          },
          "Enclosure": {
            "$ref": "#/components/schemas/Enclosure"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "Enclosure": {
        "type": "object",
        "properties": {
          "Url": {
            "type": "string"
          },
          "Type": {
            "type": "string"
          },
          "Length": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "SharingUpdates": {
        "type": "object",
        "properties": {
          "SharingStatusUpdates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SharingStatusUpdate"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "SharingStatusUpdate": {
        "type": "object",
        "properties": {
          "Status": {
            "type": "string"
          },
          "SharingId": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "TeamReport": {
        "type": "object",
        "properties": {
          "Team": {
            "$ref": "#/components/schemas/Team"
          },
          "Members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MemberDetails"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "MemberDetails": {
        "type": "object",
        "properties": {
          "TotalBalance": {
            "type": "integer"
          },
          "Name": {
            "type": "string"
          },
          "MinutesWorked": {
            "type": "integer"
          },
          "ReportBalance": {
            "type": "integer"
          },
          "ExpectedMinutes": {
            "type": "integer"
          },
          "WorkRelation": {
            "$ref": "#/components/schemas/WorkRelation"
          },
          "TimeOff": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FlexDetail"
            }
          },
          "MissingDays": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FlexDetail"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "TeamPositionDto": {
        "type": "object",
        "properties": {
          "Position": {
            "type": "string"
          },
          "PositionName": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "EHFCustomer": {
        "type": "object",
        "properties": {
          "contactemail": {
            "type": "string"
          },
          "orgno": {
            "type": "string"
          },
          "orgname": {
            "type": "string"
          },
          "contactname": {
            "type": "string"
          },
          "contactphone": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "ServiceMetadataDto": {
        "type": "object",
        "properties": {
          "SupportEmail": {
            "type": "string"
          },
          "ServiceName": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "AccountUsageReference": {
        "type": "object",
        "properties": {
          "Entity": {
            "type": "string"
          },
          "Info": {
            "type": "string"
          },
          "EntityID": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "MandatoryDimensionAccountReport": {
        "type": "object",
        "properties": {
          "journalEntryLineDraftID": {
            "type": "integer"
          },
          "MissingRequiredDimensionsMessage": {
            "type": "string"
          },
          "AccountNumber": {
            "type": "string"
          },
          "MissingOnlyWarningsDimensionsMessage": {
            "type": "string"
          },
          "AccountID": {
            "type": "integer"
          },
          "DimensionsID": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "Deleted": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "UpdatedBy": {
            "type": "string"
          },
          "CreatedBy": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "AccountDimension": {
        "type": "object",
        "properties": {
          "AccountNumber": {
            "type": "integer"
          },
          "AccountID": {
            "type": "integer"
          },
          "DimensionsID": {
            "type": "integer"
          },
          "Dimensions": {
            "$ref": "#/components/schemas/Dimensions"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "AssetReportDTO": {
        "type": "object",
        "properties": {
          "Lifetime": {
            "type": "integer"
          },
          "Name": {
            "type": "string"
          },
          "GroupName": {
            "type": "string"
          },
          "Number": {
            "type": "integer"
          },
          "DepreciationAccountNumber": {
            "type": "integer"
          },
          "BalanceAccountName": {
            "type": "string"
          },
          "GroupCode": {
            "type": "string"
          },
          "BalanceAccountNumber": {
            "type": "integer"
          },
          "Lines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetReportLineDTO"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "AssetReportLineDTO": {
        "type": "object",
        "properties": {
          "Type": {
            "type": "string"
          },
          "TypeID": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "BankBalanceDto": {
        "type": "object",
        "properties": {
          "AccountNumber": {
            "type": "string"
          },
          "Comment": {
            "type": "string"
          },
          "IsTestData": {
            "type": "boolean"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "BankData": {
        "type": "object",
        "properties": {
          "AccountNumber": {
            "type": "string"
          },
          "IBAN": {
            "type": "string"
          },
          "Bank": {
            "$ref": "#/components/schemas/Bank"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "CreateBankIntegrationDTO": {
        "type": "object",
        "properties": {
          "Email": {
            "type": "string"
          },
          "Phone": {
            "type": "string"
          },
          "BankApproval": {
            "type": "boolean"
          },
          "TuserName": {
            "type": "string"
          },
          "IsBankStatement": {
            "type": "boolean"
          },
          "BankAccountID": {
            "type": "integer"
          },
          "Bank": {
            "type": "string"
          },
          "UserName": {
            "type": "string"
          },
          "BankAcceptance": {
            "type": "boolean"
          },
          "IsInbound": {
            "type": "boolean"
          },
          "DisplayName": {
            "type": "string"
          },
          "ServiceProvider": {
            "type": "integer"
          },
          "Password": {
            "type": "string"
          },
          "RequireTwoStage": {
            "type": "boolean"
          },
          "IsBankBalance": {
            "type": "boolean"
          },
          "IsOutgoing": {
            "type": "boolean"
          },
          "BankAccounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BankAccountDTO"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "BankAccountDTO": {
        "type": "object",
        "properties": {
          "BBAN": {
            "type": "string"
          },
          "IsBankStatement": {
            "type": "boolean"
          },
          "IBAN": {
            "type": "string"
          },
          "IsInbound": {
            "type": "boolean"
          },
          "Bic": {
            "type": "string"
          },
          "IsBankBalance": {
            "type": "boolean"
          },
          "IsOutgoing": {
            "type": "boolean"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "ZdataUpdateBankProperties": {
        "type": "object",
        "properties": {
          "IsBankStatement": {
            "type": "boolean"
          },
          "ServiceID": {
            "type": "string"
          },
          "IsInbound": {
            "type": "boolean"
          },
          "Password": {
            "type": "string"
          },
          "IsBankBalance": {
            "type": "boolean"
          },
          "IsOutgoing": {
            "type": "boolean"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "AutobankUserDTO": {
        "type": "object",
        "properties": {
          "UserID": {
            "type": "integer"
          },
          "Phone": {
            "type": "string"
          },
          "IsAdmin": {
            "type": "boolean"
          },
          "Password": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "UpdateServiceStatusDTO": {
        "type": "object",
        "properties": {
          "StatusCode": {
            "type": "string"
          },
          "ServiceID": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "UpdateServiceIDDTO": {
        "type": "object",
        "properties": {
          "ServiceID": {
            "type": "string"
          },
          "NewServiceID": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "BankMatchSuggestion": {
        "type": "object",
        "properties": {
          "Group": {
            "type": "string"
          },
          "BankStatementEntryID": {
            "type": "integer"
          },
          "JournalEntryLineID": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "MatchRequest": {
        "type": "object",
        "properties": {
          "JournalEntries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MatchCandidate"
            }
          },
          "BankEntries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MatchCandidate"
            }
          },
          "Settings": {
            "$ref": "#/components/schemas/MatchSettings"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "MatchCandidate": {
        "type": "object",
        "properties": {
          "Closed": {
            "type": "boolean"
          },
          "IsBankEntry": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "MatchSettings": {
        "type": "object",
        "properties": {
          "MaxDayOffset": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "ReconciliationStatus": {
        "type": "object",
        "properties": {
          "AccountID": {
            "type": "integer"
          },
          "IsReconciled": {
            "type": "boolean"
          },
          "NumberOfItems": {
            "type": "integer"
          },
          "NumberOfUnReconciled": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "BalanceDto": {
        "type": "object",
        "properties": {
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "BankfileFormat": {
        "type": "object",
        "properties": {
          "CustomFormat": {
            "type": "string"
          },
          "IsXml": {
            "type": "boolean"
          },
          "IsFixed": {
            "type": "boolean"
          },
          "Name": {
            "type": "string"
          },
          "SkipRows": {
            "type": "integer"
          },
          "Separator": {
            "type": "string"
          },
          "LinePrefix": {
            "type": "string"
          },
          "FileExtension": {
            "type": "string"
          },
          "Columns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BankfileColumn"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "BankfileColumn": {
        "type": "object",
        "properties": {
          "IsFallBack": {
            "type": "boolean"
          },
          "DataType": {
            "type": "string"
          },
          "Length": {
            "type": "integer"
          },
          "FieldMapping": {
            "type": "string"
          },
          "StartPos": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "JournalSuggestion": {
        "type": "object",
        "properties": {
          "Description": {
            "type": "string"
          },
          "AccountID": {
            "type": "integer"
          },
          "MatchWithEntryID": {
            "type": "integer"
          },
          "BankStatementRuleID": {
            "type": "integer"
          },
          "Account": {
            "$ref": "#/components/schemas/Account"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "ReportRow": {
        "type": "object",
        "properties": {
          "AccountNumber": {
            "type": "integer"
          },
          "AccountYear": {
            "type": "integer"
          },
          "SubGroupNumber": {
            "type": "integer"
          },
          "AccountName": {
            "type": "string"
          },
          "GroupName": {
            "type": "string"
          },
          "IsSubTotal": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer"
          },
          "SubGroupName": {
            "type": "string"
          },
          "GroupNumber": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "BudgetImport": {
        "type": "object",
        "properties": {
          "Budget": {
            "$ref": "#/components/schemas/Budget"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "LiquidityTableDTO": {
        "type": "object",
        "properties": {
          "BankBalanceRefferance": {
            "type": "string"
          },
          "Period": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DetailsDTO"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "DetailsDTO": {
        "type": "object",
        "properties": {
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "JournalEntryData": {
        "type": "object",
        "properties": {
          "DebitVatTypeID": {
            "type": "integer"
          },
          "PostPostJournalEntryLineID": {
            "type": "integer"
          },
          "NumberSeriesTaskID": {
            "type": "integer"
          },
          "Description": {
            "type": "string"
          },
          "CustomerInvoiceID": {
            "type": "integer"
          },
          "CustomerOrderID": {
            "type": "integer"
          },
          "DebitAccountID": {
            "type": "integer"
          },
          "CreditAccountID": {
            "type": "integer"
          },
          "InvoiceNumber": {
            "type": "string"
          },
          "DebitAccountNumber": {
            "type": "integer"
          },
          "JournalEntryID": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "NumberSeriesID": {
            "type": "integer"
          },
          "SupplierInvoiceNo": {
            "type": "string"
          },
          "CurrencyID": {
            "type": "integer"
          },
          "CreditAccountNumber": {
            "type": "integer"
          },
          "JournalEntryNo": {
            "type": "string"
          },
          "CreditVatTypeID": {
            "type": "integer"
          },
          "PaymentID": {
            "type": "string"
          },
          "JournalEntryDataAccrualID": {
            "type": "integer"
          },
          "VatDeductionPercent": {
            "type": "integer"
          },
          "SupplierInvoiceID": {
            "type": "integer"
          },
          "CurrencyCode": {
            "$ref": "#/components/schemas/CurrencyCode"
          },
          "DebitAccount": {
            "$ref": "#/components/schemas/Account"
          },
          "DebitVatType": {
            "$ref": "#/components/schemas/VatType"
          },
          "CreditAccount": {
            "$ref": "#/components/schemas/Account"
          },
          "CreditVatType": {
            "$ref": "#/components/schemas/VatType"
          },
          "Dimensions": {
            "$ref": "#/components/schemas/Dimensions"
          },
          "JournalEntryPaymentData": {
            "$ref": "#/components/schemas/JournalEntryPaymentData"
          },
          "JournalEntryDataAccrual": {
            "$ref": "#/components/schemas/Accrual"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "JournalEntryPaymentData": {
        "type": "object",
        "properties": {
          "PaymentData": {
            "$ref": "#/components/schemas/Payment"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "JournalEntryPeriodData": {
        "type": "object",
        "properties": {
          "PeriodName": {
            "type": "string"
          },
          "PeriodNo": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "JournalEntryLineRequestSummary": {
        "type": "object",
        "properties": {
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "JournalEntryLinePostPostData": {
        "type": "object",
        "properties": {
          "AccountYear": {
            "type": "integer"
          },
          "Description": {
            "type": "string"
          },
          "MarkedAgainstJournalEntryNumber": {
            "type": "string"
          },
          "JournalEntryNumber": {
            "type": "string"
          },
          "InvoiceNumber": {
            "type": "string"
          },
          "CurrencyCodeCode": {
            "type": "string"
          },
          "SubAccountName": {
            "type": "string"
          },
          "JournalEntryTypeName": {
            "type": "string"
          },
          "JournalEntryID": {
            "type": "integer"
          },
          "StatusCode": {
            "type": "integer"
          },
          "SubAccountNumber": {
            "type": "integer"
          },
          "PaymentID": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "PeriodNo": {
            "type": "integer"
          },
          "CurrencyCodeID": {
            "type": "integer"
          },
          "MarkedAgainstJournalEntryLineID": {
            "type": "integer"
          },
          "CurrencyCodeShortCode": {
            "type": "string"
          },
          "NumberOfPayments": {
            "type": "integer"
          },
          "JournalEntryNumberNumeric": {
            "type": "integer"
          },
          "Markings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JournalEntryLinePostPostData"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "CreatePaymentBatchDTO": {
        "type": "object",
        "properties": {
          "Code": {
            "type": "string"
          },
          "HashValue": {
            "type": "string"
          },
          "Password": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "CreateAvtaleGiroPaymentBatchDTO": {
        "type": "object",
        "properties": {
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "JournalEntryLineCouple": {
        "type": "object",
        "properties": {
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "MarkingResult": {
        "type": "object",
        "properties": {
          "Pairs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JournalEntryLineCouple"
            }
          },
          "Entries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MarkingEntry"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "MarkingEntry": {
        "type": "object",
        "properties": {
          "JournalEntryNumber": {
            "type": "string"
          },
          "InvoiceNumber": {
            "type": "string"
          },
          "StatusCode": {
            "type": "string"
          },
          "OriginalStatusCode": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "Markings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MarkingReference"
            }
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "MarkingReference": {
        "type": "object",
        "properties": {
          "JournalEntryNumber": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "SupplierInvoiceDetail": {
        "type": "object",
        "properties": {
          "AccountNumber": {
            "type": "integer"
          },
          "Description": {
            "type": "string"
          },
          "VatCode": {
            "type": "string"
          },
          "VatTypeName": {
            "type": "string"
          },
          "AccountID": {
            "type": "integer"
          },
          "InvoiceNumber": {
            "type": "string"
          },
          "AccountName": {
            "type": "string"
          },
          "VatTypeID": {
            "type": "integer"
          },
          "SupplierID": {
            "type": "integer"
          },
          "SupplierInvoiceID": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "VatReportMessage": {
        "type": "object",
        "properties": {
          "Message": {
            "type": "string"
          },
          "Level": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "VatReportSummary": {
        "type": "object",
        "properties": {
          "IsHistoricData": {
            "type": "boolean"
          },
          "HasTaxAmount": {
            "type": "boolean"
          },
          "VatCodeGroupNo": {
            "type": "string"
          },
          "HasTaxBasis": {
            "type": "boolean"
          },
          "VatCodeGroupName": {
            "type": "string"
          },
          "NumberOfJournalEntryLines": {
            "type": "integer"
          },
          "VatCodeGroupID": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "VatReportSummaryPerPost": {
        "type": "object",
        "properties": {
          "IsHistoricData": {
            "type": "boolean"
          },
          "HasTaxAmount": {
            "type": "boolean"
          },
          "VatCodeGroupNo": {
            "type": "string"
          },
          "HasTaxBasis": {
            "type": "boolean"
          },
          "VatPostReportAsNegativeAmount": {
            "type": "boolean"
          },
          "VatCodeGroupName": {
            "type": "string"
          },
          "VatPostNo": {
            "type": "string"
          },
          "NumberOfJournalEntryLines": {
            "type": "integer"
          },
          "VatPostName": {
            "type": "string"
          },
          "VatCodeGroupID": {
            "type": "integer"
          },
          "VatPostID": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "VatReportSummaryPerPostPerAccount": {
        "type": "object",
        "properties": {
          "IsHistoricData": {
            "type": "boolean"
          },
          "HasTaxAmount": {
            "type": "boolean"
          },
          "VatCodeGroupNo": {
            "type": "string"
          },
          "HasTaxBasis": {
            "type": "boolean"
          },
          "Description": {
            "type": "string"
          },
          "VatPostReportAsNegativeAmount": {
            "type": "boolean"
          },
          "VatCode": {
            "type": "string"
          },
          "VatAccountNumber": {
            "type": "integer"
          },
          "JournalEntryNumber": {
            "type": "string"
          },
          "VatCodeGroupName": {
            "type": "string"
          },
          "StdVatCode": {
            "type": "string"
          },
          "VatAccountName": {
            "type": "string"
          },
          "VatAccountID": {
            "type": "integer"
          },
          "VatPostNo": {
            "type": "string"
          },
          "VatJournalEntryPostAccountName": {
            "type": "string"
          },
          "VatJournalEntryPostAccountNumber": {
            "type": "integer"
          },
          "NumberOfJournalEntryLines": {
            "type": "integer"
          },
          "VatJournalEntryPostAccountID": {
            "type": "integer"
          },
          "VatPostName": {
            "type": "string"
          },
          "VatCodeGroupID": {
            "type": "integer"
          },
          "VatPostID": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "VatReportNotReportedJournalEntryData": {
        "type": "object",
        "properties": {
          "TerminPeriodID": {
            "type": "integer"
          },
          "NumberOfJournalEntryLines": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "AltinnSigningTextResponse": {
        "type": "object",
        "properties": {
          "SigningText": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "AltinnGetVatReportDataFromAltinnResult": {
        "type": "object",
        "properties": {
          "Message": {
            "type": "string"
          },
          "Status": {
            "type": "string"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      },
      "AccountUsage": {
        "type": "object",
        "properties": {
          "AccountNumber": {
            "type": "integer"
          },
          "Counter": {
            "type": "integer"
          },
          "CustomValues": {
            "$ref": "#/components/schemas/CustomValues"
          }
        }
      }
    }
  }
}
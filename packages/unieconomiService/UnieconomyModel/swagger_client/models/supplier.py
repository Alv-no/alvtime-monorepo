# coding: utf-8

"""

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class Supplier(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'org_number': 'str',
        'business_relation_id': 'int',
        'gln': 'str',
        'sub_account_number_series_id': 'int',
        'supplier_number': 'int',
        'web_url': 'str',
        'cost_allocation_id': 'int',
        'dimensions_id': 'int',
        'status_code': 'int',
        'deleted': 'bool',
        'id': 'int',
        'self_employed': 'bool',
        'peppol_address': 'str',
        'currency_code_id': 'int',
        'updated_by': 'str',
        'created_by': 'str',
        'credit_days': 'int',
        'localization': 'str',
        'info': 'BusinessRelation',
        'dimensions': 'Dimensions',
        'cost_allocation': 'CostAllocation',
        'custom_values': 'CustomValues'
    }

    attribute_map = {
        'org_number': 'OrgNumber',
        'business_relation_id': 'BusinessRelationID',
        'gln': 'GLN',
        'sub_account_number_series_id': 'SubAccountNumberSeriesID',
        'supplier_number': 'SupplierNumber',
        'web_url': 'WebUrl',
        'cost_allocation_id': 'CostAllocationID',
        'dimensions_id': 'DimensionsID',
        'status_code': 'StatusCode',
        'deleted': 'Deleted',
        'id': 'ID',
        'self_employed': 'SelfEmployed',
        'peppol_address': 'PeppolAddress',
        'currency_code_id': 'CurrencyCodeID',
        'updated_by': 'UpdatedBy',
        'created_by': 'CreatedBy',
        'credit_days': 'CreditDays',
        'localization': 'Localization',
        'info': 'Info',
        'dimensions': 'Dimensions',
        'cost_allocation': 'CostAllocation',
        'custom_values': 'CustomValues'
    }

    def __init__(self, org_number=None, business_relation_id=None, gln=None, sub_account_number_series_id=None, supplier_number=None, web_url=None, cost_allocation_id=None, dimensions_id=None, status_code=None, deleted=None, id=None, self_employed=None, peppol_address=None, currency_code_id=None, updated_by=None, created_by=None, credit_days=None, localization=None, info=None, dimensions=None, cost_allocation=None, custom_values=None):  # noqa: E501
        """Supplier - a model defined in Swagger"""  # noqa: E501
        self._org_number = None
        self._business_relation_id = None
        self._gln = None
        self._sub_account_number_series_id = None
        self._supplier_number = None
        self._web_url = None
        self._cost_allocation_id = None
        self._dimensions_id = None
        self._status_code = None
        self._deleted = None
        self._id = None
        self._self_employed = None
        self._peppol_address = None
        self._currency_code_id = None
        self._updated_by = None
        self._created_by = None
        self._credit_days = None
        self._localization = None
        self._info = None
        self._dimensions = None
        self._cost_allocation = None
        self._custom_values = None
        self.discriminator = None
        if org_number is not None:
            self.org_number = org_number
        if business_relation_id is not None:
            self.business_relation_id = business_relation_id
        if gln is not None:
            self.gln = gln
        if sub_account_number_series_id is not None:
            self.sub_account_number_series_id = sub_account_number_series_id
        if supplier_number is not None:
            self.supplier_number = supplier_number
        if web_url is not None:
            self.web_url = web_url
        if cost_allocation_id is not None:
            self.cost_allocation_id = cost_allocation_id
        if dimensions_id is not None:
            self.dimensions_id = dimensions_id
        if status_code is not None:
            self.status_code = status_code
        if deleted is not None:
            self.deleted = deleted
        if id is not None:
            self.id = id
        if self_employed is not None:
            self.self_employed = self_employed
        if peppol_address is not None:
            self.peppol_address = peppol_address
        if currency_code_id is not None:
            self.currency_code_id = currency_code_id
        if updated_by is not None:
            self.updated_by = updated_by
        if created_by is not None:
            self.created_by = created_by
        if credit_days is not None:
            self.credit_days = credit_days
        if localization is not None:
            self.localization = localization
        if info is not None:
            self.info = info
        if dimensions is not None:
            self.dimensions = dimensions
        if cost_allocation is not None:
            self.cost_allocation = cost_allocation
        if custom_values is not None:
            self.custom_values = custom_values

    @property
    def org_number(self):
        """Gets the org_number of this Supplier.  # noqa: E501


        :return: The org_number of this Supplier.  # noqa: E501
        :rtype: str
        """
        return self._org_number

    @org_number.setter
    def org_number(self, org_number):
        """Sets the org_number of this Supplier.


        :param org_number: The org_number of this Supplier.  # noqa: E501
        :type: str
        """

        self._org_number = org_number

    @property
    def business_relation_id(self):
        """Gets the business_relation_id of this Supplier.  # noqa: E501


        :return: The business_relation_id of this Supplier.  # noqa: E501
        :rtype: int
        """
        return self._business_relation_id

    @business_relation_id.setter
    def business_relation_id(self, business_relation_id):
        """Sets the business_relation_id of this Supplier.


        :param business_relation_id: The business_relation_id of this Supplier.  # noqa: E501
        :type: int
        """

        self._business_relation_id = business_relation_id

    @property
    def gln(self):
        """Gets the gln of this Supplier.  # noqa: E501


        :return: The gln of this Supplier.  # noqa: E501
        :rtype: str
        """
        return self._gln

    @gln.setter
    def gln(self, gln):
        """Sets the gln of this Supplier.


        :param gln: The gln of this Supplier.  # noqa: E501
        :type: str
        """

        self._gln = gln

    @property
    def sub_account_number_series_id(self):
        """Gets the sub_account_number_series_id of this Supplier.  # noqa: E501


        :return: The sub_account_number_series_id of this Supplier.  # noqa: E501
        :rtype: int
        """
        return self._sub_account_number_series_id

    @sub_account_number_series_id.setter
    def sub_account_number_series_id(self, sub_account_number_series_id):
        """Sets the sub_account_number_series_id of this Supplier.


        :param sub_account_number_series_id: The sub_account_number_series_id of this Supplier.  # noqa: E501
        :type: int
        """

        self._sub_account_number_series_id = sub_account_number_series_id

    @property
    def supplier_number(self):
        """Gets the supplier_number of this Supplier.  # noqa: E501


        :return: The supplier_number of this Supplier.  # noqa: E501
        :rtype: int
        """
        return self._supplier_number

    @supplier_number.setter
    def supplier_number(self, supplier_number):
        """Sets the supplier_number of this Supplier.


        :param supplier_number: The supplier_number of this Supplier.  # noqa: E501
        :type: int
        """

        self._supplier_number = supplier_number

    @property
    def web_url(self):
        """Gets the web_url of this Supplier.  # noqa: E501


        :return: The web_url of this Supplier.  # noqa: E501
        :rtype: str
        """
        return self._web_url

    @web_url.setter
    def web_url(self, web_url):
        """Sets the web_url of this Supplier.


        :param web_url: The web_url of this Supplier.  # noqa: E501
        :type: str
        """

        self._web_url = web_url

    @property
    def cost_allocation_id(self):
        """Gets the cost_allocation_id of this Supplier.  # noqa: E501


        :return: The cost_allocation_id of this Supplier.  # noqa: E501
        :rtype: int
        """
        return self._cost_allocation_id

    @cost_allocation_id.setter
    def cost_allocation_id(self, cost_allocation_id):
        """Sets the cost_allocation_id of this Supplier.


        :param cost_allocation_id: The cost_allocation_id of this Supplier.  # noqa: E501
        :type: int
        """

        self._cost_allocation_id = cost_allocation_id

    @property
    def dimensions_id(self):
        """Gets the dimensions_id of this Supplier.  # noqa: E501


        :return: The dimensions_id of this Supplier.  # noqa: E501
        :rtype: int
        """
        return self._dimensions_id

    @dimensions_id.setter
    def dimensions_id(self, dimensions_id):
        """Sets the dimensions_id of this Supplier.


        :param dimensions_id: The dimensions_id of this Supplier.  # noqa: E501
        :type: int
        """

        self._dimensions_id = dimensions_id

    @property
    def status_code(self):
        """Gets the status_code of this Supplier.  # noqa: E501


        :return: The status_code of this Supplier.  # noqa: E501
        :rtype: int
        """
        return self._status_code

    @status_code.setter
    def status_code(self, status_code):
        """Sets the status_code of this Supplier.


        :param status_code: The status_code of this Supplier.  # noqa: E501
        :type: int
        """

        self._status_code = status_code

    @property
    def deleted(self):
        """Gets the deleted of this Supplier.  # noqa: E501


        :return: The deleted of this Supplier.  # noqa: E501
        :rtype: bool
        """
        return self._deleted

    @deleted.setter
    def deleted(self, deleted):
        """Sets the deleted of this Supplier.


        :param deleted: The deleted of this Supplier.  # noqa: E501
        :type: bool
        """

        self._deleted = deleted

    @property
    def id(self):
        """Gets the id of this Supplier.  # noqa: E501


        :return: The id of this Supplier.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Supplier.


        :param id: The id of this Supplier.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def self_employed(self):
        """Gets the self_employed of this Supplier.  # noqa: E501


        :return: The self_employed of this Supplier.  # noqa: E501
        :rtype: bool
        """
        return self._self_employed

    @self_employed.setter
    def self_employed(self, self_employed):
        """Sets the self_employed of this Supplier.


        :param self_employed: The self_employed of this Supplier.  # noqa: E501
        :type: bool
        """

        self._self_employed = self_employed

    @property
    def peppol_address(self):
        """Gets the peppol_address of this Supplier.  # noqa: E501


        :return: The peppol_address of this Supplier.  # noqa: E501
        :rtype: str
        """
        return self._peppol_address

    @peppol_address.setter
    def peppol_address(self, peppol_address):
        """Sets the peppol_address of this Supplier.


        :param peppol_address: The peppol_address of this Supplier.  # noqa: E501
        :type: str
        """

        self._peppol_address = peppol_address

    @property
    def currency_code_id(self):
        """Gets the currency_code_id of this Supplier.  # noqa: E501


        :return: The currency_code_id of this Supplier.  # noqa: E501
        :rtype: int
        """
        return self._currency_code_id

    @currency_code_id.setter
    def currency_code_id(self, currency_code_id):
        """Sets the currency_code_id of this Supplier.


        :param currency_code_id: The currency_code_id of this Supplier.  # noqa: E501
        :type: int
        """

        self._currency_code_id = currency_code_id

    @property
    def updated_by(self):
        """Gets the updated_by of this Supplier.  # noqa: E501


        :return: The updated_by of this Supplier.  # noqa: E501
        :rtype: str
        """
        return self._updated_by

    @updated_by.setter
    def updated_by(self, updated_by):
        """Sets the updated_by of this Supplier.


        :param updated_by: The updated_by of this Supplier.  # noqa: E501
        :type: str
        """

        self._updated_by = updated_by

    @property
    def created_by(self):
        """Gets the created_by of this Supplier.  # noqa: E501


        :return: The created_by of this Supplier.  # noqa: E501
        :rtype: str
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this Supplier.


        :param created_by: The created_by of this Supplier.  # noqa: E501
        :type: str
        """

        self._created_by = created_by

    @property
    def credit_days(self):
        """Gets the credit_days of this Supplier.  # noqa: E501


        :return: The credit_days of this Supplier.  # noqa: E501
        :rtype: int
        """
        return self._credit_days

    @credit_days.setter
    def credit_days(self, credit_days):
        """Sets the credit_days of this Supplier.


        :param credit_days: The credit_days of this Supplier.  # noqa: E501
        :type: int
        """

        self._credit_days = credit_days

    @property
    def localization(self):
        """Gets the localization of this Supplier.  # noqa: E501


        :return: The localization of this Supplier.  # noqa: E501
        :rtype: str
        """
        return self._localization

    @localization.setter
    def localization(self, localization):
        """Sets the localization of this Supplier.


        :param localization: The localization of this Supplier.  # noqa: E501
        :type: str
        """

        self._localization = localization

    @property
    def info(self):
        """Gets the info of this Supplier.  # noqa: E501


        :return: The info of this Supplier.  # noqa: E501
        :rtype: BusinessRelation
        """
        return self._info

    @info.setter
    def info(self, info):
        """Sets the info of this Supplier.


        :param info: The info of this Supplier.  # noqa: E501
        :type: BusinessRelation
        """

        self._info = info

    @property
    def dimensions(self):
        """Gets the dimensions of this Supplier.  # noqa: E501


        :return: The dimensions of this Supplier.  # noqa: E501
        :rtype: Dimensions
        """
        return self._dimensions

    @dimensions.setter
    def dimensions(self, dimensions):
        """Sets the dimensions of this Supplier.


        :param dimensions: The dimensions of this Supplier.  # noqa: E501
        :type: Dimensions
        """

        self._dimensions = dimensions

    @property
    def cost_allocation(self):
        """Gets the cost_allocation of this Supplier.  # noqa: E501


        :return: The cost_allocation of this Supplier.  # noqa: E501
        :rtype: CostAllocation
        """
        return self._cost_allocation

    @cost_allocation.setter
    def cost_allocation(self, cost_allocation):
        """Sets the cost_allocation of this Supplier.


        :param cost_allocation: The cost_allocation of this Supplier.  # noqa: E501
        :type: CostAllocation
        """

        self._cost_allocation = cost_allocation

    @property
    def custom_values(self):
        """Gets the custom_values of this Supplier.  # noqa: E501


        :return: The custom_values of this Supplier.  # noqa: E501
        :rtype: CustomValues
        """
        return self._custom_values

    @custom_values.setter
    def custom_values(self, custom_values):
        """Sets the custom_values of this Supplier.


        :param custom_values: The custom_values of this Supplier.  # noqa: E501
        :type: CustomValues
        """

        self._custom_values = custom_values

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(Supplier, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, Supplier):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other

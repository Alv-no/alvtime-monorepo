# coding: utf-8

"""

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class ReportDefinitionParameter(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'label': 'str',
        'default_value': 'str',
        'sort_index': 'int',
        'visible': 'bool',
        'default_value_source': 'str',
        'report_definition_id': 'int',
        'name': 'str',
        'default_value_list': 'str',
        'deleted': 'bool',
        'type': 'str',
        'id': 'int',
        'updated_by': 'str',
        'created_by': 'str',
        'default_value_lookup_type': 'str',
        'custom_values': 'CustomValues'
    }

    attribute_map = {
        'label': 'Label',
        'default_value': 'DefaultValue',
        'sort_index': 'SortIndex',
        'visible': 'Visible',
        'default_value_source': 'DefaultValueSource',
        'report_definition_id': 'ReportDefinitionId',
        'name': 'Name',
        'default_value_list': 'DefaultValueList',
        'deleted': 'Deleted',
        'type': 'Type',
        'id': 'ID',
        'updated_by': 'UpdatedBy',
        'created_by': 'CreatedBy',
        'default_value_lookup_type': 'DefaultValueLookupType',
        'custom_values': 'CustomValues'
    }

    def __init__(self, label=None, default_value=None, sort_index=None, visible=None, default_value_source=None, report_definition_id=None, name=None, default_value_list=None, deleted=None, type=None, id=None, updated_by=None, created_by=None, default_value_lookup_type=None, custom_values=None):  # noqa: E501
        """ReportDefinitionParameter - a model defined in Swagger"""  # noqa: E501
        self._label = None
        self._default_value = None
        self._sort_index = None
        self._visible = None
        self._default_value_source = None
        self._report_definition_id = None
        self._name = None
        self._default_value_list = None
        self._deleted = None
        self._type = None
        self._id = None
        self._updated_by = None
        self._created_by = None
        self._default_value_lookup_type = None
        self._custom_values = None
        self.discriminator = None
        if label is not None:
            self.label = label
        if default_value is not None:
            self.default_value = default_value
        if sort_index is not None:
            self.sort_index = sort_index
        if visible is not None:
            self.visible = visible
        if default_value_source is not None:
            self.default_value_source = default_value_source
        if report_definition_id is not None:
            self.report_definition_id = report_definition_id
        if name is not None:
            self.name = name
        if default_value_list is not None:
            self.default_value_list = default_value_list
        if deleted is not None:
            self.deleted = deleted
        if type is not None:
            self.type = type
        if id is not None:
            self.id = id
        if updated_by is not None:
            self.updated_by = updated_by
        if created_by is not None:
            self.created_by = created_by
        if default_value_lookup_type is not None:
            self.default_value_lookup_type = default_value_lookup_type
        if custom_values is not None:
            self.custom_values = custom_values

    @property
    def label(self):
        """Gets the label of this ReportDefinitionParameter.  # noqa: E501


        :return: The label of this ReportDefinitionParameter.  # noqa: E501
        :rtype: str
        """
        return self._label

    @label.setter
    def label(self, label):
        """Sets the label of this ReportDefinitionParameter.


        :param label: The label of this ReportDefinitionParameter.  # noqa: E501
        :type: str
        """

        self._label = label

    @property
    def default_value(self):
        """Gets the default_value of this ReportDefinitionParameter.  # noqa: E501


        :return: The default_value of this ReportDefinitionParameter.  # noqa: E501
        :rtype: str
        """
        return self._default_value

    @default_value.setter
    def default_value(self, default_value):
        """Sets the default_value of this ReportDefinitionParameter.


        :param default_value: The default_value of this ReportDefinitionParameter.  # noqa: E501
        :type: str
        """

        self._default_value = default_value

    @property
    def sort_index(self):
        """Gets the sort_index of this ReportDefinitionParameter.  # noqa: E501


        :return: The sort_index of this ReportDefinitionParameter.  # noqa: E501
        :rtype: int
        """
        return self._sort_index

    @sort_index.setter
    def sort_index(self, sort_index):
        """Sets the sort_index of this ReportDefinitionParameter.


        :param sort_index: The sort_index of this ReportDefinitionParameter.  # noqa: E501
        :type: int
        """

        self._sort_index = sort_index

    @property
    def visible(self):
        """Gets the visible of this ReportDefinitionParameter.  # noqa: E501


        :return: The visible of this ReportDefinitionParameter.  # noqa: E501
        :rtype: bool
        """
        return self._visible

    @visible.setter
    def visible(self, visible):
        """Sets the visible of this ReportDefinitionParameter.


        :param visible: The visible of this ReportDefinitionParameter.  # noqa: E501
        :type: bool
        """

        self._visible = visible

    @property
    def default_value_source(self):
        """Gets the default_value_source of this ReportDefinitionParameter.  # noqa: E501


        :return: The default_value_source of this ReportDefinitionParameter.  # noqa: E501
        :rtype: str
        """
        return self._default_value_source

    @default_value_source.setter
    def default_value_source(self, default_value_source):
        """Sets the default_value_source of this ReportDefinitionParameter.


        :param default_value_source: The default_value_source of this ReportDefinitionParameter.  # noqa: E501
        :type: str
        """

        self._default_value_source = default_value_source

    @property
    def report_definition_id(self):
        """Gets the report_definition_id of this ReportDefinitionParameter.  # noqa: E501


        :return: The report_definition_id of this ReportDefinitionParameter.  # noqa: E501
        :rtype: int
        """
        return self._report_definition_id

    @report_definition_id.setter
    def report_definition_id(self, report_definition_id):
        """Sets the report_definition_id of this ReportDefinitionParameter.


        :param report_definition_id: The report_definition_id of this ReportDefinitionParameter.  # noqa: E501
        :type: int
        """

        self._report_definition_id = report_definition_id

    @property
    def name(self):
        """Gets the name of this ReportDefinitionParameter.  # noqa: E501


        :return: The name of this ReportDefinitionParameter.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ReportDefinitionParameter.


        :param name: The name of this ReportDefinitionParameter.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def default_value_list(self):
        """Gets the default_value_list of this ReportDefinitionParameter.  # noqa: E501


        :return: The default_value_list of this ReportDefinitionParameter.  # noqa: E501
        :rtype: str
        """
        return self._default_value_list

    @default_value_list.setter
    def default_value_list(self, default_value_list):
        """Sets the default_value_list of this ReportDefinitionParameter.


        :param default_value_list: The default_value_list of this ReportDefinitionParameter.  # noqa: E501
        :type: str
        """

        self._default_value_list = default_value_list

    @property
    def deleted(self):
        """Gets the deleted of this ReportDefinitionParameter.  # noqa: E501


        :return: The deleted of this ReportDefinitionParameter.  # noqa: E501
        :rtype: bool
        """
        return self._deleted

    @deleted.setter
    def deleted(self, deleted):
        """Sets the deleted of this ReportDefinitionParameter.


        :param deleted: The deleted of this ReportDefinitionParameter.  # noqa: E501
        :type: bool
        """

        self._deleted = deleted

    @property
    def type(self):
        """Gets the type of this ReportDefinitionParameter.  # noqa: E501


        :return: The type of this ReportDefinitionParameter.  # noqa: E501
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ReportDefinitionParameter.


        :param type: The type of this ReportDefinitionParameter.  # noqa: E501
        :type: str
        """

        self._type = type

    @property
    def id(self):
        """Gets the id of this ReportDefinitionParameter.  # noqa: E501


        :return: The id of this ReportDefinitionParameter.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ReportDefinitionParameter.


        :param id: The id of this ReportDefinitionParameter.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def updated_by(self):
        """Gets the updated_by of this ReportDefinitionParameter.  # noqa: E501


        :return: The updated_by of this ReportDefinitionParameter.  # noqa: E501
        :rtype: str
        """
        return self._updated_by

    @updated_by.setter
    def updated_by(self, updated_by):
        """Sets the updated_by of this ReportDefinitionParameter.


        :param updated_by: The updated_by of this ReportDefinitionParameter.  # noqa: E501
        :type: str
        """

        self._updated_by = updated_by

    @property
    def created_by(self):
        """Gets the created_by of this ReportDefinitionParameter.  # noqa: E501


        :return: The created_by of this ReportDefinitionParameter.  # noqa: E501
        :rtype: str
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this ReportDefinitionParameter.


        :param created_by: The created_by of this ReportDefinitionParameter.  # noqa: E501
        :type: str
        """

        self._created_by = created_by

    @property
    def default_value_lookup_type(self):
        """Gets the default_value_lookup_type of this ReportDefinitionParameter.  # noqa: E501


        :return: The default_value_lookup_type of this ReportDefinitionParameter.  # noqa: E501
        :rtype: str
        """
        return self._default_value_lookup_type

    @default_value_lookup_type.setter
    def default_value_lookup_type(self, default_value_lookup_type):
        """Sets the default_value_lookup_type of this ReportDefinitionParameter.


        :param default_value_lookup_type: The default_value_lookup_type of this ReportDefinitionParameter.  # noqa: E501
        :type: str
        """

        self._default_value_lookup_type = default_value_lookup_type

    @property
    def custom_values(self):
        """Gets the custom_values of this ReportDefinitionParameter.  # noqa: E501


        :return: The custom_values of this ReportDefinitionParameter.  # noqa: E501
        :rtype: CustomValues
        """
        return self._custom_values

    @custom_values.setter
    def custom_values(self, custom_values):
        """Sets the custom_values of this ReportDefinitionParameter.


        :param custom_values: The custom_values of this ReportDefinitionParameter.  # noqa: E501
        :type: CustomValues
        """

        self._custom_values = custom_values

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ReportDefinitionParameter, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ReportDefinitionParameter):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other

# coding: utf-8

"""

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class Bank(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'email_id': 'int',
        'initial_bic': 'str',
        'name': 'str',
        'status_code': 'int',
        'deleted': 'bool',
        'id': 'int',
        'phone_id': 'int',
        'bic': 'str',
        'updated_by': 'str',
        'created_by': 'str',
        'address_id': 'int',
        'web': 'str',
        'address': 'Address',
        'phone': 'Phone',
        'email': 'Email',
        'custom_values': 'CustomValues'
    }

    attribute_map = {
        'email_id': 'EmailID',
        'initial_bic': 'InitialBIC',
        'name': 'Name',
        'status_code': 'StatusCode',
        'deleted': 'Deleted',
        'id': 'ID',
        'phone_id': 'PhoneID',
        'bic': 'BIC',
        'updated_by': 'UpdatedBy',
        'created_by': 'CreatedBy',
        'address_id': 'AddressID',
        'web': 'Web',
        'address': 'Address',
        'phone': 'Phone',
        'email': 'Email',
        'custom_values': 'CustomValues'
    }

    def __init__(self, email_id=None, initial_bic=None, name=None, status_code=None, deleted=None, id=None, phone_id=None, bic=None, updated_by=None, created_by=None, address_id=None, web=None, address=None, phone=None, email=None, custom_values=None):  # noqa: E501
        """Bank - a model defined in Swagger"""  # noqa: E501
        self._email_id = None
        self._initial_bic = None
        self._name = None
        self._status_code = None
        self._deleted = None
        self._id = None
        self._phone_id = None
        self._bic = None
        self._updated_by = None
        self._created_by = None
        self._address_id = None
        self._web = None
        self._address = None
        self._phone = None
        self._email = None
        self._custom_values = None
        self.discriminator = None
        if email_id is not None:
            self.email_id = email_id
        if initial_bic is not None:
            self.initial_bic = initial_bic
        if name is not None:
            self.name = name
        if status_code is not None:
            self.status_code = status_code
        if deleted is not None:
            self.deleted = deleted
        if id is not None:
            self.id = id
        if phone_id is not None:
            self.phone_id = phone_id
        if bic is not None:
            self.bic = bic
        if updated_by is not None:
            self.updated_by = updated_by
        if created_by is not None:
            self.created_by = created_by
        if address_id is not None:
            self.address_id = address_id
        if web is not None:
            self.web = web
        if address is not None:
            self.address = address
        if phone is not None:
            self.phone = phone
        if email is not None:
            self.email = email
        if custom_values is not None:
            self.custom_values = custom_values

    @property
    def email_id(self):
        """Gets the email_id of this Bank.  # noqa: E501


        :return: The email_id of this Bank.  # noqa: E501
        :rtype: int
        """
        return self._email_id

    @email_id.setter
    def email_id(self, email_id):
        """Sets the email_id of this Bank.


        :param email_id: The email_id of this Bank.  # noqa: E501
        :type: int
        """

        self._email_id = email_id

    @property
    def initial_bic(self):
        """Gets the initial_bic of this Bank.  # noqa: E501


        :return: The initial_bic of this Bank.  # noqa: E501
        :rtype: str
        """
        return self._initial_bic

    @initial_bic.setter
    def initial_bic(self, initial_bic):
        """Sets the initial_bic of this Bank.


        :param initial_bic: The initial_bic of this Bank.  # noqa: E501
        :type: str
        """

        self._initial_bic = initial_bic

    @property
    def name(self):
        """Gets the name of this Bank.  # noqa: E501


        :return: The name of this Bank.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Bank.


        :param name: The name of this Bank.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def status_code(self):
        """Gets the status_code of this Bank.  # noqa: E501


        :return: The status_code of this Bank.  # noqa: E501
        :rtype: int
        """
        return self._status_code

    @status_code.setter
    def status_code(self, status_code):
        """Sets the status_code of this Bank.


        :param status_code: The status_code of this Bank.  # noqa: E501
        :type: int
        """

        self._status_code = status_code

    @property
    def deleted(self):
        """Gets the deleted of this Bank.  # noqa: E501


        :return: The deleted of this Bank.  # noqa: E501
        :rtype: bool
        """
        return self._deleted

    @deleted.setter
    def deleted(self, deleted):
        """Sets the deleted of this Bank.


        :param deleted: The deleted of this Bank.  # noqa: E501
        :type: bool
        """

        self._deleted = deleted

    @property
    def id(self):
        """Gets the id of this Bank.  # noqa: E501


        :return: The id of this Bank.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Bank.


        :param id: The id of this Bank.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def phone_id(self):
        """Gets the phone_id of this Bank.  # noqa: E501


        :return: The phone_id of this Bank.  # noqa: E501
        :rtype: int
        """
        return self._phone_id

    @phone_id.setter
    def phone_id(self, phone_id):
        """Sets the phone_id of this Bank.


        :param phone_id: The phone_id of this Bank.  # noqa: E501
        :type: int
        """

        self._phone_id = phone_id

    @property
    def bic(self):
        """Gets the bic of this Bank.  # noqa: E501


        :return: The bic of this Bank.  # noqa: E501
        :rtype: str
        """
        return self._bic

    @bic.setter
    def bic(self, bic):
        """Sets the bic of this Bank.


        :param bic: The bic of this Bank.  # noqa: E501
        :type: str
        """

        self._bic = bic

    @property
    def updated_by(self):
        """Gets the updated_by of this Bank.  # noqa: E501


        :return: The updated_by of this Bank.  # noqa: E501
        :rtype: str
        """
        return self._updated_by

    @updated_by.setter
    def updated_by(self, updated_by):
        """Sets the updated_by of this Bank.


        :param updated_by: The updated_by of this Bank.  # noqa: E501
        :type: str
        """

        self._updated_by = updated_by

    @property
    def created_by(self):
        """Gets the created_by of this Bank.  # noqa: E501


        :return: The created_by of this Bank.  # noqa: E501
        :rtype: str
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this Bank.


        :param created_by: The created_by of this Bank.  # noqa: E501
        :type: str
        """

        self._created_by = created_by

    @property
    def address_id(self):
        """Gets the address_id of this Bank.  # noqa: E501


        :return: The address_id of this Bank.  # noqa: E501
        :rtype: int
        """
        return self._address_id

    @address_id.setter
    def address_id(self, address_id):
        """Sets the address_id of this Bank.


        :param address_id: The address_id of this Bank.  # noqa: E501
        :type: int
        """

        self._address_id = address_id

    @property
    def web(self):
        """Gets the web of this Bank.  # noqa: E501


        :return: The web of this Bank.  # noqa: E501
        :rtype: str
        """
        return self._web

    @web.setter
    def web(self, web):
        """Sets the web of this Bank.


        :param web: The web of this Bank.  # noqa: E501
        :type: str
        """

        self._web = web

    @property
    def address(self):
        """Gets the address of this Bank.  # noqa: E501


        :return: The address of this Bank.  # noqa: E501
        :rtype: Address
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this Bank.


        :param address: The address of this Bank.  # noqa: E501
        :type: Address
        """

        self._address = address

    @property
    def phone(self):
        """Gets the phone of this Bank.  # noqa: E501


        :return: The phone of this Bank.  # noqa: E501
        :rtype: Phone
        """
        return self._phone

    @phone.setter
    def phone(self, phone):
        """Sets the phone of this Bank.


        :param phone: The phone of this Bank.  # noqa: E501
        :type: Phone
        """

        self._phone = phone

    @property
    def email(self):
        """Gets the email of this Bank.  # noqa: E501


        :return: The email of this Bank.  # noqa: E501
        :rtype: Email
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this Bank.


        :param email: The email of this Bank.  # noqa: E501
        :type: Email
        """

        self._email = email

    @property
    def custom_values(self):
        """Gets the custom_values of this Bank.  # noqa: E501


        :return: The custom_values of this Bank.  # noqa: E501
        :rtype: CustomValues
        """
        return self._custom_values

    @custom_values.setter
    def custom_values(self, custom_values):
        """Sets the custom_values of this Bank.


        :param custom_values: The custom_values of this Bank.  # noqa: E501
        :type: CustomValues
        """

        self._custom_values = custom_values

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(Bank, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, Bank):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other

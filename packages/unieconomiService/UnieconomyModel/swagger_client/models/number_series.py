# coding: utf-8

"""

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class NumberSeries(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'account_year': 'int',
        'number_series_task_id': 'int',
        'empty': 'bool',
        'name': 'str',
        'next_number': 'int',
        'is_default_for_task': 'bool',
        'status_code': 'int',
        'deleted': 'bool',
        'disabled': 'bool',
        'from_number': 'int',
        'main_account_id': 'int',
        'id': 'int',
        'display_name': 'str',
        'updated_by': 'str',
        'created_by': 'str',
        'system': 'bool',
        'comment': 'str',
        'number_lock': 'bool',
        'to_number': 'int',
        'use_numbers_from_number_series_id': 'int',
        'number_series_type_id': 'int',
        'number_series_type': 'NumberSeriesType',
        'use_numbers_from_number_series': 'NumberSeries',
        'number_series_task': 'NumberSeriesTask',
        'main_account': 'Account',
        'custom_values': 'CustomValues'
    }

    attribute_map = {
        'account_year': 'AccountYear',
        'number_series_task_id': 'NumberSeriesTaskID',
        'empty': 'Empty',
        'name': 'Name',
        'next_number': 'NextNumber',
        'is_default_for_task': 'IsDefaultForTask',
        'status_code': 'StatusCode',
        'deleted': 'Deleted',
        'disabled': 'Disabled',
        'from_number': 'FromNumber',
        'main_account_id': 'MainAccountID',
        'id': 'ID',
        'display_name': 'DisplayName',
        'updated_by': 'UpdatedBy',
        'created_by': 'CreatedBy',
        'system': 'System',
        'comment': 'Comment',
        'number_lock': 'NumberLock',
        'to_number': 'ToNumber',
        'use_numbers_from_number_series_id': 'UseNumbersFromNumberSeriesID',
        'number_series_type_id': 'NumberSeriesTypeID',
        'number_series_type': 'NumberSeriesType',
        'use_numbers_from_number_series': 'UseNumbersFromNumberSeries',
        'number_series_task': 'NumberSeriesTask',
        'main_account': 'MainAccount',
        'custom_values': 'CustomValues'
    }

    def __init__(self, account_year=None, number_series_task_id=None, empty=None, name=None, next_number=None, is_default_for_task=None, status_code=None, deleted=None, disabled=None, from_number=None, main_account_id=None, id=None, display_name=None, updated_by=None, created_by=None, system=None, comment=None, number_lock=None, to_number=None, use_numbers_from_number_series_id=None, number_series_type_id=None, number_series_type=None, use_numbers_from_number_series=None, number_series_task=None, main_account=None, custom_values=None):  # noqa: E501
        """NumberSeries - a model defined in Swagger"""  # noqa: E501
        self._account_year = None
        self._number_series_task_id = None
        self._empty = None
        self._name = None
        self._next_number = None
        self._is_default_for_task = None
        self._status_code = None
        self._deleted = None
        self._disabled = None
        self._from_number = None
        self._main_account_id = None
        self._id = None
        self._display_name = None
        self._updated_by = None
        self._created_by = None
        self._system = None
        self._comment = None
        self._number_lock = None
        self._to_number = None
        self._use_numbers_from_number_series_id = None
        self._number_series_type_id = None
        self._number_series_type = None
        self._use_numbers_from_number_series = None
        self._number_series_task = None
        self._main_account = None
        self._custom_values = None
        self.discriminator = None
        if account_year is not None:
            self.account_year = account_year
        if number_series_task_id is not None:
            self.number_series_task_id = number_series_task_id
        if empty is not None:
            self.empty = empty
        if name is not None:
            self.name = name
        if next_number is not None:
            self.next_number = next_number
        if is_default_for_task is not None:
            self.is_default_for_task = is_default_for_task
        if status_code is not None:
            self.status_code = status_code
        if deleted is not None:
            self.deleted = deleted
        if disabled is not None:
            self.disabled = disabled
        if from_number is not None:
            self.from_number = from_number
        if main_account_id is not None:
            self.main_account_id = main_account_id
        if id is not None:
            self.id = id
        if display_name is not None:
            self.display_name = display_name
        if updated_by is not None:
            self.updated_by = updated_by
        if created_by is not None:
            self.created_by = created_by
        if system is not None:
            self.system = system
        if comment is not None:
            self.comment = comment
        if number_lock is not None:
            self.number_lock = number_lock
        if to_number is not None:
            self.to_number = to_number
        if use_numbers_from_number_series_id is not None:
            self.use_numbers_from_number_series_id = use_numbers_from_number_series_id
        if number_series_type_id is not None:
            self.number_series_type_id = number_series_type_id
        if number_series_type is not None:
            self.number_series_type = number_series_type
        if use_numbers_from_number_series is not None:
            self.use_numbers_from_number_series = use_numbers_from_number_series
        if number_series_task is not None:
            self.number_series_task = number_series_task
        if main_account is not None:
            self.main_account = main_account
        if custom_values is not None:
            self.custom_values = custom_values

    @property
    def account_year(self):
        """Gets the account_year of this NumberSeries.  # noqa: E501


        :return: The account_year of this NumberSeries.  # noqa: E501
        :rtype: int
        """
        return self._account_year

    @account_year.setter
    def account_year(self, account_year):
        """Sets the account_year of this NumberSeries.


        :param account_year: The account_year of this NumberSeries.  # noqa: E501
        :type: int
        """

        self._account_year = account_year

    @property
    def number_series_task_id(self):
        """Gets the number_series_task_id of this NumberSeries.  # noqa: E501


        :return: The number_series_task_id of this NumberSeries.  # noqa: E501
        :rtype: int
        """
        return self._number_series_task_id

    @number_series_task_id.setter
    def number_series_task_id(self, number_series_task_id):
        """Sets the number_series_task_id of this NumberSeries.


        :param number_series_task_id: The number_series_task_id of this NumberSeries.  # noqa: E501
        :type: int
        """

        self._number_series_task_id = number_series_task_id

    @property
    def empty(self):
        """Gets the empty of this NumberSeries.  # noqa: E501


        :return: The empty of this NumberSeries.  # noqa: E501
        :rtype: bool
        """
        return self._empty

    @empty.setter
    def empty(self, empty):
        """Sets the empty of this NumberSeries.


        :param empty: The empty of this NumberSeries.  # noqa: E501
        :type: bool
        """

        self._empty = empty

    @property
    def name(self):
        """Gets the name of this NumberSeries.  # noqa: E501


        :return: The name of this NumberSeries.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this NumberSeries.


        :param name: The name of this NumberSeries.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def next_number(self):
        """Gets the next_number of this NumberSeries.  # noqa: E501


        :return: The next_number of this NumberSeries.  # noqa: E501
        :rtype: int
        """
        return self._next_number

    @next_number.setter
    def next_number(self, next_number):
        """Sets the next_number of this NumberSeries.


        :param next_number: The next_number of this NumberSeries.  # noqa: E501
        :type: int
        """

        self._next_number = next_number

    @property
    def is_default_for_task(self):
        """Gets the is_default_for_task of this NumberSeries.  # noqa: E501


        :return: The is_default_for_task of this NumberSeries.  # noqa: E501
        :rtype: bool
        """
        return self._is_default_for_task

    @is_default_for_task.setter
    def is_default_for_task(self, is_default_for_task):
        """Sets the is_default_for_task of this NumberSeries.


        :param is_default_for_task: The is_default_for_task of this NumberSeries.  # noqa: E501
        :type: bool
        """

        self._is_default_for_task = is_default_for_task

    @property
    def status_code(self):
        """Gets the status_code of this NumberSeries.  # noqa: E501


        :return: The status_code of this NumberSeries.  # noqa: E501
        :rtype: int
        """
        return self._status_code

    @status_code.setter
    def status_code(self, status_code):
        """Sets the status_code of this NumberSeries.


        :param status_code: The status_code of this NumberSeries.  # noqa: E501
        :type: int
        """

        self._status_code = status_code

    @property
    def deleted(self):
        """Gets the deleted of this NumberSeries.  # noqa: E501


        :return: The deleted of this NumberSeries.  # noqa: E501
        :rtype: bool
        """
        return self._deleted

    @deleted.setter
    def deleted(self, deleted):
        """Sets the deleted of this NumberSeries.


        :param deleted: The deleted of this NumberSeries.  # noqa: E501
        :type: bool
        """

        self._deleted = deleted

    @property
    def disabled(self):
        """Gets the disabled of this NumberSeries.  # noqa: E501


        :return: The disabled of this NumberSeries.  # noqa: E501
        :rtype: bool
        """
        return self._disabled

    @disabled.setter
    def disabled(self, disabled):
        """Sets the disabled of this NumberSeries.


        :param disabled: The disabled of this NumberSeries.  # noqa: E501
        :type: bool
        """

        self._disabled = disabled

    @property
    def from_number(self):
        """Gets the from_number of this NumberSeries.  # noqa: E501


        :return: The from_number of this NumberSeries.  # noqa: E501
        :rtype: int
        """
        return self._from_number

    @from_number.setter
    def from_number(self, from_number):
        """Sets the from_number of this NumberSeries.


        :param from_number: The from_number of this NumberSeries.  # noqa: E501
        :type: int
        """

        self._from_number = from_number

    @property
    def main_account_id(self):
        """Gets the main_account_id of this NumberSeries.  # noqa: E501


        :return: The main_account_id of this NumberSeries.  # noqa: E501
        :rtype: int
        """
        return self._main_account_id

    @main_account_id.setter
    def main_account_id(self, main_account_id):
        """Sets the main_account_id of this NumberSeries.


        :param main_account_id: The main_account_id of this NumberSeries.  # noqa: E501
        :type: int
        """

        self._main_account_id = main_account_id

    @property
    def id(self):
        """Gets the id of this NumberSeries.  # noqa: E501


        :return: The id of this NumberSeries.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this NumberSeries.


        :param id: The id of this NumberSeries.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def display_name(self):
        """Gets the display_name of this NumberSeries.  # noqa: E501


        :return: The display_name of this NumberSeries.  # noqa: E501
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this NumberSeries.


        :param display_name: The display_name of this NumberSeries.  # noqa: E501
        :type: str
        """

        self._display_name = display_name

    @property
    def updated_by(self):
        """Gets the updated_by of this NumberSeries.  # noqa: E501


        :return: The updated_by of this NumberSeries.  # noqa: E501
        :rtype: str
        """
        return self._updated_by

    @updated_by.setter
    def updated_by(self, updated_by):
        """Sets the updated_by of this NumberSeries.


        :param updated_by: The updated_by of this NumberSeries.  # noqa: E501
        :type: str
        """

        self._updated_by = updated_by

    @property
    def created_by(self):
        """Gets the created_by of this NumberSeries.  # noqa: E501


        :return: The created_by of this NumberSeries.  # noqa: E501
        :rtype: str
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this NumberSeries.


        :param created_by: The created_by of this NumberSeries.  # noqa: E501
        :type: str
        """

        self._created_by = created_by

    @property
    def system(self):
        """Gets the system of this NumberSeries.  # noqa: E501


        :return: The system of this NumberSeries.  # noqa: E501
        :rtype: bool
        """
        return self._system

    @system.setter
    def system(self, system):
        """Sets the system of this NumberSeries.


        :param system: The system of this NumberSeries.  # noqa: E501
        :type: bool
        """

        self._system = system

    @property
    def comment(self):
        """Gets the comment of this NumberSeries.  # noqa: E501


        :return: The comment of this NumberSeries.  # noqa: E501
        :rtype: str
        """
        return self._comment

    @comment.setter
    def comment(self, comment):
        """Sets the comment of this NumberSeries.


        :param comment: The comment of this NumberSeries.  # noqa: E501
        :type: str
        """

        self._comment = comment

    @property
    def number_lock(self):
        """Gets the number_lock of this NumberSeries.  # noqa: E501


        :return: The number_lock of this NumberSeries.  # noqa: E501
        :rtype: bool
        """
        return self._number_lock

    @number_lock.setter
    def number_lock(self, number_lock):
        """Sets the number_lock of this NumberSeries.


        :param number_lock: The number_lock of this NumberSeries.  # noqa: E501
        :type: bool
        """

        self._number_lock = number_lock

    @property
    def to_number(self):
        """Gets the to_number of this NumberSeries.  # noqa: E501


        :return: The to_number of this NumberSeries.  # noqa: E501
        :rtype: int
        """
        return self._to_number

    @to_number.setter
    def to_number(self, to_number):
        """Sets the to_number of this NumberSeries.


        :param to_number: The to_number of this NumberSeries.  # noqa: E501
        :type: int
        """

        self._to_number = to_number

    @property
    def use_numbers_from_number_series_id(self):
        """Gets the use_numbers_from_number_series_id of this NumberSeries.  # noqa: E501


        :return: The use_numbers_from_number_series_id of this NumberSeries.  # noqa: E501
        :rtype: int
        """
        return self._use_numbers_from_number_series_id

    @use_numbers_from_number_series_id.setter
    def use_numbers_from_number_series_id(self, use_numbers_from_number_series_id):
        """Sets the use_numbers_from_number_series_id of this NumberSeries.


        :param use_numbers_from_number_series_id: The use_numbers_from_number_series_id of this NumberSeries.  # noqa: E501
        :type: int
        """

        self._use_numbers_from_number_series_id = use_numbers_from_number_series_id

    @property
    def number_series_type_id(self):
        """Gets the number_series_type_id of this NumberSeries.  # noqa: E501


        :return: The number_series_type_id of this NumberSeries.  # noqa: E501
        :rtype: int
        """
        return self._number_series_type_id

    @number_series_type_id.setter
    def number_series_type_id(self, number_series_type_id):
        """Sets the number_series_type_id of this NumberSeries.


        :param number_series_type_id: The number_series_type_id of this NumberSeries.  # noqa: E501
        :type: int
        """

        self._number_series_type_id = number_series_type_id

    @property
    def number_series_type(self):
        """Gets the number_series_type of this NumberSeries.  # noqa: E501


        :return: The number_series_type of this NumberSeries.  # noqa: E501
        :rtype: NumberSeriesType
        """
        return self._number_series_type

    @number_series_type.setter
    def number_series_type(self, number_series_type):
        """Sets the number_series_type of this NumberSeries.


        :param number_series_type: The number_series_type of this NumberSeries.  # noqa: E501
        :type: NumberSeriesType
        """

        self._number_series_type = number_series_type

    @property
    def use_numbers_from_number_series(self):
        """Gets the use_numbers_from_number_series of this NumberSeries.  # noqa: E501


        :return: The use_numbers_from_number_series of this NumberSeries.  # noqa: E501
        :rtype: NumberSeries
        """
        return self._use_numbers_from_number_series

    @use_numbers_from_number_series.setter
    def use_numbers_from_number_series(self, use_numbers_from_number_series):
        """Sets the use_numbers_from_number_series of this NumberSeries.


        :param use_numbers_from_number_series: The use_numbers_from_number_series of this NumberSeries.  # noqa: E501
        :type: NumberSeries
        """

        self._use_numbers_from_number_series = use_numbers_from_number_series

    @property
    def number_series_task(self):
        """Gets the number_series_task of this NumberSeries.  # noqa: E501


        :return: The number_series_task of this NumberSeries.  # noqa: E501
        :rtype: NumberSeriesTask
        """
        return self._number_series_task

    @number_series_task.setter
    def number_series_task(self, number_series_task):
        """Sets the number_series_task of this NumberSeries.


        :param number_series_task: The number_series_task of this NumberSeries.  # noqa: E501
        :type: NumberSeriesTask
        """

        self._number_series_task = number_series_task

    @property
    def main_account(self):
        """Gets the main_account of this NumberSeries.  # noqa: E501


        :return: The main_account of this NumberSeries.  # noqa: E501
        :rtype: Account
        """
        return self._main_account

    @main_account.setter
    def main_account(self, main_account):
        """Sets the main_account of this NumberSeries.


        :param main_account: The main_account of this NumberSeries.  # noqa: E501
        :type: Account
        """

        self._main_account = main_account

    @property
    def custom_values(self):
        """Gets the custom_values of this NumberSeries.  # noqa: E501


        :return: The custom_values of this NumberSeries.  # noqa: E501
        :rtype: CustomValues
        """
        return self._custom_values

    @custom_values.setter
    def custom_values(self, custom_values):
        """Sets the custom_values of this NumberSeries.


        :param custom_values: The custom_values of this NumberSeries.  # noqa: E501
        :type: CustomValues
        """

        self._custom_values = custom_values

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(NumberSeries, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, NumberSeries):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other

# coding: utf-8

"""

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class Company(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'is_template': 'bool',
        'schema_name': 'str',
        'key': 'str',
        'name': 'str',
        'organization_number': 'str',
        'status_code': 'str',
        'deleted': 'bool',
        'migration_version': 'str',
        'id': 'int',
        'web_hook_subscriber_id': 'str',
        'file_flow_email': 'str',
        'connection_string': 'str',
        'is_global_template': 'bool',
        'updated_by': 'str',
        'file_flow_orgnr_email': 'str',
        'created_by': 'str',
        'client_number': 'int',
        'is_test': 'bool',
        'custom_values': 'CustomValues'
    }

    attribute_map = {
        'is_template': 'IsTemplate',
        'schema_name': 'SchemaName',
        'key': 'Key',
        'name': 'Name',
        'organization_number': 'OrganizationNumber',
        'status_code': 'StatusCode',
        'deleted': 'Deleted',
        'migration_version': 'MigrationVersion',
        'id': 'ID',
        'web_hook_subscriber_id': 'WebHookSubscriberId',
        'file_flow_email': 'FileFlowEmail',
        'connection_string': 'ConnectionString',
        'is_global_template': 'IsGlobalTemplate',
        'updated_by': 'UpdatedBy',
        'file_flow_orgnr_email': 'FileFlowOrgnrEmail',
        'created_by': 'CreatedBy',
        'client_number': 'ClientNumber',
        'is_test': 'IsTest',
        'custom_values': 'CustomValues'
    }

    def __init__(self, is_template=None, schema_name=None, key=None, name=None, organization_number=None, status_code=None, deleted=None, migration_version=None, id=None, web_hook_subscriber_id=None, file_flow_email=None, connection_string=None, is_global_template=None, updated_by=None, file_flow_orgnr_email=None, created_by=None, client_number=None, is_test=None, custom_values=None):  # noqa: E501
        """Company - a model defined in Swagger"""  # noqa: E501
        self._is_template = None
        self._schema_name = None
        self._key = None
        self._name = None
        self._organization_number = None
        self._status_code = None
        self._deleted = None
        self._migration_version = None
        self._id = None
        self._web_hook_subscriber_id = None
        self._file_flow_email = None
        self._connection_string = None
        self._is_global_template = None
        self._updated_by = None
        self._file_flow_orgnr_email = None
        self._created_by = None
        self._client_number = None
        self._is_test = None
        self._custom_values = None
        self.discriminator = None
        if is_template is not None:
            self.is_template = is_template
        if schema_name is not None:
            self.schema_name = schema_name
        if key is not None:
            self.key = key
        if name is not None:
            self.name = name
        if organization_number is not None:
            self.organization_number = organization_number
        if status_code is not None:
            self.status_code = status_code
        if deleted is not None:
            self.deleted = deleted
        if migration_version is not None:
            self.migration_version = migration_version
        if id is not None:
            self.id = id
        if web_hook_subscriber_id is not None:
            self.web_hook_subscriber_id = web_hook_subscriber_id
        if file_flow_email is not None:
            self.file_flow_email = file_flow_email
        if connection_string is not None:
            self.connection_string = connection_string
        if is_global_template is not None:
            self.is_global_template = is_global_template
        if updated_by is not None:
            self.updated_by = updated_by
        if file_flow_orgnr_email is not None:
            self.file_flow_orgnr_email = file_flow_orgnr_email
        if created_by is not None:
            self.created_by = created_by
        if client_number is not None:
            self.client_number = client_number
        if is_test is not None:
            self.is_test = is_test
        if custom_values is not None:
            self.custom_values = custom_values

    @property
    def is_template(self):
        """Gets the is_template of this Company.  # noqa: E501


        :return: The is_template of this Company.  # noqa: E501
        :rtype: bool
        """
        return self._is_template

    @is_template.setter
    def is_template(self, is_template):
        """Sets the is_template of this Company.


        :param is_template: The is_template of this Company.  # noqa: E501
        :type: bool
        """

        self._is_template = is_template

    @property
    def schema_name(self):
        """Gets the schema_name of this Company.  # noqa: E501


        :return: The schema_name of this Company.  # noqa: E501
        :rtype: str
        """
        return self._schema_name

    @schema_name.setter
    def schema_name(self, schema_name):
        """Sets the schema_name of this Company.


        :param schema_name: The schema_name of this Company.  # noqa: E501
        :type: str
        """

        self._schema_name = schema_name

    @property
    def key(self):
        """Gets the key of this Company.  # noqa: E501


        :return: The key of this Company.  # noqa: E501
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this Company.


        :param key: The key of this Company.  # noqa: E501
        :type: str
        """

        self._key = key

    @property
    def name(self):
        """Gets the name of this Company.  # noqa: E501


        :return: The name of this Company.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Company.


        :param name: The name of this Company.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def organization_number(self):
        """Gets the organization_number of this Company.  # noqa: E501


        :return: The organization_number of this Company.  # noqa: E501
        :rtype: str
        """
        return self._organization_number

    @organization_number.setter
    def organization_number(self, organization_number):
        """Sets the organization_number of this Company.


        :param organization_number: The organization_number of this Company.  # noqa: E501
        :type: str
        """

        self._organization_number = organization_number

    @property
    def status_code(self):
        """Gets the status_code of this Company.  # noqa: E501


        :return: The status_code of this Company.  # noqa: E501
        :rtype: str
        """
        return self._status_code

    @status_code.setter
    def status_code(self, status_code):
        """Sets the status_code of this Company.


        :param status_code: The status_code of this Company.  # noqa: E501
        :type: str
        """

        self._status_code = status_code

    @property
    def deleted(self):
        """Gets the deleted of this Company.  # noqa: E501


        :return: The deleted of this Company.  # noqa: E501
        :rtype: bool
        """
        return self._deleted

    @deleted.setter
    def deleted(self, deleted):
        """Sets the deleted of this Company.


        :param deleted: The deleted of this Company.  # noqa: E501
        :type: bool
        """

        self._deleted = deleted

    @property
    def migration_version(self):
        """Gets the migration_version of this Company.  # noqa: E501


        :return: The migration_version of this Company.  # noqa: E501
        :rtype: str
        """
        return self._migration_version

    @migration_version.setter
    def migration_version(self, migration_version):
        """Sets the migration_version of this Company.


        :param migration_version: The migration_version of this Company.  # noqa: E501
        :type: str
        """

        self._migration_version = migration_version

    @property
    def id(self):
        """Gets the id of this Company.  # noqa: E501


        :return: The id of this Company.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Company.


        :param id: The id of this Company.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def web_hook_subscriber_id(self):
        """Gets the web_hook_subscriber_id of this Company.  # noqa: E501


        :return: The web_hook_subscriber_id of this Company.  # noqa: E501
        :rtype: str
        """
        return self._web_hook_subscriber_id

    @web_hook_subscriber_id.setter
    def web_hook_subscriber_id(self, web_hook_subscriber_id):
        """Sets the web_hook_subscriber_id of this Company.


        :param web_hook_subscriber_id: The web_hook_subscriber_id of this Company.  # noqa: E501
        :type: str
        """

        self._web_hook_subscriber_id = web_hook_subscriber_id

    @property
    def file_flow_email(self):
        """Gets the file_flow_email of this Company.  # noqa: E501


        :return: The file_flow_email of this Company.  # noqa: E501
        :rtype: str
        """
        return self._file_flow_email

    @file_flow_email.setter
    def file_flow_email(self, file_flow_email):
        """Sets the file_flow_email of this Company.


        :param file_flow_email: The file_flow_email of this Company.  # noqa: E501
        :type: str
        """

        self._file_flow_email = file_flow_email

    @property
    def connection_string(self):
        """Gets the connection_string of this Company.  # noqa: E501


        :return: The connection_string of this Company.  # noqa: E501
        :rtype: str
        """
        return self._connection_string

    @connection_string.setter
    def connection_string(self, connection_string):
        """Sets the connection_string of this Company.


        :param connection_string: The connection_string of this Company.  # noqa: E501
        :type: str
        """

        self._connection_string = connection_string

    @property
    def is_global_template(self):
        """Gets the is_global_template of this Company.  # noqa: E501


        :return: The is_global_template of this Company.  # noqa: E501
        :rtype: bool
        """
        return self._is_global_template

    @is_global_template.setter
    def is_global_template(self, is_global_template):
        """Sets the is_global_template of this Company.


        :param is_global_template: The is_global_template of this Company.  # noqa: E501
        :type: bool
        """

        self._is_global_template = is_global_template

    @property
    def updated_by(self):
        """Gets the updated_by of this Company.  # noqa: E501


        :return: The updated_by of this Company.  # noqa: E501
        :rtype: str
        """
        return self._updated_by

    @updated_by.setter
    def updated_by(self, updated_by):
        """Sets the updated_by of this Company.


        :param updated_by: The updated_by of this Company.  # noqa: E501
        :type: str
        """

        self._updated_by = updated_by

    @property
    def file_flow_orgnr_email(self):
        """Gets the file_flow_orgnr_email of this Company.  # noqa: E501


        :return: The file_flow_orgnr_email of this Company.  # noqa: E501
        :rtype: str
        """
        return self._file_flow_orgnr_email

    @file_flow_orgnr_email.setter
    def file_flow_orgnr_email(self, file_flow_orgnr_email):
        """Sets the file_flow_orgnr_email of this Company.


        :param file_flow_orgnr_email: The file_flow_orgnr_email of this Company.  # noqa: E501
        :type: str
        """

        self._file_flow_orgnr_email = file_flow_orgnr_email

    @property
    def created_by(self):
        """Gets the created_by of this Company.  # noqa: E501


        :return: The created_by of this Company.  # noqa: E501
        :rtype: str
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this Company.


        :param created_by: The created_by of this Company.  # noqa: E501
        :type: str
        """

        self._created_by = created_by

    @property
    def client_number(self):
        """Gets the client_number of this Company.  # noqa: E501


        :return: The client_number of this Company.  # noqa: E501
        :rtype: int
        """
        return self._client_number

    @client_number.setter
    def client_number(self, client_number):
        """Sets the client_number of this Company.


        :param client_number: The client_number of this Company.  # noqa: E501
        :type: int
        """

        self._client_number = client_number

    @property
    def is_test(self):
        """Gets the is_test of this Company.  # noqa: E501


        :return: The is_test of this Company.  # noqa: E501
        :rtype: bool
        """
        return self._is_test

    @is_test.setter
    def is_test(self, is_test):
        """Sets the is_test of this Company.


        :param is_test: The is_test of this Company.  # noqa: E501
        :type: bool
        """

        self._is_test = is_test

    @property
    def custom_values(self):
        """Gets the custom_values of this Company.  # noqa: E501


        :return: The custom_values of this Company.  # noqa: E501
        :rtype: CustomValues
        """
        return self._custom_values

    @custom_values.setter
    def custom_values(self, custom_values):
        """Sets the custom_values of this Company.


        :param custom_values: The custom_values of this Company.  # noqa: E501
        :type: CustomValues
        """

        self._custom_values = custom_values

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(Company, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, Company):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other

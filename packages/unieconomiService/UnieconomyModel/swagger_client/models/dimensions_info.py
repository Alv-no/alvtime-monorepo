# coding: utf-8

"""

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class DimensionsInfo(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'project_name': 'str',
        'dimension6_number': 'str',
        'project_task_number': 'str',
        'dimension8_name': 'str',
        'dimension7_name': 'str',
        'region_name': 'str',
        'dimension10_number': 'str',
        'dimension9_number': 'str',
        'dimensions_id': 'int',
        'dimension7_number': 'str',
        'dimension5_number': 'str',
        'project_task_name': 'str',
        'dimension9_name': 'str',
        'dimension5_name': 'str',
        'dimension8_number': 'str',
        'department_name': 'str',
        'region_code': 'str',
        'id': 'int',
        'department_number': 'str',
        'dimension6_name': 'str',
        'responsible_name': 'str',
        'project_number': 'str',
        'dimension10_name': 'str',
        'custom_values': 'CustomValues'
    }

    attribute_map = {
        'project_name': 'ProjectName',
        'dimension6_number': 'Dimension6Number',
        'project_task_number': 'ProjectTaskNumber',
        'dimension8_name': 'Dimension8Name',
        'dimension7_name': 'Dimension7Name',
        'region_name': 'RegionName',
        'dimension10_number': 'Dimension10Number',
        'dimension9_number': 'Dimension9Number',
        'dimensions_id': 'DimensionsID',
        'dimension7_number': 'Dimension7Number',
        'dimension5_number': 'Dimension5Number',
        'project_task_name': 'ProjectTaskName',
        'dimension9_name': 'Dimension9Name',
        'dimension5_name': 'Dimension5Name',
        'dimension8_number': 'Dimension8Number',
        'department_name': 'DepartmentName',
        'region_code': 'RegionCode',
        'id': 'ID',
        'department_number': 'DepartmentNumber',
        'dimension6_name': 'Dimension6Name',
        'responsible_name': 'ResponsibleName',
        'project_number': 'ProjectNumber',
        'dimension10_name': 'Dimension10Name',
        'custom_values': 'CustomValues'
    }

    def __init__(self, project_name=None, dimension6_number=None, project_task_number=None, dimension8_name=None, dimension7_name=None, region_name=None, dimension10_number=None, dimension9_number=None, dimensions_id=None, dimension7_number=None, dimension5_number=None, project_task_name=None, dimension9_name=None, dimension5_name=None, dimension8_number=None, department_name=None, region_code=None, id=None, department_number=None, dimension6_name=None, responsible_name=None, project_number=None, dimension10_name=None, custom_values=None):  # noqa: E501
        """DimensionsInfo - a model defined in Swagger"""  # noqa: E501
        self._project_name = None
        self._dimension6_number = None
        self._project_task_number = None
        self._dimension8_name = None
        self._dimension7_name = None
        self._region_name = None
        self._dimension10_number = None
        self._dimension9_number = None
        self._dimensions_id = None
        self._dimension7_number = None
        self._dimension5_number = None
        self._project_task_name = None
        self._dimension9_name = None
        self._dimension5_name = None
        self._dimension8_number = None
        self._department_name = None
        self._region_code = None
        self._id = None
        self._department_number = None
        self._dimension6_name = None
        self._responsible_name = None
        self._project_number = None
        self._dimension10_name = None
        self._custom_values = None
        self.discriminator = None
        if project_name is not None:
            self.project_name = project_name
        if dimension6_number is not None:
            self.dimension6_number = dimension6_number
        if project_task_number is not None:
            self.project_task_number = project_task_number
        if dimension8_name is not None:
            self.dimension8_name = dimension8_name
        if dimension7_name is not None:
            self.dimension7_name = dimension7_name
        if region_name is not None:
            self.region_name = region_name
        if dimension10_number is not None:
            self.dimension10_number = dimension10_number
        if dimension9_number is not None:
            self.dimension9_number = dimension9_number
        if dimensions_id is not None:
            self.dimensions_id = dimensions_id
        if dimension7_number is not None:
            self.dimension7_number = dimension7_number
        if dimension5_number is not None:
            self.dimension5_number = dimension5_number
        if project_task_name is not None:
            self.project_task_name = project_task_name
        if dimension9_name is not None:
            self.dimension9_name = dimension9_name
        if dimension5_name is not None:
            self.dimension5_name = dimension5_name
        if dimension8_number is not None:
            self.dimension8_number = dimension8_number
        if department_name is not None:
            self.department_name = department_name
        if region_code is not None:
            self.region_code = region_code
        if id is not None:
            self.id = id
        if department_number is not None:
            self.department_number = department_number
        if dimension6_name is not None:
            self.dimension6_name = dimension6_name
        if responsible_name is not None:
            self.responsible_name = responsible_name
        if project_number is not None:
            self.project_number = project_number
        if dimension10_name is not None:
            self.dimension10_name = dimension10_name
        if custom_values is not None:
            self.custom_values = custom_values

    @property
    def project_name(self):
        """Gets the project_name of this DimensionsInfo.  # noqa: E501


        :return: The project_name of this DimensionsInfo.  # noqa: E501
        :rtype: str
        """
        return self._project_name

    @project_name.setter
    def project_name(self, project_name):
        """Sets the project_name of this DimensionsInfo.


        :param project_name: The project_name of this DimensionsInfo.  # noqa: E501
        :type: str
        """

        self._project_name = project_name

    @property
    def dimension6_number(self):
        """Gets the dimension6_number of this DimensionsInfo.  # noqa: E501


        :return: The dimension6_number of this DimensionsInfo.  # noqa: E501
        :rtype: str
        """
        return self._dimension6_number

    @dimension6_number.setter
    def dimension6_number(self, dimension6_number):
        """Sets the dimension6_number of this DimensionsInfo.


        :param dimension6_number: The dimension6_number of this DimensionsInfo.  # noqa: E501
        :type: str
        """

        self._dimension6_number = dimension6_number

    @property
    def project_task_number(self):
        """Gets the project_task_number of this DimensionsInfo.  # noqa: E501


        :return: The project_task_number of this DimensionsInfo.  # noqa: E501
        :rtype: str
        """
        return self._project_task_number

    @project_task_number.setter
    def project_task_number(self, project_task_number):
        """Sets the project_task_number of this DimensionsInfo.


        :param project_task_number: The project_task_number of this DimensionsInfo.  # noqa: E501
        :type: str
        """

        self._project_task_number = project_task_number

    @property
    def dimension8_name(self):
        """Gets the dimension8_name of this DimensionsInfo.  # noqa: E501


        :return: The dimension8_name of this DimensionsInfo.  # noqa: E501
        :rtype: str
        """
        return self._dimension8_name

    @dimension8_name.setter
    def dimension8_name(self, dimension8_name):
        """Sets the dimension8_name of this DimensionsInfo.


        :param dimension8_name: The dimension8_name of this DimensionsInfo.  # noqa: E501
        :type: str
        """

        self._dimension8_name = dimension8_name

    @property
    def dimension7_name(self):
        """Gets the dimension7_name of this DimensionsInfo.  # noqa: E501


        :return: The dimension7_name of this DimensionsInfo.  # noqa: E501
        :rtype: str
        """
        return self._dimension7_name

    @dimension7_name.setter
    def dimension7_name(self, dimension7_name):
        """Sets the dimension7_name of this DimensionsInfo.


        :param dimension7_name: The dimension7_name of this DimensionsInfo.  # noqa: E501
        :type: str
        """

        self._dimension7_name = dimension7_name

    @property
    def region_name(self):
        """Gets the region_name of this DimensionsInfo.  # noqa: E501


        :return: The region_name of this DimensionsInfo.  # noqa: E501
        :rtype: str
        """
        return self._region_name

    @region_name.setter
    def region_name(self, region_name):
        """Sets the region_name of this DimensionsInfo.


        :param region_name: The region_name of this DimensionsInfo.  # noqa: E501
        :type: str
        """

        self._region_name = region_name

    @property
    def dimension10_number(self):
        """Gets the dimension10_number of this DimensionsInfo.  # noqa: E501


        :return: The dimension10_number of this DimensionsInfo.  # noqa: E501
        :rtype: str
        """
        return self._dimension10_number

    @dimension10_number.setter
    def dimension10_number(self, dimension10_number):
        """Sets the dimension10_number of this DimensionsInfo.


        :param dimension10_number: The dimension10_number of this DimensionsInfo.  # noqa: E501
        :type: str
        """

        self._dimension10_number = dimension10_number

    @property
    def dimension9_number(self):
        """Gets the dimension9_number of this DimensionsInfo.  # noqa: E501


        :return: The dimension9_number of this DimensionsInfo.  # noqa: E501
        :rtype: str
        """
        return self._dimension9_number

    @dimension9_number.setter
    def dimension9_number(self, dimension9_number):
        """Sets the dimension9_number of this DimensionsInfo.


        :param dimension9_number: The dimension9_number of this DimensionsInfo.  # noqa: E501
        :type: str
        """

        self._dimension9_number = dimension9_number

    @property
    def dimensions_id(self):
        """Gets the dimensions_id of this DimensionsInfo.  # noqa: E501


        :return: The dimensions_id of this DimensionsInfo.  # noqa: E501
        :rtype: int
        """
        return self._dimensions_id

    @dimensions_id.setter
    def dimensions_id(self, dimensions_id):
        """Sets the dimensions_id of this DimensionsInfo.


        :param dimensions_id: The dimensions_id of this DimensionsInfo.  # noqa: E501
        :type: int
        """

        self._dimensions_id = dimensions_id

    @property
    def dimension7_number(self):
        """Gets the dimension7_number of this DimensionsInfo.  # noqa: E501


        :return: The dimension7_number of this DimensionsInfo.  # noqa: E501
        :rtype: str
        """
        return self._dimension7_number

    @dimension7_number.setter
    def dimension7_number(self, dimension7_number):
        """Sets the dimension7_number of this DimensionsInfo.


        :param dimension7_number: The dimension7_number of this DimensionsInfo.  # noqa: E501
        :type: str
        """

        self._dimension7_number = dimension7_number

    @property
    def dimension5_number(self):
        """Gets the dimension5_number of this DimensionsInfo.  # noqa: E501


        :return: The dimension5_number of this DimensionsInfo.  # noqa: E501
        :rtype: str
        """
        return self._dimension5_number

    @dimension5_number.setter
    def dimension5_number(self, dimension5_number):
        """Sets the dimension5_number of this DimensionsInfo.


        :param dimension5_number: The dimension5_number of this DimensionsInfo.  # noqa: E501
        :type: str
        """

        self._dimension5_number = dimension5_number

    @property
    def project_task_name(self):
        """Gets the project_task_name of this DimensionsInfo.  # noqa: E501


        :return: The project_task_name of this DimensionsInfo.  # noqa: E501
        :rtype: str
        """
        return self._project_task_name

    @project_task_name.setter
    def project_task_name(self, project_task_name):
        """Sets the project_task_name of this DimensionsInfo.


        :param project_task_name: The project_task_name of this DimensionsInfo.  # noqa: E501
        :type: str
        """

        self._project_task_name = project_task_name

    @property
    def dimension9_name(self):
        """Gets the dimension9_name of this DimensionsInfo.  # noqa: E501


        :return: The dimension9_name of this DimensionsInfo.  # noqa: E501
        :rtype: str
        """
        return self._dimension9_name

    @dimension9_name.setter
    def dimension9_name(self, dimension9_name):
        """Sets the dimension9_name of this DimensionsInfo.


        :param dimension9_name: The dimension9_name of this DimensionsInfo.  # noqa: E501
        :type: str
        """

        self._dimension9_name = dimension9_name

    @property
    def dimension5_name(self):
        """Gets the dimension5_name of this DimensionsInfo.  # noqa: E501


        :return: The dimension5_name of this DimensionsInfo.  # noqa: E501
        :rtype: str
        """
        return self._dimension5_name

    @dimension5_name.setter
    def dimension5_name(self, dimension5_name):
        """Sets the dimension5_name of this DimensionsInfo.


        :param dimension5_name: The dimension5_name of this DimensionsInfo.  # noqa: E501
        :type: str
        """

        self._dimension5_name = dimension5_name

    @property
    def dimension8_number(self):
        """Gets the dimension8_number of this DimensionsInfo.  # noqa: E501


        :return: The dimension8_number of this DimensionsInfo.  # noqa: E501
        :rtype: str
        """
        return self._dimension8_number

    @dimension8_number.setter
    def dimension8_number(self, dimension8_number):
        """Sets the dimension8_number of this DimensionsInfo.


        :param dimension8_number: The dimension8_number of this DimensionsInfo.  # noqa: E501
        :type: str
        """

        self._dimension8_number = dimension8_number

    @property
    def department_name(self):
        """Gets the department_name of this DimensionsInfo.  # noqa: E501


        :return: The department_name of this DimensionsInfo.  # noqa: E501
        :rtype: str
        """
        return self._department_name

    @department_name.setter
    def department_name(self, department_name):
        """Sets the department_name of this DimensionsInfo.


        :param department_name: The department_name of this DimensionsInfo.  # noqa: E501
        :type: str
        """

        self._department_name = department_name

    @property
    def region_code(self):
        """Gets the region_code of this DimensionsInfo.  # noqa: E501


        :return: The region_code of this DimensionsInfo.  # noqa: E501
        :rtype: str
        """
        return self._region_code

    @region_code.setter
    def region_code(self, region_code):
        """Sets the region_code of this DimensionsInfo.


        :param region_code: The region_code of this DimensionsInfo.  # noqa: E501
        :type: str
        """

        self._region_code = region_code

    @property
    def id(self):
        """Gets the id of this DimensionsInfo.  # noqa: E501


        :return: The id of this DimensionsInfo.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this DimensionsInfo.


        :param id: The id of this DimensionsInfo.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def department_number(self):
        """Gets the department_number of this DimensionsInfo.  # noqa: E501


        :return: The department_number of this DimensionsInfo.  # noqa: E501
        :rtype: str
        """
        return self._department_number

    @department_number.setter
    def department_number(self, department_number):
        """Sets the department_number of this DimensionsInfo.


        :param department_number: The department_number of this DimensionsInfo.  # noqa: E501
        :type: str
        """

        self._department_number = department_number

    @property
    def dimension6_name(self):
        """Gets the dimension6_name of this DimensionsInfo.  # noqa: E501


        :return: The dimension6_name of this DimensionsInfo.  # noqa: E501
        :rtype: str
        """
        return self._dimension6_name

    @dimension6_name.setter
    def dimension6_name(self, dimension6_name):
        """Sets the dimension6_name of this DimensionsInfo.


        :param dimension6_name: The dimension6_name of this DimensionsInfo.  # noqa: E501
        :type: str
        """

        self._dimension6_name = dimension6_name

    @property
    def responsible_name(self):
        """Gets the responsible_name of this DimensionsInfo.  # noqa: E501


        :return: The responsible_name of this DimensionsInfo.  # noqa: E501
        :rtype: str
        """
        return self._responsible_name

    @responsible_name.setter
    def responsible_name(self, responsible_name):
        """Sets the responsible_name of this DimensionsInfo.


        :param responsible_name: The responsible_name of this DimensionsInfo.  # noqa: E501
        :type: str
        """

        self._responsible_name = responsible_name

    @property
    def project_number(self):
        """Gets the project_number of this DimensionsInfo.  # noqa: E501


        :return: The project_number of this DimensionsInfo.  # noqa: E501
        :rtype: str
        """
        return self._project_number

    @project_number.setter
    def project_number(self, project_number):
        """Sets the project_number of this DimensionsInfo.


        :param project_number: The project_number of this DimensionsInfo.  # noqa: E501
        :type: str
        """

        self._project_number = project_number

    @property
    def dimension10_name(self):
        """Gets the dimension10_name of this DimensionsInfo.  # noqa: E501


        :return: The dimension10_name of this DimensionsInfo.  # noqa: E501
        :rtype: str
        """
        return self._dimension10_name

    @dimension10_name.setter
    def dimension10_name(self, dimension10_name):
        """Sets the dimension10_name of this DimensionsInfo.


        :param dimension10_name: The dimension10_name of this DimensionsInfo.  # noqa: E501
        :type: str
        """

        self._dimension10_name = dimension10_name

    @property
    def custom_values(self):
        """Gets the custom_values of this DimensionsInfo.  # noqa: E501


        :return: The custom_values of this DimensionsInfo.  # noqa: E501
        :rtype: CustomValues
        """
        return self._custom_values

    @custom_values.setter
    def custom_values(self, custom_values):
        """Sets the custom_values of this DimensionsInfo.


        :param custom_values: The custom_values of this DimensionsInfo.  # noqa: E501
        :type: CustomValues
        """

        self._custom_values = custom_values

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(DimensionsInfo, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, DimensionsInfo):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other

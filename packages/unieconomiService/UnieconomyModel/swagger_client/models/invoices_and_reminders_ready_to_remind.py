# coding: utf-8

"""

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class InvoicesAndRemindersReadyToRemind(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'customer_id': 'int',
        'customer_invoice_id': 'int',
        'customer_number': 'int',
        'customer_name': 'str',
        'invoice_number': 'int',
        'currency_code_code': 'str',
        'status_code': 'int',
        'email_address': 'str',
        'dont_send_reminders': 'bool',
        'customer_invoice_reminder_id': 'int',
        'external_reference': 'str',
        'reminder_number': 'int',
        'currency_code_id': 'int',
        'currency_code_short_code': 'str',
        'custom_values': 'CustomValues'
    }

    attribute_map = {
        'customer_id': 'CustomerID',
        'customer_invoice_id': 'CustomerInvoiceID',
        'customer_number': 'CustomerNumber',
        'customer_name': 'CustomerName',
        'invoice_number': 'InvoiceNumber',
        'currency_code_code': 'CurrencyCodeCode',
        'status_code': 'StatusCode',
        'email_address': 'EmailAddress',
        'dont_send_reminders': 'DontSendReminders',
        'customer_invoice_reminder_id': 'CustomerInvoiceReminderID',
        'external_reference': 'ExternalReference',
        'reminder_number': 'ReminderNumber',
        'currency_code_id': 'CurrencyCodeID',
        'currency_code_short_code': 'CurrencyCodeShortCode',
        'custom_values': 'CustomValues'
    }

    def __init__(self, customer_id=None, customer_invoice_id=None, customer_number=None, customer_name=None, invoice_number=None, currency_code_code=None, status_code=None, email_address=None, dont_send_reminders=None, customer_invoice_reminder_id=None, external_reference=None, reminder_number=None, currency_code_id=None, currency_code_short_code=None, custom_values=None):  # noqa: E501
        """InvoicesAndRemindersReadyToRemind - a model defined in Swagger"""  # noqa: E501
        self._customer_id = None
        self._customer_invoice_id = None
        self._customer_number = None
        self._customer_name = None
        self._invoice_number = None
        self._currency_code_code = None
        self._status_code = None
        self._email_address = None
        self._dont_send_reminders = None
        self._customer_invoice_reminder_id = None
        self._external_reference = None
        self._reminder_number = None
        self._currency_code_id = None
        self._currency_code_short_code = None
        self._custom_values = None
        self.discriminator = None
        if customer_id is not None:
            self.customer_id = customer_id
        if customer_invoice_id is not None:
            self.customer_invoice_id = customer_invoice_id
        if customer_number is not None:
            self.customer_number = customer_number
        if customer_name is not None:
            self.customer_name = customer_name
        if invoice_number is not None:
            self.invoice_number = invoice_number
        if currency_code_code is not None:
            self.currency_code_code = currency_code_code
        if status_code is not None:
            self.status_code = status_code
        if email_address is not None:
            self.email_address = email_address
        if dont_send_reminders is not None:
            self.dont_send_reminders = dont_send_reminders
        if customer_invoice_reminder_id is not None:
            self.customer_invoice_reminder_id = customer_invoice_reminder_id
        if external_reference is not None:
            self.external_reference = external_reference
        if reminder_number is not None:
            self.reminder_number = reminder_number
        if currency_code_id is not None:
            self.currency_code_id = currency_code_id
        if currency_code_short_code is not None:
            self.currency_code_short_code = currency_code_short_code
        if custom_values is not None:
            self.custom_values = custom_values

    @property
    def customer_id(self):
        """Gets the customer_id of this InvoicesAndRemindersReadyToRemind.  # noqa: E501


        :return: The customer_id of this InvoicesAndRemindersReadyToRemind.  # noqa: E501
        :rtype: int
        """
        return self._customer_id

    @customer_id.setter
    def customer_id(self, customer_id):
        """Sets the customer_id of this InvoicesAndRemindersReadyToRemind.


        :param customer_id: The customer_id of this InvoicesAndRemindersReadyToRemind.  # noqa: E501
        :type: int
        """

        self._customer_id = customer_id

    @property
    def customer_invoice_id(self):
        """Gets the customer_invoice_id of this InvoicesAndRemindersReadyToRemind.  # noqa: E501


        :return: The customer_invoice_id of this InvoicesAndRemindersReadyToRemind.  # noqa: E501
        :rtype: int
        """
        return self._customer_invoice_id

    @customer_invoice_id.setter
    def customer_invoice_id(self, customer_invoice_id):
        """Sets the customer_invoice_id of this InvoicesAndRemindersReadyToRemind.


        :param customer_invoice_id: The customer_invoice_id of this InvoicesAndRemindersReadyToRemind.  # noqa: E501
        :type: int
        """

        self._customer_invoice_id = customer_invoice_id

    @property
    def customer_number(self):
        """Gets the customer_number of this InvoicesAndRemindersReadyToRemind.  # noqa: E501


        :return: The customer_number of this InvoicesAndRemindersReadyToRemind.  # noqa: E501
        :rtype: int
        """
        return self._customer_number

    @customer_number.setter
    def customer_number(self, customer_number):
        """Sets the customer_number of this InvoicesAndRemindersReadyToRemind.


        :param customer_number: The customer_number of this InvoicesAndRemindersReadyToRemind.  # noqa: E501
        :type: int
        """

        self._customer_number = customer_number

    @property
    def customer_name(self):
        """Gets the customer_name of this InvoicesAndRemindersReadyToRemind.  # noqa: E501


        :return: The customer_name of this InvoicesAndRemindersReadyToRemind.  # noqa: E501
        :rtype: str
        """
        return self._customer_name

    @customer_name.setter
    def customer_name(self, customer_name):
        """Sets the customer_name of this InvoicesAndRemindersReadyToRemind.


        :param customer_name: The customer_name of this InvoicesAndRemindersReadyToRemind.  # noqa: E501
        :type: str
        """

        self._customer_name = customer_name

    @property
    def invoice_number(self):
        """Gets the invoice_number of this InvoicesAndRemindersReadyToRemind.  # noqa: E501


        :return: The invoice_number of this InvoicesAndRemindersReadyToRemind.  # noqa: E501
        :rtype: int
        """
        return self._invoice_number

    @invoice_number.setter
    def invoice_number(self, invoice_number):
        """Sets the invoice_number of this InvoicesAndRemindersReadyToRemind.


        :param invoice_number: The invoice_number of this InvoicesAndRemindersReadyToRemind.  # noqa: E501
        :type: int
        """

        self._invoice_number = invoice_number

    @property
    def currency_code_code(self):
        """Gets the currency_code_code of this InvoicesAndRemindersReadyToRemind.  # noqa: E501


        :return: The currency_code_code of this InvoicesAndRemindersReadyToRemind.  # noqa: E501
        :rtype: str
        """
        return self._currency_code_code

    @currency_code_code.setter
    def currency_code_code(self, currency_code_code):
        """Sets the currency_code_code of this InvoicesAndRemindersReadyToRemind.


        :param currency_code_code: The currency_code_code of this InvoicesAndRemindersReadyToRemind.  # noqa: E501
        :type: str
        """

        self._currency_code_code = currency_code_code

    @property
    def status_code(self):
        """Gets the status_code of this InvoicesAndRemindersReadyToRemind.  # noqa: E501


        :return: The status_code of this InvoicesAndRemindersReadyToRemind.  # noqa: E501
        :rtype: int
        """
        return self._status_code

    @status_code.setter
    def status_code(self, status_code):
        """Sets the status_code of this InvoicesAndRemindersReadyToRemind.


        :param status_code: The status_code of this InvoicesAndRemindersReadyToRemind.  # noqa: E501
        :type: int
        """

        self._status_code = status_code

    @property
    def email_address(self):
        """Gets the email_address of this InvoicesAndRemindersReadyToRemind.  # noqa: E501


        :return: The email_address of this InvoicesAndRemindersReadyToRemind.  # noqa: E501
        :rtype: str
        """
        return self._email_address

    @email_address.setter
    def email_address(self, email_address):
        """Sets the email_address of this InvoicesAndRemindersReadyToRemind.


        :param email_address: The email_address of this InvoicesAndRemindersReadyToRemind.  # noqa: E501
        :type: str
        """

        self._email_address = email_address

    @property
    def dont_send_reminders(self):
        """Gets the dont_send_reminders of this InvoicesAndRemindersReadyToRemind.  # noqa: E501


        :return: The dont_send_reminders of this InvoicesAndRemindersReadyToRemind.  # noqa: E501
        :rtype: bool
        """
        return self._dont_send_reminders

    @dont_send_reminders.setter
    def dont_send_reminders(self, dont_send_reminders):
        """Sets the dont_send_reminders of this InvoicesAndRemindersReadyToRemind.


        :param dont_send_reminders: The dont_send_reminders of this InvoicesAndRemindersReadyToRemind.  # noqa: E501
        :type: bool
        """

        self._dont_send_reminders = dont_send_reminders

    @property
    def customer_invoice_reminder_id(self):
        """Gets the customer_invoice_reminder_id of this InvoicesAndRemindersReadyToRemind.  # noqa: E501


        :return: The customer_invoice_reminder_id of this InvoicesAndRemindersReadyToRemind.  # noqa: E501
        :rtype: int
        """
        return self._customer_invoice_reminder_id

    @customer_invoice_reminder_id.setter
    def customer_invoice_reminder_id(self, customer_invoice_reminder_id):
        """Sets the customer_invoice_reminder_id of this InvoicesAndRemindersReadyToRemind.


        :param customer_invoice_reminder_id: The customer_invoice_reminder_id of this InvoicesAndRemindersReadyToRemind.  # noqa: E501
        :type: int
        """

        self._customer_invoice_reminder_id = customer_invoice_reminder_id

    @property
    def external_reference(self):
        """Gets the external_reference of this InvoicesAndRemindersReadyToRemind.  # noqa: E501


        :return: The external_reference of this InvoicesAndRemindersReadyToRemind.  # noqa: E501
        :rtype: str
        """
        return self._external_reference

    @external_reference.setter
    def external_reference(self, external_reference):
        """Sets the external_reference of this InvoicesAndRemindersReadyToRemind.


        :param external_reference: The external_reference of this InvoicesAndRemindersReadyToRemind.  # noqa: E501
        :type: str
        """

        self._external_reference = external_reference

    @property
    def reminder_number(self):
        """Gets the reminder_number of this InvoicesAndRemindersReadyToRemind.  # noqa: E501


        :return: The reminder_number of this InvoicesAndRemindersReadyToRemind.  # noqa: E501
        :rtype: int
        """
        return self._reminder_number

    @reminder_number.setter
    def reminder_number(self, reminder_number):
        """Sets the reminder_number of this InvoicesAndRemindersReadyToRemind.


        :param reminder_number: The reminder_number of this InvoicesAndRemindersReadyToRemind.  # noqa: E501
        :type: int
        """

        self._reminder_number = reminder_number

    @property
    def currency_code_id(self):
        """Gets the currency_code_id of this InvoicesAndRemindersReadyToRemind.  # noqa: E501


        :return: The currency_code_id of this InvoicesAndRemindersReadyToRemind.  # noqa: E501
        :rtype: int
        """
        return self._currency_code_id

    @currency_code_id.setter
    def currency_code_id(self, currency_code_id):
        """Sets the currency_code_id of this InvoicesAndRemindersReadyToRemind.


        :param currency_code_id: The currency_code_id of this InvoicesAndRemindersReadyToRemind.  # noqa: E501
        :type: int
        """

        self._currency_code_id = currency_code_id

    @property
    def currency_code_short_code(self):
        """Gets the currency_code_short_code of this InvoicesAndRemindersReadyToRemind.  # noqa: E501


        :return: The currency_code_short_code of this InvoicesAndRemindersReadyToRemind.  # noqa: E501
        :rtype: str
        """
        return self._currency_code_short_code

    @currency_code_short_code.setter
    def currency_code_short_code(self, currency_code_short_code):
        """Sets the currency_code_short_code of this InvoicesAndRemindersReadyToRemind.


        :param currency_code_short_code: The currency_code_short_code of this InvoicesAndRemindersReadyToRemind.  # noqa: E501
        :type: str
        """

        self._currency_code_short_code = currency_code_short_code

    @property
    def custom_values(self):
        """Gets the custom_values of this InvoicesAndRemindersReadyToRemind.  # noqa: E501


        :return: The custom_values of this InvoicesAndRemindersReadyToRemind.  # noqa: E501
        :rtype: CustomValues
        """
        return self._custom_values

    @custom_values.setter
    def custom_values(self, custom_values):
        """Sets the custom_values of this InvoicesAndRemindersReadyToRemind.


        :param custom_values: The custom_values of this InvoicesAndRemindersReadyToRemind.  # noqa: E501
        :type: CustomValues
        """

        self._custom_values = custom_values

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(InvoicesAndRemindersReadyToRemind, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, InvoicesAndRemindersReadyToRemind):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other

# coding: utf-8

"""

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class File(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'pages': 'int',
        'description': 'str',
        'name': 'str',
        'content_type': 'str',
        'encryption_id': 'int',
        'status_code': 'int',
        'deleted': 'bool',
        'storage_reference': 'str',
        'size': 'str',
        'perma_link': 'str',
        'ocr_data': 'str',
        'id': 'int',
        'updated_by': 'str',
        'created_by': 'str',
        'md5': 'str',
        'file_tags': 'list[FileTag]',
        'entity_links': 'list[FileEntityLink]',
        'custom_values': 'CustomValues'
    }

    attribute_map = {
        'pages': 'Pages',
        'description': 'Description',
        'name': 'Name',
        'content_type': 'ContentType',
        'encryption_id': 'encryptionID',
        'status_code': 'StatusCode',
        'deleted': 'Deleted',
        'storage_reference': 'StorageReference',
        'size': 'Size',
        'perma_link': 'PermaLink',
        'ocr_data': 'OCRData',
        'id': 'ID',
        'updated_by': 'UpdatedBy',
        'created_by': 'CreatedBy',
        'md5': 'Md5',
        'file_tags': 'FileTags',
        'entity_links': 'EntityLinks',
        'custom_values': 'CustomValues'
    }

    def __init__(self, pages=None, description=None, name=None, content_type=None, encryption_id=None, status_code=None, deleted=None, storage_reference=None, size=None, perma_link=None, ocr_data=None, id=None, updated_by=None, created_by=None, md5=None, file_tags=None, entity_links=None, custom_values=None):  # noqa: E501
        """File - a model defined in Swagger"""  # noqa: E501
        self._pages = None
        self._description = None
        self._name = None
        self._content_type = None
        self._encryption_id = None
        self._status_code = None
        self._deleted = None
        self._storage_reference = None
        self._size = None
        self._perma_link = None
        self._ocr_data = None
        self._id = None
        self._updated_by = None
        self._created_by = None
        self._md5 = None
        self._file_tags = None
        self._entity_links = None
        self._custom_values = None
        self.discriminator = None
        if pages is not None:
            self.pages = pages
        if description is not None:
            self.description = description
        if name is not None:
            self.name = name
        if content_type is not None:
            self.content_type = content_type
        if encryption_id is not None:
            self.encryption_id = encryption_id
        if status_code is not None:
            self.status_code = status_code
        if deleted is not None:
            self.deleted = deleted
        if storage_reference is not None:
            self.storage_reference = storage_reference
        if size is not None:
            self.size = size
        if perma_link is not None:
            self.perma_link = perma_link
        if ocr_data is not None:
            self.ocr_data = ocr_data
        if id is not None:
            self.id = id
        if updated_by is not None:
            self.updated_by = updated_by
        if created_by is not None:
            self.created_by = created_by
        if md5 is not None:
            self.md5 = md5
        if file_tags is not None:
            self.file_tags = file_tags
        if entity_links is not None:
            self.entity_links = entity_links
        if custom_values is not None:
            self.custom_values = custom_values

    @property
    def pages(self):
        """Gets the pages of this File.  # noqa: E501


        :return: The pages of this File.  # noqa: E501
        :rtype: int
        """
        return self._pages

    @pages.setter
    def pages(self, pages):
        """Sets the pages of this File.


        :param pages: The pages of this File.  # noqa: E501
        :type: int
        """

        self._pages = pages

    @property
    def description(self):
        """Gets the description of this File.  # noqa: E501


        :return: The description of this File.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this File.


        :param description: The description of this File.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def name(self):
        """Gets the name of this File.  # noqa: E501


        :return: The name of this File.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this File.


        :param name: The name of this File.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def content_type(self):
        """Gets the content_type of this File.  # noqa: E501


        :return: The content_type of this File.  # noqa: E501
        :rtype: str
        """
        return self._content_type

    @content_type.setter
    def content_type(self, content_type):
        """Sets the content_type of this File.


        :param content_type: The content_type of this File.  # noqa: E501
        :type: str
        """

        self._content_type = content_type

    @property
    def encryption_id(self):
        """Gets the encryption_id of this File.  # noqa: E501


        :return: The encryption_id of this File.  # noqa: E501
        :rtype: int
        """
        return self._encryption_id

    @encryption_id.setter
    def encryption_id(self, encryption_id):
        """Sets the encryption_id of this File.


        :param encryption_id: The encryption_id of this File.  # noqa: E501
        :type: int
        """

        self._encryption_id = encryption_id

    @property
    def status_code(self):
        """Gets the status_code of this File.  # noqa: E501


        :return: The status_code of this File.  # noqa: E501
        :rtype: int
        """
        return self._status_code

    @status_code.setter
    def status_code(self, status_code):
        """Sets the status_code of this File.


        :param status_code: The status_code of this File.  # noqa: E501
        :type: int
        """

        self._status_code = status_code

    @property
    def deleted(self):
        """Gets the deleted of this File.  # noqa: E501


        :return: The deleted of this File.  # noqa: E501
        :rtype: bool
        """
        return self._deleted

    @deleted.setter
    def deleted(self, deleted):
        """Sets the deleted of this File.


        :param deleted: The deleted of this File.  # noqa: E501
        :type: bool
        """

        self._deleted = deleted

    @property
    def storage_reference(self):
        """Gets the storage_reference of this File.  # noqa: E501


        :return: The storage_reference of this File.  # noqa: E501
        :rtype: str
        """
        return self._storage_reference

    @storage_reference.setter
    def storage_reference(self, storage_reference):
        """Sets the storage_reference of this File.


        :param storage_reference: The storage_reference of this File.  # noqa: E501
        :type: str
        """

        self._storage_reference = storage_reference

    @property
    def size(self):
        """Gets the size of this File.  # noqa: E501


        :return: The size of this File.  # noqa: E501
        :rtype: str
        """
        return self._size

    @size.setter
    def size(self, size):
        """Sets the size of this File.


        :param size: The size of this File.  # noqa: E501
        :type: str
        """

        self._size = size

    @property
    def perma_link(self):
        """Gets the perma_link of this File.  # noqa: E501


        :return: The perma_link of this File.  # noqa: E501
        :rtype: str
        """
        return self._perma_link

    @perma_link.setter
    def perma_link(self, perma_link):
        """Sets the perma_link of this File.


        :param perma_link: The perma_link of this File.  # noqa: E501
        :type: str
        """

        self._perma_link = perma_link

    @property
    def ocr_data(self):
        """Gets the ocr_data of this File.  # noqa: E501


        :return: The ocr_data of this File.  # noqa: E501
        :rtype: str
        """
        return self._ocr_data

    @ocr_data.setter
    def ocr_data(self, ocr_data):
        """Sets the ocr_data of this File.


        :param ocr_data: The ocr_data of this File.  # noqa: E501
        :type: str
        """

        self._ocr_data = ocr_data

    @property
    def id(self):
        """Gets the id of this File.  # noqa: E501


        :return: The id of this File.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this File.


        :param id: The id of this File.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def updated_by(self):
        """Gets the updated_by of this File.  # noqa: E501


        :return: The updated_by of this File.  # noqa: E501
        :rtype: str
        """
        return self._updated_by

    @updated_by.setter
    def updated_by(self, updated_by):
        """Sets the updated_by of this File.


        :param updated_by: The updated_by of this File.  # noqa: E501
        :type: str
        """

        self._updated_by = updated_by

    @property
    def created_by(self):
        """Gets the created_by of this File.  # noqa: E501


        :return: The created_by of this File.  # noqa: E501
        :rtype: str
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this File.


        :param created_by: The created_by of this File.  # noqa: E501
        :type: str
        """

        self._created_by = created_by

    @property
    def md5(self):
        """Gets the md5 of this File.  # noqa: E501


        :return: The md5 of this File.  # noqa: E501
        :rtype: str
        """
        return self._md5

    @md5.setter
    def md5(self, md5):
        """Sets the md5 of this File.


        :param md5: The md5 of this File.  # noqa: E501
        :type: str
        """

        self._md5 = md5

    @property
    def file_tags(self):
        """Gets the file_tags of this File.  # noqa: E501


        :return: The file_tags of this File.  # noqa: E501
        :rtype: list[FileTag]
        """
        return self._file_tags

    @file_tags.setter
    def file_tags(self, file_tags):
        """Sets the file_tags of this File.


        :param file_tags: The file_tags of this File.  # noqa: E501
        :type: list[FileTag]
        """

        self._file_tags = file_tags

    @property
    def entity_links(self):
        """Gets the entity_links of this File.  # noqa: E501


        :return: The entity_links of this File.  # noqa: E501
        :rtype: list[FileEntityLink]
        """
        return self._entity_links

    @entity_links.setter
    def entity_links(self, entity_links):
        """Sets the entity_links of this File.


        :param entity_links: The entity_links of this File.  # noqa: E501
        :type: list[FileEntityLink]
        """

        self._entity_links = entity_links

    @property
    def custom_values(self):
        """Gets the custom_values of this File.  # noqa: E501


        :return: The custom_values of this File.  # noqa: E501
        :rtype: CustomValues
        """
        return self._custom_values

    @custom_values.setter
    def custom_values(self, custom_values):
        """Sets the custom_values of this File.


        :param custom_values: The custom_values of this File.  # noqa: E501
        :type: CustomValues
        """

        self._custom_values = custom_values

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(File, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, File):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other

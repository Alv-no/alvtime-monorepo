# coding: utf-8

"""

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class CustomerQuote(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'shipping_address_line3': 'str',
        'use_report_id': 'int',
        'customer_id': 'int',
        'invoice_address_line2': 'str',
        'inquiry_reference': 'int',
        'invoice_receiver_name': 'str',
        'customer_person': 'str',
        'update_currency_amounts_on_date_change': 'bool',
        'free_txt': 'str',
        'our_reference': 'str',
        'quote_number': 'int',
        'update_currency_on_to_invoice': 'bool',
        'your_reference': 'str',
        'payment_terms_id': 'int',
        'shipping_address_line2': 'str',
        'payment_term': 'str',
        'requisition': 'str',
        'customer_name': 'str',
        'shipping_country_code': 'str',
        'sales_person': 'str',
        'delivery_method': 'str',
        'default_dimensions_id': 'int',
        'delivery_terms_id': 'int',
        'status_code': 'int',
        'deleted': 'bool',
        'shipping_postal_code': 'str',
        'email_address': 'str',
        'invoice_city': 'str',
        'delivery_name': 'str',
        'print_status': 'int',
        'quote_number_series_id': 'int',
        'id': 'int',
        'shipping_city': 'str',
        'payment_info_type_id': 'int',
        'default_seller_id': 'int',
        'delivery_term': 'str',
        'shipping_address_line1': 'str',
        'currency_code_id': 'int',
        'invoice_address_line1': 'str',
        'updated_by': 'str',
        'update_currency_on_to_order': 'bool',
        'supplier_org_number': 'str',
        'created_by': 'str',
        'comment': 'str',
        'distribution_plan_id': 'int',
        'invoice_country': 'str',
        'invoice_country_code': 'str',
        'invoice_postal_code': 'str',
        'credit_days': 'int',
        'customer_org_number': 'str',
        'invoice_address_line3': 'str',
        'internal_note': 'str',
        'shipping_country': 'str',
        'payment_terms': 'Terms',
        'delivery_terms': 'Terms',
        'customer': 'Customer',
        'default_dimensions': 'Dimensions',
        'items': 'list[CustomerQuoteItem]',
        'default_seller': 'Seller',
        'sellers': 'list[SellerLink]',
        'distribution_plan': 'DistributionPlan',
        'custom_values': 'CustomValues'
    }

    attribute_map = {
        'shipping_address_line3': 'ShippingAddressLine3',
        'use_report_id': 'UseReportID',
        'customer_id': 'CustomerID',
        'invoice_address_line2': 'InvoiceAddressLine2',
        'inquiry_reference': 'InquiryReference',
        'invoice_receiver_name': 'InvoiceReceiverName',
        'customer_person': 'CustomerPerson',
        'update_currency_amounts_on_date_change': 'UpdateCurrencyAmountsOnDateChange',
        'free_txt': 'FreeTxt',
        'our_reference': 'OurReference',
        'quote_number': 'QuoteNumber',
        'update_currency_on_to_invoice': 'UpdateCurrencyOnToInvoice',
        'your_reference': 'YourReference',
        'payment_terms_id': 'PaymentTermsID',
        'shipping_address_line2': 'ShippingAddressLine2',
        'payment_term': 'PaymentTerm',
        'requisition': 'Requisition',
        'customer_name': 'CustomerName',
        'shipping_country_code': 'ShippingCountryCode',
        'sales_person': 'SalesPerson',
        'delivery_method': 'DeliveryMethod',
        'default_dimensions_id': 'DefaultDimensionsID',
        'delivery_terms_id': 'DeliveryTermsID',
        'status_code': 'StatusCode',
        'deleted': 'Deleted',
        'shipping_postal_code': 'ShippingPostalCode',
        'email_address': 'EmailAddress',
        'invoice_city': 'InvoiceCity',
        'delivery_name': 'DeliveryName',
        'print_status': 'PrintStatus',
        'quote_number_series_id': 'QuoteNumberSeriesID',
        'id': 'ID',
        'shipping_city': 'ShippingCity',
        'payment_info_type_id': 'PaymentInfoTypeID',
        'default_seller_id': 'DefaultSellerID',
        'delivery_term': 'DeliveryTerm',
        'shipping_address_line1': 'ShippingAddressLine1',
        'currency_code_id': 'CurrencyCodeID',
        'invoice_address_line1': 'InvoiceAddressLine1',
        'updated_by': 'UpdatedBy',
        'update_currency_on_to_order': 'UpdateCurrencyOnToOrder',
        'supplier_org_number': 'SupplierOrgNumber',
        'created_by': 'CreatedBy',
        'comment': 'Comment',
        'distribution_plan_id': 'DistributionPlanID',
        'invoice_country': 'InvoiceCountry',
        'invoice_country_code': 'InvoiceCountryCode',
        'invoice_postal_code': 'InvoicePostalCode',
        'credit_days': 'CreditDays',
        'customer_org_number': 'CustomerOrgNumber',
        'invoice_address_line3': 'InvoiceAddressLine3',
        'internal_note': 'InternalNote',
        'shipping_country': 'ShippingCountry',
        'payment_terms': 'PaymentTerms',
        'delivery_terms': 'DeliveryTerms',
        'customer': 'Customer',
        'default_dimensions': 'DefaultDimensions',
        'items': 'Items',
        'default_seller': 'DefaultSeller',
        'sellers': 'Sellers',
        'distribution_plan': 'DistributionPlan',
        'custom_values': 'CustomValues'
    }

    def __init__(self, shipping_address_line3=None, use_report_id=None, customer_id=None, invoice_address_line2=None, inquiry_reference=None, invoice_receiver_name=None, customer_person=None, update_currency_amounts_on_date_change=None, free_txt=None, our_reference=None, quote_number=None, update_currency_on_to_invoice=None, your_reference=None, payment_terms_id=None, shipping_address_line2=None, payment_term=None, requisition=None, customer_name=None, shipping_country_code=None, sales_person=None, delivery_method=None, default_dimensions_id=None, delivery_terms_id=None, status_code=None, deleted=None, shipping_postal_code=None, email_address=None, invoice_city=None, delivery_name=None, print_status=None, quote_number_series_id=None, id=None, shipping_city=None, payment_info_type_id=None, default_seller_id=None, delivery_term=None, shipping_address_line1=None, currency_code_id=None, invoice_address_line1=None, updated_by=None, update_currency_on_to_order=None, supplier_org_number=None, created_by=None, comment=None, distribution_plan_id=None, invoice_country=None, invoice_country_code=None, invoice_postal_code=None, credit_days=None, customer_org_number=None, invoice_address_line3=None, internal_note=None, shipping_country=None, payment_terms=None, delivery_terms=None, customer=None, default_dimensions=None, items=None, default_seller=None, sellers=None, distribution_plan=None, custom_values=None):  # noqa: E501
        """CustomerQuote - a model defined in Swagger"""  # noqa: E501
        self._shipping_address_line3 = None
        self._use_report_id = None
        self._customer_id = None
        self._invoice_address_line2 = None
        self._inquiry_reference = None
        self._invoice_receiver_name = None
        self._customer_person = None
        self._update_currency_amounts_on_date_change = None
        self._free_txt = None
        self._our_reference = None
        self._quote_number = None
        self._update_currency_on_to_invoice = None
        self._your_reference = None
        self._payment_terms_id = None
        self._shipping_address_line2 = None
        self._payment_term = None
        self._requisition = None
        self._customer_name = None
        self._shipping_country_code = None
        self._sales_person = None
        self._delivery_method = None
        self._default_dimensions_id = None
        self._delivery_terms_id = None
        self._status_code = None
        self._deleted = None
        self._shipping_postal_code = None
        self._email_address = None
        self._invoice_city = None
        self._delivery_name = None
        self._print_status = None
        self._quote_number_series_id = None
        self._id = None
        self._shipping_city = None
        self._payment_info_type_id = None
        self._default_seller_id = None
        self._delivery_term = None
        self._shipping_address_line1 = None
        self._currency_code_id = None
        self._invoice_address_line1 = None
        self._updated_by = None
        self._update_currency_on_to_order = None
        self._supplier_org_number = None
        self._created_by = None
        self._comment = None
        self._distribution_plan_id = None
        self._invoice_country = None
        self._invoice_country_code = None
        self._invoice_postal_code = None
        self._credit_days = None
        self._customer_org_number = None
        self._invoice_address_line3 = None
        self._internal_note = None
        self._shipping_country = None
        self._payment_terms = None
        self._delivery_terms = None
        self._customer = None
        self._default_dimensions = None
        self._items = None
        self._default_seller = None
        self._sellers = None
        self._distribution_plan = None
        self._custom_values = None
        self.discriminator = None
        if shipping_address_line3 is not None:
            self.shipping_address_line3 = shipping_address_line3
        if use_report_id is not None:
            self.use_report_id = use_report_id
        if customer_id is not None:
            self.customer_id = customer_id
        if invoice_address_line2 is not None:
            self.invoice_address_line2 = invoice_address_line2
        if inquiry_reference is not None:
            self.inquiry_reference = inquiry_reference
        if invoice_receiver_name is not None:
            self.invoice_receiver_name = invoice_receiver_name
        if customer_person is not None:
            self.customer_person = customer_person
        if update_currency_amounts_on_date_change is not None:
            self.update_currency_amounts_on_date_change = update_currency_amounts_on_date_change
        if free_txt is not None:
            self.free_txt = free_txt
        if our_reference is not None:
            self.our_reference = our_reference
        if quote_number is not None:
            self.quote_number = quote_number
        if update_currency_on_to_invoice is not None:
            self.update_currency_on_to_invoice = update_currency_on_to_invoice
        if your_reference is not None:
            self.your_reference = your_reference
        if payment_terms_id is not None:
            self.payment_terms_id = payment_terms_id
        if shipping_address_line2 is not None:
            self.shipping_address_line2 = shipping_address_line2
        if payment_term is not None:
            self.payment_term = payment_term
        if requisition is not None:
            self.requisition = requisition
        if customer_name is not None:
            self.customer_name = customer_name
        if shipping_country_code is not None:
            self.shipping_country_code = shipping_country_code
        if sales_person is not None:
            self.sales_person = sales_person
        if delivery_method is not None:
            self.delivery_method = delivery_method
        if default_dimensions_id is not None:
            self.default_dimensions_id = default_dimensions_id
        if delivery_terms_id is not None:
            self.delivery_terms_id = delivery_terms_id
        if status_code is not None:
            self.status_code = status_code
        if deleted is not None:
            self.deleted = deleted
        if shipping_postal_code is not None:
            self.shipping_postal_code = shipping_postal_code
        if email_address is not None:
            self.email_address = email_address
        if invoice_city is not None:
            self.invoice_city = invoice_city
        if delivery_name is not None:
            self.delivery_name = delivery_name
        if print_status is not None:
            self.print_status = print_status
        if quote_number_series_id is not None:
            self.quote_number_series_id = quote_number_series_id
        if id is not None:
            self.id = id
        if shipping_city is not None:
            self.shipping_city = shipping_city
        if payment_info_type_id is not None:
            self.payment_info_type_id = payment_info_type_id
        if default_seller_id is not None:
            self.default_seller_id = default_seller_id
        if delivery_term is not None:
            self.delivery_term = delivery_term
        if shipping_address_line1 is not None:
            self.shipping_address_line1 = shipping_address_line1
        if currency_code_id is not None:
            self.currency_code_id = currency_code_id
        if invoice_address_line1 is not None:
            self.invoice_address_line1 = invoice_address_line1
        if updated_by is not None:
            self.updated_by = updated_by
        if update_currency_on_to_order is not None:
            self.update_currency_on_to_order = update_currency_on_to_order
        if supplier_org_number is not None:
            self.supplier_org_number = supplier_org_number
        if created_by is not None:
            self.created_by = created_by
        if comment is not None:
            self.comment = comment
        if distribution_plan_id is not None:
            self.distribution_plan_id = distribution_plan_id
        if invoice_country is not None:
            self.invoice_country = invoice_country
        if invoice_country_code is not None:
            self.invoice_country_code = invoice_country_code
        if invoice_postal_code is not None:
            self.invoice_postal_code = invoice_postal_code
        if credit_days is not None:
            self.credit_days = credit_days
        if customer_org_number is not None:
            self.customer_org_number = customer_org_number
        if invoice_address_line3 is not None:
            self.invoice_address_line3 = invoice_address_line3
        if internal_note is not None:
            self.internal_note = internal_note
        if shipping_country is not None:
            self.shipping_country = shipping_country
        if payment_terms is not None:
            self.payment_terms = payment_terms
        if delivery_terms is not None:
            self.delivery_terms = delivery_terms
        if customer is not None:
            self.customer = customer
        if default_dimensions is not None:
            self.default_dimensions = default_dimensions
        if items is not None:
            self.items = items
        if default_seller is not None:
            self.default_seller = default_seller
        if sellers is not None:
            self.sellers = sellers
        if distribution_plan is not None:
            self.distribution_plan = distribution_plan
        if custom_values is not None:
            self.custom_values = custom_values

    @property
    def shipping_address_line3(self):
        """Gets the shipping_address_line3 of this CustomerQuote.  # noqa: E501


        :return: The shipping_address_line3 of this CustomerQuote.  # noqa: E501
        :rtype: str
        """
        return self._shipping_address_line3

    @shipping_address_line3.setter
    def shipping_address_line3(self, shipping_address_line3):
        """Sets the shipping_address_line3 of this CustomerQuote.


        :param shipping_address_line3: The shipping_address_line3 of this CustomerQuote.  # noqa: E501
        :type: str
        """

        self._shipping_address_line3 = shipping_address_line3

    @property
    def use_report_id(self):
        """Gets the use_report_id of this CustomerQuote.  # noqa: E501


        :return: The use_report_id of this CustomerQuote.  # noqa: E501
        :rtype: int
        """
        return self._use_report_id

    @use_report_id.setter
    def use_report_id(self, use_report_id):
        """Sets the use_report_id of this CustomerQuote.


        :param use_report_id: The use_report_id of this CustomerQuote.  # noqa: E501
        :type: int
        """

        self._use_report_id = use_report_id

    @property
    def customer_id(self):
        """Gets the customer_id of this CustomerQuote.  # noqa: E501


        :return: The customer_id of this CustomerQuote.  # noqa: E501
        :rtype: int
        """
        return self._customer_id

    @customer_id.setter
    def customer_id(self, customer_id):
        """Sets the customer_id of this CustomerQuote.


        :param customer_id: The customer_id of this CustomerQuote.  # noqa: E501
        :type: int
        """

        self._customer_id = customer_id

    @property
    def invoice_address_line2(self):
        """Gets the invoice_address_line2 of this CustomerQuote.  # noqa: E501


        :return: The invoice_address_line2 of this CustomerQuote.  # noqa: E501
        :rtype: str
        """
        return self._invoice_address_line2

    @invoice_address_line2.setter
    def invoice_address_line2(self, invoice_address_line2):
        """Sets the invoice_address_line2 of this CustomerQuote.


        :param invoice_address_line2: The invoice_address_line2 of this CustomerQuote.  # noqa: E501
        :type: str
        """

        self._invoice_address_line2 = invoice_address_line2

    @property
    def inquiry_reference(self):
        """Gets the inquiry_reference of this CustomerQuote.  # noqa: E501


        :return: The inquiry_reference of this CustomerQuote.  # noqa: E501
        :rtype: int
        """
        return self._inquiry_reference

    @inquiry_reference.setter
    def inquiry_reference(self, inquiry_reference):
        """Sets the inquiry_reference of this CustomerQuote.


        :param inquiry_reference: The inquiry_reference of this CustomerQuote.  # noqa: E501
        :type: int
        """

        self._inquiry_reference = inquiry_reference

    @property
    def invoice_receiver_name(self):
        """Gets the invoice_receiver_name of this CustomerQuote.  # noqa: E501


        :return: The invoice_receiver_name of this CustomerQuote.  # noqa: E501
        :rtype: str
        """
        return self._invoice_receiver_name

    @invoice_receiver_name.setter
    def invoice_receiver_name(self, invoice_receiver_name):
        """Sets the invoice_receiver_name of this CustomerQuote.


        :param invoice_receiver_name: The invoice_receiver_name of this CustomerQuote.  # noqa: E501
        :type: str
        """

        self._invoice_receiver_name = invoice_receiver_name

    @property
    def customer_person(self):
        """Gets the customer_person of this CustomerQuote.  # noqa: E501


        :return: The customer_person of this CustomerQuote.  # noqa: E501
        :rtype: str
        """
        return self._customer_person

    @customer_person.setter
    def customer_person(self, customer_person):
        """Sets the customer_person of this CustomerQuote.


        :param customer_person: The customer_person of this CustomerQuote.  # noqa: E501
        :type: str
        """

        self._customer_person = customer_person

    @property
    def update_currency_amounts_on_date_change(self):
        """Gets the update_currency_amounts_on_date_change of this CustomerQuote.  # noqa: E501


        :return: The update_currency_amounts_on_date_change of this CustomerQuote.  # noqa: E501
        :rtype: bool
        """
        return self._update_currency_amounts_on_date_change

    @update_currency_amounts_on_date_change.setter
    def update_currency_amounts_on_date_change(self, update_currency_amounts_on_date_change):
        """Sets the update_currency_amounts_on_date_change of this CustomerQuote.


        :param update_currency_amounts_on_date_change: The update_currency_amounts_on_date_change of this CustomerQuote.  # noqa: E501
        :type: bool
        """

        self._update_currency_amounts_on_date_change = update_currency_amounts_on_date_change

    @property
    def free_txt(self):
        """Gets the free_txt of this CustomerQuote.  # noqa: E501


        :return: The free_txt of this CustomerQuote.  # noqa: E501
        :rtype: str
        """
        return self._free_txt

    @free_txt.setter
    def free_txt(self, free_txt):
        """Sets the free_txt of this CustomerQuote.


        :param free_txt: The free_txt of this CustomerQuote.  # noqa: E501
        :type: str
        """

        self._free_txt = free_txt

    @property
    def our_reference(self):
        """Gets the our_reference of this CustomerQuote.  # noqa: E501


        :return: The our_reference of this CustomerQuote.  # noqa: E501
        :rtype: str
        """
        return self._our_reference

    @our_reference.setter
    def our_reference(self, our_reference):
        """Sets the our_reference of this CustomerQuote.


        :param our_reference: The our_reference of this CustomerQuote.  # noqa: E501
        :type: str
        """

        self._our_reference = our_reference

    @property
    def quote_number(self):
        """Gets the quote_number of this CustomerQuote.  # noqa: E501


        :return: The quote_number of this CustomerQuote.  # noqa: E501
        :rtype: int
        """
        return self._quote_number

    @quote_number.setter
    def quote_number(self, quote_number):
        """Sets the quote_number of this CustomerQuote.


        :param quote_number: The quote_number of this CustomerQuote.  # noqa: E501
        :type: int
        """

        self._quote_number = quote_number

    @property
    def update_currency_on_to_invoice(self):
        """Gets the update_currency_on_to_invoice of this CustomerQuote.  # noqa: E501


        :return: The update_currency_on_to_invoice of this CustomerQuote.  # noqa: E501
        :rtype: bool
        """
        return self._update_currency_on_to_invoice

    @update_currency_on_to_invoice.setter
    def update_currency_on_to_invoice(self, update_currency_on_to_invoice):
        """Sets the update_currency_on_to_invoice of this CustomerQuote.


        :param update_currency_on_to_invoice: The update_currency_on_to_invoice of this CustomerQuote.  # noqa: E501
        :type: bool
        """

        self._update_currency_on_to_invoice = update_currency_on_to_invoice

    @property
    def your_reference(self):
        """Gets the your_reference of this CustomerQuote.  # noqa: E501


        :return: The your_reference of this CustomerQuote.  # noqa: E501
        :rtype: str
        """
        return self._your_reference

    @your_reference.setter
    def your_reference(self, your_reference):
        """Sets the your_reference of this CustomerQuote.


        :param your_reference: The your_reference of this CustomerQuote.  # noqa: E501
        :type: str
        """

        self._your_reference = your_reference

    @property
    def payment_terms_id(self):
        """Gets the payment_terms_id of this CustomerQuote.  # noqa: E501


        :return: The payment_terms_id of this CustomerQuote.  # noqa: E501
        :rtype: int
        """
        return self._payment_terms_id

    @payment_terms_id.setter
    def payment_terms_id(self, payment_terms_id):
        """Sets the payment_terms_id of this CustomerQuote.


        :param payment_terms_id: The payment_terms_id of this CustomerQuote.  # noqa: E501
        :type: int
        """

        self._payment_terms_id = payment_terms_id

    @property
    def shipping_address_line2(self):
        """Gets the shipping_address_line2 of this CustomerQuote.  # noqa: E501


        :return: The shipping_address_line2 of this CustomerQuote.  # noqa: E501
        :rtype: str
        """
        return self._shipping_address_line2

    @shipping_address_line2.setter
    def shipping_address_line2(self, shipping_address_line2):
        """Sets the shipping_address_line2 of this CustomerQuote.


        :param shipping_address_line2: The shipping_address_line2 of this CustomerQuote.  # noqa: E501
        :type: str
        """

        self._shipping_address_line2 = shipping_address_line2

    @property
    def payment_term(self):
        """Gets the payment_term of this CustomerQuote.  # noqa: E501


        :return: The payment_term of this CustomerQuote.  # noqa: E501
        :rtype: str
        """
        return self._payment_term

    @payment_term.setter
    def payment_term(self, payment_term):
        """Sets the payment_term of this CustomerQuote.


        :param payment_term: The payment_term of this CustomerQuote.  # noqa: E501
        :type: str
        """

        self._payment_term = payment_term

    @property
    def requisition(self):
        """Gets the requisition of this CustomerQuote.  # noqa: E501


        :return: The requisition of this CustomerQuote.  # noqa: E501
        :rtype: str
        """
        return self._requisition

    @requisition.setter
    def requisition(self, requisition):
        """Sets the requisition of this CustomerQuote.


        :param requisition: The requisition of this CustomerQuote.  # noqa: E501
        :type: str
        """

        self._requisition = requisition

    @property
    def customer_name(self):
        """Gets the customer_name of this CustomerQuote.  # noqa: E501


        :return: The customer_name of this CustomerQuote.  # noqa: E501
        :rtype: str
        """
        return self._customer_name

    @customer_name.setter
    def customer_name(self, customer_name):
        """Sets the customer_name of this CustomerQuote.


        :param customer_name: The customer_name of this CustomerQuote.  # noqa: E501
        :type: str
        """

        self._customer_name = customer_name

    @property
    def shipping_country_code(self):
        """Gets the shipping_country_code of this CustomerQuote.  # noqa: E501


        :return: The shipping_country_code of this CustomerQuote.  # noqa: E501
        :rtype: str
        """
        return self._shipping_country_code

    @shipping_country_code.setter
    def shipping_country_code(self, shipping_country_code):
        """Sets the shipping_country_code of this CustomerQuote.


        :param shipping_country_code: The shipping_country_code of this CustomerQuote.  # noqa: E501
        :type: str
        """

        self._shipping_country_code = shipping_country_code

    @property
    def sales_person(self):
        """Gets the sales_person of this CustomerQuote.  # noqa: E501


        :return: The sales_person of this CustomerQuote.  # noqa: E501
        :rtype: str
        """
        return self._sales_person

    @sales_person.setter
    def sales_person(self, sales_person):
        """Sets the sales_person of this CustomerQuote.


        :param sales_person: The sales_person of this CustomerQuote.  # noqa: E501
        :type: str
        """

        self._sales_person = sales_person

    @property
    def delivery_method(self):
        """Gets the delivery_method of this CustomerQuote.  # noqa: E501


        :return: The delivery_method of this CustomerQuote.  # noqa: E501
        :rtype: str
        """
        return self._delivery_method

    @delivery_method.setter
    def delivery_method(self, delivery_method):
        """Sets the delivery_method of this CustomerQuote.


        :param delivery_method: The delivery_method of this CustomerQuote.  # noqa: E501
        :type: str
        """

        self._delivery_method = delivery_method

    @property
    def default_dimensions_id(self):
        """Gets the default_dimensions_id of this CustomerQuote.  # noqa: E501


        :return: The default_dimensions_id of this CustomerQuote.  # noqa: E501
        :rtype: int
        """
        return self._default_dimensions_id

    @default_dimensions_id.setter
    def default_dimensions_id(self, default_dimensions_id):
        """Sets the default_dimensions_id of this CustomerQuote.


        :param default_dimensions_id: The default_dimensions_id of this CustomerQuote.  # noqa: E501
        :type: int
        """

        self._default_dimensions_id = default_dimensions_id

    @property
    def delivery_terms_id(self):
        """Gets the delivery_terms_id of this CustomerQuote.  # noqa: E501


        :return: The delivery_terms_id of this CustomerQuote.  # noqa: E501
        :rtype: int
        """
        return self._delivery_terms_id

    @delivery_terms_id.setter
    def delivery_terms_id(self, delivery_terms_id):
        """Sets the delivery_terms_id of this CustomerQuote.


        :param delivery_terms_id: The delivery_terms_id of this CustomerQuote.  # noqa: E501
        :type: int
        """

        self._delivery_terms_id = delivery_terms_id

    @property
    def status_code(self):
        """Gets the status_code of this CustomerQuote.  # noqa: E501


        :return: The status_code of this CustomerQuote.  # noqa: E501
        :rtype: int
        """
        return self._status_code

    @status_code.setter
    def status_code(self, status_code):
        """Sets the status_code of this CustomerQuote.


        :param status_code: The status_code of this CustomerQuote.  # noqa: E501
        :type: int
        """

        self._status_code = status_code

    @property
    def deleted(self):
        """Gets the deleted of this CustomerQuote.  # noqa: E501


        :return: The deleted of this CustomerQuote.  # noqa: E501
        :rtype: bool
        """
        return self._deleted

    @deleted.setter
    def deleted(self, deleted):
        """Sets the deleted of this CustomerQuote.


        :param deleted: The deleted of this CustomerQuote.  # noqa: E501
        :type: bool
        """

        self._deleted = deleted

    @property
    def shipping_postal_code(self):
        """Gets the shipping_postal_code of this CustomerQuote.  # noqa: E501


        :return: The shipping_postal_code of this CustomerQuote.  # noqa: E501
        :rtype: str
        """
        return self._shipping_postal_code

    @shipping_postal_code.setter
    def shipping_postal_code(self, shipping_postal_code):
        """Sets the shipping_postal_code of this CustomerQuote.


        :param shipping_postal_code: The shipping_postal_code of this CustomerQuote.  # noqa: E501
        :type: str
        """

        self._shipping_postal_code = shipping_postal_code

    @property
    def email_address(self):
        """Gets the email_address of this CustomerQuote.  # noqa: E501


        :return: The email_address of this CustomerQuote.  # noqa: E501
        :rtype: str
        """
        return self._email_address

    @email_address.setter
    def email_address(self, email_address):
        """Sets the email_address of this CustomerQuote.


        :param email_address: The email_address of this CustomerQuote.  # noqa: E501
        :type: str
        """

        self._email_address = email_address

    @property
    def invoice_city(self):
        """Gets the invoice_city of this CustomerQuote.  # noqa: E501


        :return: The invoice_city of this CustomerQuote.  # noqa: E501
        :rtype: str
        """
        return self._invoice_city

    @invoice_city.setter
    def invoice_city(self, invoice_city):
        """Sets the invoice_city of this CustomerQuote.


        :param invoice_city: The invoice_city of this CustomerQuote.  # noqa: E501
        :type: str
        """

        self._invoice_city = invoice_city

    @property
    def delivery_name(self):
        """Gets the delivery_name of this CustomerQuote.  # noqa: E501


        :return: The delivery_name of this CustomerQuote.  # noqa: E501
        :rtype: str
        """
        return self._delivery_name

    @delivery_name.setter
    def delivery_name(self, delivery_name):
        """Sets the delivery_name of this CustomerQuote.


        :param delivery_name: The delivery_name of this CustomerQuote.  # noqa: E501
        :type: str
        """

        self._delivery_name = delivery_name

    @property
    def print_status(self):
        """Gets the print_status of this CustomerQuote.  # noqa: E501


        :return: The print_status of this CustomerQuote.  # noqa: E501
        :rtype: int
        """
        return self._print_status

    @print_status.setter
    def print_status(self, print_status):
        """Sets the print_status of this CustomerQuote.


        :param print_status: The print_status of this CustomerQuote.  # noqa: E501
        :type: int
        """

        self._print_status = print_status

    @property
    def quote_number_series_id(self):
        """Gets the quote_number_series_id of this CustomerQuote.  # noqa: E501


        :return: The quote_number_series_id of this CustomerQuote.  # noqa: E501
        :rtype: int
        """
        return self._quote_number_series_id

    @quote_number_series_id.setter
    def quote_number_series_id(self, quote_number_series_id):
        """Sets the quote_number_series_id of this CustomerQuote.


        :param quote_number_series_id: The quote_number_series_id of this CustomerQuote.  # noqa: E501
        :type: int
        """

        self._quote_number_series_id = quote_number_series_id

    @property
    def id(self):
        """Gets the id of this CustomerQuote.  # noqa: E501


        :return: The id of this CustomerQuote.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CustomerQuote.


        :param id: The id of this CustomerQuote.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def shipping_city(self):
        """Gets the shipping_city of this CustomerQuote.  # noqa: E501


        :return: The shipping_city of this CustomerQuote.  # noqa: E501
        :rtype: str
        """
        return self._shipping_city

    @shipping_city.setter
    def shipping_city(self, shipping_city):
        """Sets the shipping_city of this CustomerQuote.


        :param shipping_city: The shipping_city of this CustomerQuote.  # noqa: E501
        :type: str
        """

        self._shipping_city = shipping_city

    @property
    def payment_info_type_id(self):
        """Gets the payment_info_type_id of this CustomerQuote.  # noqa: E501


        :return: The payment_info_type_id of this CustomerQuote.  # noqa: E501
        :rtype: int
        """
        return self._payment_info_type_id

    @payment_info_type_id.setter
    def payment_info_type_id(self, payment_info_type_id):
        """Sets the payment_info_type_id of this CustomerQuote.


        :param payment_info_type_id: The payment_info_type_id of this CustomerQuote.  # noqa: E501
        :type: int
        """

        self._payment_info_type_id = payment_info_type_id

    @property
    def default_seller_id(self):
        """Gets the default_seller_id of this CustomerQuote.  # noqa: E501


        :return: The default_seller_id of this CustomerQuote.  # noqa: E501
        :rtype: int
        """
        return self._default_seller_id

    @default_seller_id.setter
    def default_seller_id(self, default_seller_id):
        """Sets the default_seller_id of this CustomerQuote.


        :param default_seller_id: The default_seller_id of this CustomerQuote.  # noqa: E501
        :type: int
        """

        self._default_seller_id = default_seller_id

    @property
    def delivery_term(self):
        """Gets the delivery_term of this CustomerQuote.  # noqa: E501


        :return: The delivery_term of this CustomerQuote.  # noqa: E501
        :rtype: str
        """
        return self._delivery_term

    @delivery_term.setter
    def delivery_term(self, delivery_term):
        """Sets the delivery_term of this CustomerQuote.


        :param delivery_term: The delivery_term of this CustomerQuote.  # noqa: E501
        :type: str
        """

        self._delivery_term = delivery_term

    @property
    def shipping_address_line1(self):
        """Gets the shipping_address_line1 of this CustomerQuote.  # noqa: E501


        :return: The shipping_address_line1 of this CustomerQuote.  # noqa: E501
        :rtype: str
        """
        return self._shipping_address_line1

    @shipping_address_line1.setter
    def shipping_address_line1(self, shipping_address_line1):
        """Sets the shipping_address_line1 of this CustomerQuote.


        :param shipping_address_line1: The shipping_address_line1 of this CustomerQuote.  # noqa: E501
        :type: str
        """

        self._shipping_address_line1 = shipping_address_line1

    @property
    def currency_code_id(self):
        """Gets the currency_code_id of this CustomerQuote.  # noqa: E501


        :return: The currency_code_id of this CustomerQuote.  # noqa: E501
        :rtype: int
        """
        return self._currency_code_id

    @currency_code_id.setter
    def currency_code_id(self, currency_code_id):
        """Sets the currency_code_id of this CustomerQuote.


        :param currency_code_id: The currency_code_id of this CustomerQuote.  # noqa: E501
        :type: int
        """

        self._currency_code_id = currency_code_id

    @property
    def invoice_address_line1(self):
        """Gets the invoice_address_line1 of this CustomerQuote.  # noqa: E501


        :return: The invoice_address_line1 of this CustomerQuote.  # noqa: E501
        :rtype: str
        """
        return self._invoice_address_line1

    @invoice_address_line1.setter
    def invoice_address_line1(self, invoice_address_line1):
        """Sets the invoice_address_line1 of this CustomerQuote.


        :param invoice_address_line1: The invoice_address_line1 of this CustomerQuote.  # noqa: E501
        :type: str
        """

        self._invoice_address_line1 = invoice_address_line1

    @property
    def updated_by(self):
        """Gets the updated_by of this CustomerQuote.  # noqa: E501


        :return: The updated_by of this CustomerQuote.  # noqa: E501
        :rtype: str
        """
        return self._updated_by

    @updated_by.setter
    def updated_by(self, updated_by):
        """Sets the updated_by of this CustomerQuote.


        :param updated_by: The updated_by of this CustomerQuote.  # noqa: E501
        :type: str
        """

        self._updated_by = updated_by

    @property
    def update_currency_on_to_order(self):
        """Gets the update_currency_on_to_order of this CustomerQuote.  # noqa: E501


        :return: The update_currency_on_to_order of this CustomerQuote.  # noqa: E501
        :rtype: bool
        """
        return self._update_currency_on_to_order

    @update_currency_on_to_order.setter
    def update_currency_on_to_order(self, update_currency_on_to_order):
        """Sets the update_currency_on_to_order of this CustomerQuote.


        :param update_currency_on_to_order: The update_currency_on_to_order of this CustomerQuote.  # noqa: E501
        :type: bool
        """

        self._update_currency_on_to_order = update_currency_on_to_order

    @property
    def supplier_org_number(self):
        """Gets the supplier_org_number of this CustomerQuote.  # noqa: E501


        :return: The supplier_org_number of this CustomerQuote.  # noqa: E501
        :rtype: str
        """
        return self._supplier_org_number

    @supplier_org_number.setter
    def supplier_org_number(self, supplier_org_number):
        """Sets the supplier_org_number of this CustomerQuote.


        :param supplier_org_number: The supplier_org_number of this CustomerQuote.  # noqa: E501
        :type: str
        """

        self._supplier_org_number = supplier_org_number

    @property
    def created_by(self):
        """Gets the created_by of this CustomerQuote.  # noqa: E501


        :return: The created_by of this CustomerQuote.  # noqa: E501
        :rtype: str
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this CustomerQuote.


        :param created_by: The created_by of this CustomerQuote.  # noqa: E501
        :type: str
        """

        self._created_by = created_by

    @property
    def comment(self):
        """Gets the comment of this CustomerQuote.  # noqa: E501


        :return: The comment of this CustomerQuote.  # noqa: E501
        :rtype: str
        """
        return self._comment

    @comment.setter
    def comment(self, comment):
        """Sets the comment of this CustomerQuote.


        :param comment: The comment of this CustomerQuote.  # noqa: E501
        :type: str
        """

        self._comment = comment

    @property
    def distribution_plan_id(self):
        """Gets the distribution_plan_id of this CustomerQuote.  # noqa: E501


        :return: The distribution_plan_id of this CustomerQuote.  # noqa: E501
        :rtype: int
        """
        return self._distribution_plan_id

    @distribution_plan_id.setter
    def distribution_plan_id(self, distribution_plan_id):
        """Sets the distribution_plan_id of this CustomerQuote.


        :param distribution_plan_id: The distribution_plan_id of this CustomerQuote.  # noqa: E501
        :type: int
        """

        self._distribution_plan_id = distribution_plan_id

    @property
    def invoice_country(self):
        """Gets the invoice_country of this CustomerQuote.  # noqa: E501


        :return: The invoice_country of this CustomerQuote.  # noqa: E501
        :rtype: str
        """
        return self._invoice_country

    @invoice_country.setter
    def invoice_country(self, invoice_country):
        """Sets the invoice_country of this CustomerQuote.


        :param invoice_country: The invoice_country of this CustomerQuote.  # noqa: E501
        :type: str
        """

        self._invoice_country = invoice_country

    @property
    def invoice_country_code(self):
        """Gets the invoice_country_code of this CustomerQuote.  # noqa: E501


        :return: The invoice_country_code of this CustomerQuote.  # noqa: E501
        :rtype: str
        """
        return self._invoice_country_code

    @invoice_country_code.setter
    def invoice_country_code(self, invoice_country_code):
        """Sets the invoice_country_code of this CustomerQuote.


        :param invoice_country_code: The invoice_country_code of this CustomerQuote.  # noqa: E501
        :type: str
        """

        self._invoice_country_code = invoice_country_code

    @property
    def invoice_postal_code(self):
        """Gets the invoice_postal_code of this CustomerQuote.  # noqa: E501


        :return: The invoice_postal_code of this CustomerQuote.  # noqa: E501
        :rtype: str
        """
        return self._invoice_postal_code

    @invoice_postal_code.setter
    def invoice_postal_code(self, invoice_postal_code):
        """Sets the invoice_postal_code of this CustomerQuote.


        :param invoice_postal_code: The invoice_postal_code of this CustomerQuote.  # noqa: E501
        :type: str
        """

        self._invoice_postal_code = invoice_postal_code

    @property
    def credit_days(self):
        """Gets the credit_days of this CustomerQuote.  # noqa: E501


        :return: The credit_days of this CustomerQuote.  # noqa: E501
        :rtype: int
        """
        return self._credit_days

    @credit_days.setter
    def credit_days(self, credit_days):
        """Sets the credit_days of this CustomerQuote.


        :param credit_days: The credit_days of this CustomerQuote.  # noqa: E501
        :type: int
        """

        self._credit_days = credit_days

    @property
    def customer_org_number(self):
        """Gets the customer_org_number of this CustomerQuote.  # noqa: E501


        :return: The customer_org_number of this CustomerQuote.  # noqa: E501
        :rtype: str
        """
        return self._customer_org_number

    @customer_org_number.setter
    def customer_org_number(self, customer_org_number):
        """Sets the customer_org_number of this CustomerQuote.


        :param customer_org_number: The customer_org_number of this CustomerQuote.  # noqa: E501
        :type: str
        """

        self._customer_org_number = customer_org_number

    @property
    def invoice_address_line3(self):
        """Gets the invoice_address_line3 of this CustomerQuote.  # noqa: E501


        :return: The invoice_address_line3 of this CustomerQuote.  # noqa: E501
        :rtype: str
        """
        return self._invoice_address_line3

    @invoice_address_line3.setter
    def invoice_address_line3(self, invoice_address_line3):
        """Sets the invoice_address_line3 of this CustomerQuote.


        :param invoice_address_line3: The invoice_address_line3 of this CustomerQuote.  # noqa: E501
        :type: str
        """

        self._invoice_address_line3 = invoice_address_line3

    @property
    def internal_note(self):
        """Gets the internal_note of this CustomerQuote.  # noqa: E501


        :return: The internal_note of this CustomerQuote.  # noqa: E501
        :rtype: str
        """
        return self._internal_note

    @internal_note.setter
    def internal_note(self, internal_note):
        """Sets the internal_note of this CustomerQuote.


        :param internal_note: The internal_note of this CustomerQuote.  # noqa: E501
        :type: str
        """

        self._internal_note = internal_note

    @property
    def shipping_country(self):
        """Gets the shipping_country of this CustomerQuote.  # noqa: E501


        :return: The shipping_country of this CustomerQuote.  # noqa: E501
        :rtype: str
        """
        return self._shipping_country

    @shipping_country.setter
    def shipping_country(self, shipping_country):
        """Sets the shipping_country of this CustomerQuote.


        :param shipping_country: The shipping_country of this CustomerQuote.  # noqa: E501
        :type: str
        """

        self._shipping_country = shipping_country

    @property
    def payment_terms(self):
        """Gets the payment_terms of this CustomerQuote.  # noqa: E501


        :return: The payment_terms of this CustomerQuote.  # noqa: E501
        :rtype: Terms
        """
        return self._payment_terms

    @payment_terms.setter
    def payment_terms(self, payment_terms):
        """Sets the payment_terms of this CustomerQuote.


        :param payment_terms: The payment_terms of this CustomerQuote.  # noqa: E501
        :type: Terms
        """

        self._payment_terms = payment_terms

    @property
    def delivery_terms(self):
        """Gets the delivery_terms of this CustomerQuote.  # noqa: E501


        :return: The delivery_terms of this CustomerQuote.  # noqa: E501
        :rtype: Terms
        """
        return self._delivery_terms

    @delivery_terms.setter
    def delivery_terms(self, delivery_terms):
        """Sets the delivery_terms of this CustomerQuote.


        :param delivery_terms: The delivery_terms of this CustomerQuote.  # noqa: E501
        :type: Terms
        """

        self._delivery_terms = delivery_terms

    @property
    def customer(self):
        """Gets the customer of this CustomerQuote.  # noqa: E501


        :return: The customer of this CustomerQuote.  # noqa: E501
        :rtype: Customer
        """
        return self._customer

    @customer.setter
    def customer(self, customer):
        """Sets the customer of this CustomerQuote.


        :param customer: The customer of this CustomerQuote.  # noqa: E501
        :type: Customer
        """

        self._customer = customer

    @property
    def default_dimensions(self):
        """Gets the default_dimensions of this CustomerQuote.  # noqa: E501


        :return: The default_dimensions of this CustomerQuote.  # noqa: E501
        :rtype: Dimensions
        """
        return self._default_dimensions

    @default_dimensions.setter
    def default_dimensions(self, default_dimensions):
        """Sets the default_dimensions of this CustomerQuote.


        :param default_dimensions: The default_dimensions of this CustomerQuote.  # noqa: E501
        :type: Dimensions
        """

        self._default_dimensions = default_dimensions

    @property
    def items(self):
        """Gets the items of this CustomerQuote.  # noqa: E501


        :return: The items of this CustomerQuote.  # noqa: E501
        :rtype: list[CustomerQuoteItem]
        """
        return self._items

    @items.setter
    def items(self, items):
        """Sets the items of this CustomerQuote.


        :param items: The items of this CustomerQuote.  # noqa: E501
        :type: list[CustomerQuoteItem]
        """

        self._items = items

    @property
    def default_seller(self):
        """Gets the default_seller of this CustomerQuote.  # noqa: E501


        :return: The default_seller of this CustomerQuote.  # noqa: E501
        :rtype: Seller
        """
        return self._default_seller

    @default_seller.setter
    def default_seller(self, default_seller):
        """Sets the default_seller of this CustomerQuote.


        :param default_seller: The default_seller of this CustomerQuote.  # noqa: E501
        :type: Seller
        """

        self._default_seller = default_seller

    @property
    def sellers(self):
        """Gets the sellers of this CustomerQuote.  # noqa: E501


        :return: The sellers of this CustomerQuote.  # noqa: E501
        :rtype: list[SellerLink]
        """
        return self._sellers

    @sellers.setter
    def sellers(self, sellers):
        """Sets the sellers of this CustomerQuote.


        :param sellers: The sellers of this CustomerQuote.  # noqa: E501
        :type: list[SellerLink]
        """

        self._sellers = sellers

    @property
    def distribution_plan(self):
        """Gets the distribution_plan of this CustomerQuote.  # noqa: E501


        :return: The distribution_plan of this CustomerQuote.  # noqa: E501
        :rtype: DistributionPlan
        """
        return self._distribution_plan

    @distribution_plan.setter
    def distribution_plan(self, distribution_plan):
        """Sets the distribution_plan of this CustomerQuote.


        :param distribution_plan: The distribution_plan of this CustomerQuote.  # noqa: E501
        :type: DistributionPlan
        """

        self._distribution_plan = distribution_plan

    @property
    def custom_values(self):
        """Gets the custom_values of this CustomerQuote.  # noqa: E501


        :return: The custom_values of this CustomerQuote.  # noqa: E501
        :rtype: CustomValues
        """
        return self._custom_values

    @custom_values.setter
    def custom_values(self, custom_values):
        """Sets the custom_values of this CustomerQuote.


        :param custom_values: The custom_values of this CustomerQuote.  # noqa: E501
        :type: CustomValues
        """

        self._custom_values = custom_values

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(CustomerQuote, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CustomerQuote):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other

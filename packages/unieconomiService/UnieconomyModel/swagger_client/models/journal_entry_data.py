# coding: utf-8

"""

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class JournalEntryData(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'debit_vat_type_id': 'int',
        'post_post_journal_entry_line_id': 'int',
        'number_series_task_id': 'int',
        'description': 'str',
        'customer_invoice_id': 'int',
        'customer_order_id': 'int',
        'debit_account_id': 'int',
        'credit_account_id': 'int',
        'invoice_number': 'str',
        'debit_account_number': 'int',
        'journal_entry_id': 'int',
        'status_code': 'int',
        'number_series_id': 'int',
        'supplier_invoice_no': 'str',
        'currency_id': 'int',
        'credit_account_number': 'int',
        'journal_entry_no': 'str',
        'credit_vat_type_id': 'int',
        'payment_id': 'str',
        'journal_entry_data_accrual_id': 'int',
        'vat_deduction_percent': 'int',
        'supplier_invoice_id': 'int',
        'currency_code': 'CurrencyCode',
        'debit_account': 'Account',
        'debit_vat_type': 'VatType',
        'credit_account': 'Account',
        'credit_vat_type': 'VatType',
        'dimensions': 'Dimensions',
        'journal_entry_payment_data': 'JournalEntryPaymentData',
        'journal_entry_data_accrual': 'Accrual',
        'custom_values': 'CustomValues'
    }

    attribute_map = {
        'debit_vat_type_id': 'DebitVatTypeID',
        'post_post_journal_entry_line_id': 'PostPostJournalEntryLineID',
        'number_series_task_id': 'NumberSeriesTaskID',
        'description': 'Description',
        'customer_invoice_id': 'CustomerInvoiceID',
        'customer_order_id': 'CustomerOrderID',
        'debit_account_id': 'DebitAccountID',
        'credit_account_id': 'CreditAccountID',
        'invoice_number': 'InvoiceNumber',
        'debit_account_number': 'DebitAccountNumber',
        'journal_entry_id': 'JournalEntryID',
        'status_code': 'StatusCode',
        'number_series_id': 'NumberSeriesID',
        'supplier_invoice_no': 'SupplierInvoiceNo',
        'currency_id': 'CurrencyID',
        'credit_account_number': 'CreditAccountNumber',
        'journal_entry_no': 'JournalEntryNo',
        'credit_vat_type_id': 'CreditVatTypeID',
        'payment_id': 'PaymentID',
        'journal_entry_data_accrual_id': 'JournalEntryDataAccrualID',
        'vat_deduction_percent': 'VatDeductionPercent',
        'supplier_invoice_id': 'SupplierInvoiceID',
        'currency_code': 'CurrencyCode',
        'debit_account': 'DebitAccount',
        'debit_vat_type': 'DebitVatType',
        'credit_account': 'CreditAccount',
        'credit_vat_type': 'CreditVatType',
        'dimensions': 'Dimensions',
        'journal_entry_payment_data': 'JournalEntryPaymentData',
        'journal_entry_data_accrual': 'JournalEntryDataAccrual',
        'custom_values': 'CustomValues'
    }

    def __init__(self, debit_vat_type_id=None, post_post_journal_entry_line_id=None, number_series_task_id=None, description=None, customer_invoice_id=None, customer_order_id=None, debit_account_id=None, credit_account_id=None, invoice_number=None, debit_account_number=None, journal_entry_id=None, status_code=None, number_series_id=None, supplier_invoice_no=None, currency_id=None, credit_account_number=None, journal_entry_no=None, credit_vat_type_id=None, payment_id=None, journal_entry_data_accrual_id=None, vat_deduction_percent=None, supplier_invoice_id=None, currency_code=None, debit_account=None, debit_vat_type=None, credit_account=None, credit_vat_type=None, dimensions=None, journal_entry_payment_data=None, journal_entry_data_accrual=None, custom_values=None):  # noqa: E501
        """JournalEntryData - a model defined in Swagger"""  # noqa: E501
        self._debit_vat_type_id = None
        self._post_post_journal_entry_line_id = None
        self._number_series_task_id = None
        self._description = None
        self._customer_invoice_id = None
        self._customer_order_id = None
        self._debit_account_id = None
        self._credit_account_id = None
        self._invoice_number = None
        self._debit_account_number = None
        self._journal_entry_id = None
        self._status_code = None
        self._number_series_id = None
        self._supplier_invoice_no = None
        self._currency_id = None
        self._credit_account_number = None
        self._journal_entry_no = None
        self._credit_vat_type_id = None
        self._payment_id = None
        self._journal_entry_data_accrual_id = None
        self._vat_deduction_percent = None
        self._supplier_invoice_id = None
        self._currency_code = None
        self._debit_account = None
        self._debit_vat_type = None
        self._credit_account = None
        self._credit_vat_type = None
        self._dimensions = None
        self._journal_entry_payment_data = None
        self._journal_entry_data_accrual = None
        self._custom_values = None
        self.discriminator = None
        if debit_vat_type_id is not None:
            self.debit_vat_type_id = debit_vat_type_id
        if post_post_journal_entry_line_id is not None:
            self.post_post_journal_entry_line_id = post_post_journal_entry_line_id
        if number_series_task_id is not None:
            self.number_series_task_id = number_series_task_id
        if description is not None:
            self.description = description
        if customer_invoice_id is not None:
            self.customer_invoice_id = customer_invoice_id
        if customer_order_id is not None:
            self.customer_order_id = customer_order_id
        if debit_account_id is not None:
            self.debit_account_id = debit_account_id
        if credit_account_id is not None:
            self.credit_account_id = credit_account_id
        if invoice_number is not None:
            self.invoice_number = invoice_number
        if debit_account_number is not None:
            self.debit_account_number = debit_account_number
        if journal_entry_id is not None:
            self.journal_entry_id = journal_entry_id
        if status_code is not None:
            self.status_code = status_code
        if number_series_id is not None:
            self.number_series_id = number_series_id
        if supplier_invoice_no is not None:
            self.supplier_invoice_no = supplier_invoice_no
        if currency_id is not None:
            self.currency_id = currency_id
        if credit_account_number is not None:
            self.credit_account_number = credit_account_number
        if journal_entry_no is not None:
            self.journal_entry_no = journal_entry_no
        if credit_vat_type_id is not None:
            self.credit_vat_type_id = credit_vat_type_id
        if payment_id is not None:
            self.payment_id = payment_id
        if journal_entry_data_accrual_id is not None:
            self.journal_entry_data_accrual_id = journal_entry_data_accrual_id
        if vat_deduction_percent is not None:
            self.vat_deduction_percent = vat_deduction_percent
        if supplier_invoice_id is not None:
            self.supplier_invoice_id = supplier_invoice_id
        if currency_code is not None:
            self.currency_code = currency_code
        if debit_account is not None:
            self.debit_account = debit_account
        if debit_vat_type is not None:
            self.debit_vat_type = debit_vat_type
        if credit_account is not None:
            self.credit_account = credit_account
        if credit_vat_type is not None:
            self.credit_vat_type = credit_vat_type
        if dimensions is not None:
            self.dimensions = dimensions
        if journal_entry_payment_data is not None:
            self.journal_entry_payment_data = journal_entry_payment_data
        if journal_entry_data_accrual is not None:
            self.journal_entry_data_accrual = journal_entry_data_accrual
        if custom_values is not None:
            self.custom_values = custom_values

    @property
    def debit_vat_type_id(self):
        """Gets the debit_vat_type_id of this JournalEntryData.  # noqa: E501


        :return: The debit_vat_type_id of this JournalEntryData.  # noqa: E501
        :rtype: int
        """
        return self._debit_vat_type_id

    @debit_vat_type_id.setter
    def debit_vat_type_id(self, debit_vat_type_id):
        """Sets the debit_vat_type_id of this JournalEntryData.


        :param debit_vat_type_id: The debit_vat_type_id of this JournalEntryData.  # noqa: E501
        :type: int
        """

        self._debit_vat_type_id = debit_vat_type_id

    @property
    def post_post_journal_entry_line_id(self):
        """Gets the post_post_journal_entry_line_id of this JournalEntryData.  # noqa: E501


        :return: The post_post_journal_entry_line_id of this JournalEntryData.  # noqa: E501
        :rtype: int
        """
        return self._post_post_journal_entry_line_id

    @post_post_journal_entry_line_id.setter
    def post_post_journal_entry_line_id(self, post_post_journal_entry_line_id):
        """Sets the post_post_journal_entry_line_id of this JournalEntryData.


        :param post_post_journal_entry_line_id: The post_post_journal_entry_line_id of this JournalEntryData.  # noqa: E501
        :type: int
        """

        self._post_post_journal_entry_line_id = post_post_journal_entry_line_id

    @property
    def number_series_task_id(self):
        """Gets the number_series_task_id of this JournalEntryData.  # noqa: E501


        :return: The number_series_task_id of this JournalEntryData.  # noqa: E501
        :rtype: int
        """
        return self._number_series_task_id

    @number_series_task_id.setter
    def number_series_task_id(self, number_series_task_id):
        """Sets the number_series_task_id of this JournalEntryData.


        :param number_series_task_id: The number_series_task_id of this JournalEntryData.  # noqa: E501
        :type: int
        """

        self._number_series_task_id = number_series_task_id

    @property
    def description(self):
        """Gets the description of this JournalEntryData.  # noqa: E501


        :return: The description of this JournalEntryData.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this JournalEntryData.


        :param description: The description of this JournalEntryData.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def customer_invoice_id(self):
        """Gets the customer_invoice_id of this JournalEntryData.  # noqa: E501


        :return: The customer_invoice_id of this JournalEntryData.  # noqa: E501
        :rtype: int
        """
        return self._customer_invoice_id

    @customer_invoice_id.setter
    def customer_invoice_id(self, customer_invoice_id):
        """Sets the customer_invoice_id of this JournalEntryData.


        :param customer_invoice_id: The customer_invoice_id of this JournalEntryData.  # noqa: E501
        :type: int
        """

        self._customer_invoice_id = customer_invoice_id

    @property
    def customer_order_id(self):
        """Gets the customer_order_id of this JournalEntryData.  # noqa: E501


        :return: The customer_order_id of this JournalEntryData.  # noqa: E501
        :rtype: int
        """
        return self._customer_order_id

    @customer_order_id.setter
    def customer_order_id(self, customer_order_id):
        """Sets the customer_order_id of this JournalEntryData.


        :param customer_order_id: The customer_order_id of this JournalEntryData.  # noqa: E501
        :type: int
        """

        self._customer_order_id = customer_order_id

    @property
    def debit_account_id(self):
        """Gets the debit_account_id of this JournalEntryData.  # noqa: E501


        :return: The debit_account_id of this JournalEntryData.  # noqa: E501
        :rtype: int
        """
        return self._debit_account_id

    @debit_account_id.setter
    def debit_account_id(self, debit_account_id):
        """Sets the debit_account_id of this JournalEntryData.


        :param debit_account_id: The debit_account_id of this JournalEntryData.  # noqa: E501
        :type: int
        """

        self._debit_account_id = debit_account_id

    @property
    def credit_account_id(self):
        """Gets the credit_account_id of this JournalEntryData.  # noqa: E501


        :return: The credit_account_id of this JournalEntryData.  # noqa: E501
        :rtype: int
        """
        return self._credit_account_id

    @credit_account_id.setter
    def credit_account_id(self, credit_account_id):
        """Sets the credit_account_id of this JournalEntryData.


        :param credit_account_id: The credit_account_id of this JournalEntryData.  # noqa: E501
        :type: int
        """

        self._credit_account_id = credit_account_id

    @property
    def invoice_number(self):
        """Gets the invoice_number of this JournalEntryData.  # noqa: E501


        :return: The invoice_number of this JournalEntryData.  # noqa: E501
        :rtype: str
        """
        return self._invoice_number

    @invoice_number.setter
    def invoice_number(self, invoice_number):
        """Sets the invoice_number of this JournalEntryData.


        :param invoice_number: The invoice_number of this JournalEntryData.  # noqa: E501
        :type: str
        """

        self._invoice_number = invoice_number

    @property
    def debit_account_number(self):
        """Gets the debit_account_number of this JournalEntryData.  # noqa: E501


        :return: The debit_account_number of this JournalEntryData.  # noqa: E501
        :rtype: int
        """
        return self._debit_account_number

    @debit_account_number.setter
    def debit_account_number(self, debit_account_number):
        """Sets the debit_account_number of this JournalEntryData.


        :param debit_account_number: The debit_account_number of this JournalEntryData.  # noqa: E501
        :type: int
        """

        self._debit_account_number = debit_account_number

    @property
    def journal_entry_id(self):
        """Gets the journal_entry_id of this JournalEntryData.  # noqa: E501


        :return: The journal_entry_id of this JournalEntryData.  # noqa: E501
        :rtype: int
        """
        return self._journal_entry_id

    @journal_entry_id.setter
    def journal_entry_id(self, journal_entry_id):
        """Sets the journal_entry_id of this JournalEntryData.


        :param journal_entry_id: The journal_entry_id of this JournalEntryData.  # noqa: E501
        :type: int
        """

        self._journal_entry_id = journal_entry_id

    @property
    def status_code(self):
        """Gets the status_code of this JournalEntryData.  # noqa: E501


        :return: The status_code of this JournalEntryData.  # noqa: E501
        :rtype: int
        """
        return self._status_code

    @status_code.setter
    def status_code(self, status_code):
        """Sets the status_code of this JournalEntryData.


        :param status_code: The status_code of this JournalEntryData.  # noqa: E501
        :type: int
        """

        self._status_code = status_code

    @property
    def number_series_id(self):
        """Gets the number_series_id of this JournalEntryData.  # noqa: E501


        :return: The number_series_id of this JournalEntryData.  # noqa: E501
        :rtype: int
        """
        return self._number_series_id

    @number_series_id.setter
    def number_series_id(self, number_series_id):
        """Sets the number_series_id of this JournalEntryData.


        :param number_series_id: The number_series_id of this JournalEntryData.  # noqa: E501
        :type: int
        """

        self._number_series_id = number_series_id

    @property
    def supplier_invoice_no(self):
        """Gets the supplier_invoice_no of this JournalEntryData.  # noqa: E501


        :return: The supplier_invoice_no of this JournalEntryData.  # noqa: E501
        :rtype: str
        """
        return self._supplier_invoice_no

    @supplier_invoice_no.setter
    def supplier_invoice_no(self, supplier_invoice_no):
        """Sets the supplier_invoice_no of this JournalEntryData.


        :param supplier_invoice_no: The supplier_invoice_no of this JournalEntryData.  # noqa: E501
        :type: str
        """

        self._supplier_invoice_no = supplier_invoice_no

    @property
    def currency_id(self):
        """Gets the currency_id of this JournalEntryData.  # noqa: E501


        :return: The currency_id of this JournalEntryData.  # noqa: E501
        :rtype: int
        """
        return self._currency_id

    @currency_id.setter
    def currency_id(self, currency_id):
        """Sets the currency_id of this JournalEntryData.


        :param currency_id: The currency_id of this JournalEntryData.  # noqa: E501
        :type: int
        """

        self._currency_id = currency_id

    @property
    def credit_account_number(self):
        """Gets the credit_account_number of this JournalEntryData.  # noqa: E501


        :return: The credit_account_number of this JournalEntryData.  # noqa: E501
        :rtype: int
        """
        return self._credit_account_number

    @credit_account_number.setter
    def credit_account_number(self, credit_account_number):
        """Sets the credit_account_number of this JournalEntryData.


        :param credit_account_number: The credit_account_number of this JournalEntryData.  # noqa: E501
        :type: int
        """

        self._credit_account_number = credit_account_number

    @property
    def journal_entry_no(self):
        """Gets the journal_entry_no of this JournalEntryData.  # noqa: E501


        :return: The journal_entry_no of this JournalEntryData.  # noqa: E501
        :rtype: str
        """
        return self._journal_entry_no

    @journal_entry_no.setter
    def journal_entry_no(self, journal_entry_no):
        """Sets the journal_entry_no of this JournalEntryData.


        :param journal_entry_no: The journal_entry_no of this JournalEntryData.  # noqa: E501
        :type: str
        """

        self._journal_entry_no = journal_entry_no

    @property
    def credit_vat_type_id(self):
        """Gets the credit_vat_type_id of this JournalEntryData.  # noqa: E501


        :return: The credit_vat_type_id of this JournalEntryData.  # noqa: E501
        :rtype: int
        """
        return self._credit_vat_type_id

    @credit_vat_type_id.setter
    def credit_vat_type_id(self, credit_vat_type_id):
        """Sets the credit_vat_type_id of this JournalEntryData.


        :param credit_vat_type_id: The credit_vat_type_id of this JournalEntryData.  # noqa: E501
        :type: int
        """

        self._credit_vat_type_id = credit_vat_type_id

    @property
    def payment_id(self):
        """Gets the payment_id of this JournalEntryData.  # noqa: E501


        :return: The payment_id of this JournalEntryData.  # noqa: E501
        :rtype: str
        """
        return self._payment_id

    @payment_id.setter
    def payment_id(self, payment_id):
        """Sets the payment_id of this JournalEntryData.


        :param payment_id: The payment_id of this JournalEntryData.  # noqa: E501
        :type: str
        """

        self._payment_id = payment_id

    @property
    def journal_entry_data_accrual_id(self):
        """Gets the journal_entry_data_accrual_id of this JournalEntryData.  # noqa: E501


        :return: The journal_entry_data_accrual_id of this JournalEntryData.  # noqa: E501
        :rtype: int
        """
        return self._journal_entry_data_accrual_id

    @journal_entry_data_accrual_id.setter
    def journal_entry_data_accrual_id(self, journal_entry_data_accrual_id):
        """Sets the journal_entry_data_accrual_id of this JournalEntryData.


        :param journal_entry_data_accrual_id: The journal_entry_data_accrual_id of this JournalEntryData.  # noqa: E501
        :type: int
        """

        self._journal_entry_data_accrual_id = journal_entry_data_accrual_id

    @property
    def vat_deduction_percent(self):
        """Gets the vat_deduction_percent of this JournalEntryData.  # noqa: E501


        :return: The vat_deduction_percent of this JournalEntryData.  # noqa: E501
        :rtype: int
        """
        return self._vat_deduction_percent

    @vat_deduction_percent.setter
    def vat_deduction_percent(self, vat_deduction_percent):
        """Sets the vat_deduction_percent of this JournalEntryData.


        :param vat_deduction_percent: The vat_deduction_percent of this JournalEntryData.  # noqa: E501
        :type: int
        """

        self._vat_deduction_percent = vat_deduction_percent

    @property
    def supplier_invoice_id(self):
        """Gets the supplier_invoice_id of this JournalEntryData.  # noqa: E501


        :return: The supplier_invoice_id of this JournalEntryData.  # noqa: E501
        :rtype: int
        """
        return self._supplier_invoice_id

    @supplier_invoice_id.setter
    def supplier_invoice_id(self, supplier_invoice_id):
        """Sets the supplier_invoice_id of this JournalEntryData.


        :param supplier_invoice_id: The supplier_invoice_id of this JournalEntryData.  # noqa: E501
        :type: int
        """

        self._supplier_invoice_id = supplier_invoice_id

    @property
    def currency_code(self):
        """Gets the currency_code of this JournalEntryData.  # noqa: E501


        :return: The currency_code of this JournalEntryData.  # noqa: E501
        :rtype: CurrencyCode
        """
        return self._currency_code

    @currency_code.setter
    def currency_code(self, currency_code):
        """Sets the currency_code of this JournalEntryData.


        :param currency_code: The currency_code of this JournalEntryData.  # noqa: E501
        :type: CurrencyCode
        """

        self._currency_code = currency_code

    @property
    def debit_account(self):
        """Gets the debit_account of this JournalEntryData.  # noqa: E501


        :return: The debit_account of this JournalEntryData.  # noqa: E501
        :rtype: Account
        """
        return self._debit_account

    @debit_account.setter
    def debit_account(self, debit_account):
        """Sets the debit_account of this JournalEntryData.


        :param debit_account: The debit_account of this JournalEntryData.  # noqa: E501
        :type: Account
        """

        self._debit_account = debit_account

    @property
    def debit_vat_type(self):
        """Gets the debit_vat_type of this JournalEntryData.  # noqa: E501


        :return: The debit_vat_type of this JournalEntryData.  # noqa: E501
        :rtype: VatType
        """
        return self._debit_vat_type

    @debit_vat_type.setter
    def debit_vat_type(self, debit_vat_type):
        """Sets the debit_vat_type of this JournalEntryData.


        :param debit_vat_type: The debit_vat_type of this JournalEntryData.  # noqa: E501
        :type: VatType
        """

        self._debit_vat_type = debit_vat_type

    @property
    def credit_account(self):
        """Gets the credit_account of this JournalEntryData.  # noqa: E501


        :return: The credit_account of this JournalEntryData.  # noqa: E501
        :rtype: Account
        """
        return self._credit_account

    @credit_account.setter
    def credit_account(self, credit_account):
        """Sets the credit_account of this JournalEntryData.


        :param credit_account: The credit_account of this JournalEntryData.  # noqa: E501
        :type: Account
        """

        self._credit_account = credit_account

    @property
    def credit_vat_type(self):
        """Gets the credit_vat_type of this JournalEntryData.  # noqa: E501


        :return: The credit_vat_type of this JournalEntryData.  # noqa: E501
        :rtype: VatType
        """
        return self._credit_vat_type

    @credit_vat_type.setter
    def credit_vat_type(self, credit_vat_type):
        """Sets the credit_vat_type of this JournalEntryData.


        :param credit_vat_type: The credit_vat_type of this JournalEntryData.  # noqa: E501
        :type: VatType
        """

        self._credit_vat_type = credit_vat_type

    @property
    def dimensions(self):
        """Gets the dimensions of this JournalEntryData.  # noqa: E501


        :return: The dimensions of this JournalEntryData.  # noqa: E501
        :rtype: Dimensions
        """
        return self._dimensions

    @dimensions.setter
    def dimensions(self, dimensions):
        """Sets the dimensions of this JournalEntryData.


        :param dimensions: The dimensions of this JournalEntryData.  # noqa: E501
        :type: Dimensions
        """

        self._dimensions = dimensions

    @property
    def journal_entry_payment_data(self):
        """Gets the journal_entry_payment_data of this JournalEntryData.  # noqa: E501


        :return: The journal_entry_payment_data of this JournalEntryData.  # noqa: E501
        :rtype: JournalEntryPaymentData
        """
        return self._journal_entry_payment_data

    @journal_entry_payment_data.setter
    def journal_entry_payment_data(self, journal_entry_payment_data):
        """Sets the journal_entry_payment_data of this JournalEntryData.


        :param journal_entry_payment_data: The journal_entry_payment_data of this JournalEntryData.  # noqa: E501
        :type: JournalEntryPaymentData
        """

        self._journal_entry_payment_data = journal_entry_payment_data

    @property
    def journal_entry_data_accrual(self):
        """Gets the journal_entry_data_accrual of this JournalEntryData.  # noqa: E501


        :return: The journal_entry_data_accrual of this JournalEntryData.  # noqa: E501
        :rtype: Accrual
        """
        return self._journal_entry_data_accrual

    @journal_entry_data_accrual.setter
    def journal_entry_data_accrual(self, journal_entry_data_accrual):
        """Sets the journal_entry_data_accrual of this JournalEntryData.


        :param journal_entry_data_accrual: The journal_entry_data_accrual of this JournalEntryData.  # noqa: E501
        :type: Accrual
        """

        self._journal_entry_data_accrual = journal_entry_data_accrual

    @property
    def custom_values(self):
        """Gets the custom_values of this JournalEntryData.  # noqa: E501


        :return: The custom_values of this JournalEntryData.  # noqa: E501
        :rtype: CustomValues
        """
        return self._custom_values

    @custom_values.setter
    def custom_values(self, custom_values):
        """Sets the custom_values of this JournalEntryData.


        :param custom_values: The custom_values of this JournalEntryData.  # noqa: E501
        :type: CustomValues
        """

        self._custom_values = custom_values

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(JournalEntryData, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, JournalEntryData):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other

# coding: utf-8

"""

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class Customer(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'org_number': 'str',
        'business_relation_id': 'int',
        'gln': 'str',
        'sub_account_number_series_id': 'int',
        'payment_terms_id': 'int',
        'e_invoice_agreement_reference': 'str',
        'customer_number': 'int',
        'web_url': 'str',
        'reminder_email_address': 'str',
        'default_customer_order_report_id': 'int',
        'dimensions_id': 'int',
        'delivery_terms_id': 'int',
        'status_code': 'int',
        'deleted': 'bool',
        'avtale_giro': 'bool',
        'dont_send_reminders': 'bool',
        'efaktura_identifier': 'str',
        'default_customer_invoice_report_id': 'int',
        'is_private': 'bool',
        'default_distributions_id': 'int',
        'customer_number_kid_alias': 'str',
        'id': 'int',
        'avtale_giro_notification': 'bool',
        'peppol_address': 'str',
        'default_seller_id': 'int',
        'social_security_number': 'str',
        'currency_code_id': 'int',
        'updated_by': 'str',
        'created_by': 'str',
        'default_customer_quote_report_id': 'int',
        'factoring_number': 'int',
        'credit_days': 'int',
        'localization': 'str',
        'acceptable_delta4_customer_payment_account_id': 'int',
        'customer_invoice_reminder_settings_id': 'int',
        'info': 'BusinessRelation',
        'distributions': 'Distributions',
        'payment_terms': 'Terms',
        'delivery_terms': 'Terms',
        'dimensions': 'Dimensions',
        'customer_invoice_reminder_settings': 'CustomerInvoiceReminderSettings',
        'customer_quotes': 'list[CustomerQuote]',
        'customer_orders': 'list[CustomerOrder]',
        'customer_invoices': 'list[CustomerInvoice]',
        'default_seller': 'Seller',
        'sellers': 'list[SellerLink]',
        'companies': 'list[SubCompany]',
        'account': 'Account',
        'custom_values': 'CustomValues'
    }

    attribute_map = {
        'org_number': 'OrgNumber',
        'business_relation_id': 'BusinessRelationID',
        'gln': 'GLN',
        'sub_account_number_series_id': 'SubAccountNumberSeriesID',
        'payment_terms_id': 'PaymentTermsID',
        'e_invoice_agreement_reference': 'EInvoiceAgreementReference',
        'customer_number': 'CustomerNumber',
        'web_url': 'WebUrl',
        'reminder_email_address': 'ReminderEmailAddress',
        'default_customer_order_report_id': 'DefaultCustomerOrderReportID',
        'dimensions_id': 'DimensionsID',
        'delivery_terms_id': 'DeliveryTermsID',
        'status_code': 'StatusCode',
        'deleted': 'Deleted',
        'avtale_giro': 'AvtaleGiro',
        'dont_send_reminders': 'DontSendReminders',
        'efaktura_identifier': 'EfakturaIdentifier',
        'default_customer_invoice_report_id': 'DefaultCustomerInvoiceReportID',
        'is_private': 'IsPrivate',
        'default_distributions_id': 'DefaultDistributionsID',
        'customer_number_kid_alias': 'CustomerNumberKidAlias',
        'id': 'ID',
        'avtale_giro_notification': 'AvtaleGiroNotification',
        'peppol_address': 'PeppolAddress',
        'default_seller_id': 'DefaultSellerID',
        'social_security_number': 'SocialSecurityNumber',
        'currency_code_id': 'CurrencyCodeID',
        'updated_by': 'UpdatedBy',
        'created_by': 'CreatedBy',
        'default_customer_quote_report_id': 'DefaultCustomerQuoteReportID',
        'factoring_number': 'FactoringNumber',
        'credit_days': 'CreditDays',
        'localization': 'Localization',
        'acceptable_delta4_customer_payment_account_id': 'AcceptableDelta4CustomerPaymentAccountID',
        'customer_invoice_reminder_settings_id': 'CustomerInvoiceReminderSettingsID',
        'info': 'Info',
        'distributions': 'Distributions',
        'payment_terms': 'PaymentTerms',
        'delivery_terms': 'DeliveryTerms',
        'dimensions': 'Dimensions',
        'customer_invoice_reminder_settings': 'CustomerInvoiceReminderSettings',
        'customer_quotes': 'CustomerQuotes',
        'customer_orders': 'CustomerOrders',
        'customer_invoices': 'CustomerInvoices',
        'default_seller': 'DefaultSeller',
        'sellers': 'Sellers',
        'companies': 'Companies',
        'account': 'Account',
        'custom_values': 'CustomValues'
    }

    def __init__(self, org_number=None, business_relation_id=None, gln=None, sub_account_number_series_id=None, payment_terms_id=None, e_invoice_agreement_reference=None, customer_number=None, web_url=None, reminder_email_address=None, default_customer_order_report_id=None, dimensions_id=None, delivery_terms_id=None, status_code=None, deleted=None, avtale_giro=None, dont_send_reminders=None, efaktura_identifier=None, default_customer_invoice_report_id=None, is_private=None, default_distributions_id=None, customer_number_kid_alias=None, id=None, avtale_giro_notification=None, peppol_address=None, default_seller_id=None, social_security_number=None, currency_code_id=None, updated_by=None, created_by=None, default_customer_quote_report_id=None, factoring_number=None, credit_days=None, localization=None, acceptable_delta4_customer_payment_account_id=None, customer_invoice_reminder_settings_id=None, info=None, distributions=None, payment_terms=None, delivery_terms=None, dimensions=None, customer_invoice_reminder_settings=None, customer_quotes=None, customer_orders=None, customer_invoices=None, default_seller=None, sellers=None, companies=None, account=None, custom_values=None):  # noqa: E501
        """Customer - a model defined in Swagger"""  # noqa: E501
        self._org_number = None
        self._business_relation_id = None
        self._gln = None
        self._sub_account_number_series_id = None
        self._payment_terms_id = None
        self._e_invoice_agreement_reference = None
        self._customer_number = None
        self._web_url = None
        self._reminder_email_address = None
        self._default_customer_order_report_id = None
        self._dimensions_id = None
        self._delivery_terms_id = None
        self._status_code = None
        self._deleted = None
        self._avtale_giro = None
        self._dont_send_reminders = None
        self._efaktura_identifier = None
        self._default_customer_invoice_report_id = None
        self._is_private = None
        self._default_distributions_id = None
        self._customer_number_kid_alias = None
        self._id = None
        self._avtale_giro_notification = None
        self._peppol_address = None
        self._default_seller_id = None
        self._social_security_number = None
        self._currency_code_id = None
        self._updated_by = None
        self._created_by = None
        self._default_customer_quote_report_id = None
        self._factoring_number = None
        self._credit_days = None
        self._localization = None
        self._acceptable_delta4_customer_payment_account_id = None
        self._customer_invoice_reminder_settings_id = None
        self._info = None
        self._distributions = None
        self._payment_terms = None
        self._delivery_terms = None
        self._dimensions = None
        self._customer_invoice_reminder_settings = None
        self._customer_quotes = None
        self._customer_orders = None
        self._customer_invoices = None
        self._default_seller = None
        self._sellers = None
        self._companies = None
        self._account = None
        self._custom_values = None
        self.discriminator = None
        if org_number is not None:
            self.org_number = org_number
        if business_relation_id is not None:
            self.business_relation_id = business_relation_id
        if gln is not None:
            self.gln = gln
        if sub_account_number_series_id is not None:
            self.sub_account_number_series_id = sub_account_number_series_id
        if payment_terms_id is not None:
            self.payment_terms_id = payment_terms_id
        if e_invoice_agreement_reference is not None:
            self.e_invoice_agreement_reference = e_invoice_agreement_reference
        if customer_number is not None:
            self.customer_number = customer_number
        if web_url is not None:
            self.web_url = web_url
        if reminder_email_address is not None:
            self.reminder_email_address = reminder_email_address
        if default_customer_order_report_id is not None:
            self.default_customer_order_report_id = default_customer_order_report_id
        if dimensions_id is not None:
            self.dimensions_id = dimensions_id
        if delivery_terms_id is not None:
            self.delivery_terms_id = delivery_terms_id
        if status_code is not None:
            self.status_code = status_code
        if deleted is not None:
            self.deleted = deleted
        if avtale_giro is not None:
            self.avtale_giro = avtale_giro
        if dont_send_reminders is not None:
            self.dont_send_reminders = dont_send_reminders
        if efaktura_identifier is not None:
            self.efaktura_identifier = efaktura_identifier
        if default_customer_invoice_report_id is not None:
            self.default_customer_invoice_report_id = default_customer_invoice_report_id
        if is_private is not None:
            self.is_private = is_private
        if default_distributions_id is not None:
            self.default_distributions_id = default_distributions_id
        if customer_number_kid_alias is not None:
            self.customer_number_kid_alias = customer_number_kid_alias
        if id is not None:
            self.id = id
        if avtale_giro_notification is not None:
            self.avtale_giro_notification = avtale_giro_notification
        if peppol_address is not None:
            self.peppol_address = peppol_address
        if default_seller_id is not None:
            self.default_seller_id = default_seller_id
        if social_security_number is not None:
            self.social_security_number = social_security_number
        if currency_code_id is not None:
            self.currency_code_id = currency_code_id
        if updated_by is not None:
            self.updated_by = updated_by
        if created_by is not None:
            self.created_by = created_by
        if default_customer_quote_report_id is not None:
            self.default_customer_quote_report_id = default_customer_quote_report_id
        if factoring_number is not None:
            self.factoring_number = factoring_number
        if credit_days is not None:
            self.credit_days = credit_days
        if localization is not None:
            self.localization = localization
        if acceptable_delta4_customer_payment_account_id is not None:
            self.acceptable_delta4_customer_payment_account_id = acceptable_delta4_customer_payment_account_id
        if customer_invoice_reminder_settings_id is not None:
            self.customer_invoice_reminder_settings_id = customer_invoice_reminder_settings_id
        if info is not None:
            self.info = info
        if distributions is not None:
            self.distributions = distributions
        if payment_terms is not None:
            self.payment_terms = payment_terms
        if delivery_terms is not None:
            self.delivery_terms = delivery_terms
        if dimensions is not None:
            self.dimensions = dimensions
        if customer_invoice_reminder_settings is not None:
            self.customer_invoice_reminder_settings = customer_invoice_reminder_settings
        if customer_quotes is not None:
            self.customer_quotes = customer_quotes
        if customer_orders is not None:
            self.customer_orders = customer_orders
        if customer_invoices is not None:
            self.customer_invoices = customer_invoices
        if default_seller is not None:
            self.default_seller = default_seller
        if sellers is not None:
            self.sellers = sellers
        if companies is not None:
            self.companies = companies
        if account is not None:
            self.account = account
        if custom_values is not None:
            self.custom_values = custom_values

    @property
    def org_number(self):
        """Gets the org_number of this Customer.  # noqa: E501


        :return: The org_number of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._org_number

    @org_number.setter
    def org_number(self, org_number):
        """Sets the org_number of this Customer.


        :param org_number: The org_number of this Customer.  # noqa: E501
        :type: str
        """

        self._org_number = org_number

    @property
    def business_relation_id(self):
        """Gets the business_relation_id of this Customer.  # noqa: E501


        :return: The business_relation_id of this Customer.  # noqa: E501
        :rtype: int
        """
        return self._business_relation_id

    @business_relation_id.setter
    def business_relation_id(self, business_relation_id):
        """Sets the business_relation_id of this Customer.


        :param business_relation_id: The business_relation_id of this Customer.  # noqa: E501
        :type: int
        """

        self._business_relation_id = business_relation_id

    @property
    def gln(self):
        """Gets the gln of this Customer.  # noqa: E501


        :return: The gln of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._gln

    @gln.setter
    def gln(self, gln):
        """Sets the gln of this Customer.


        :param gln: The gln of this Customer.  # noqa: E501
        :type: str
        """

        self._gln = gln

    @property
    def sub_account_number_series_id(self):
        """Gets the sub_account_number_series_id of this Customer.  # noqa: E501


        :return: The sub_account_number_series_id of this Customer.  # noqa: E501
        :rtype: int
        """
        return self._sub_account_number_series_id

    @sub_account_number_series_id.setter
    def sub_account_number_series_id(self, sub_account_number_series_id):
        """Sets the sub_account_number_series_id of this Customer.


        :param sub_account_number_series_id: The sub_account_number_series_id of this Customer.  # noqa: E501
        :type: int
        """

        self._sub_account_number_series_id = sub_account_number_series_id

    @property
    def payment_terms_id(self):
        """Gets the payment_terms_id of this Customer.  # noqa: E501


        :return: The payment_terms_id of this Customer.  # noqa: E501
        :rtype: int
        """
        return self._payment_terms_id

    @payment_terms_id.setter
    def payment_terms_id(self, payment_terms_id):
        """Sets the payment_terms_id of this Customer.


        :param payment_terms_id: The payment_terms_id of this Customer.  # noqa: E501
        :type: int
        """

        self._payment_terms_id = payment_terms_id

    @property
    def e_invoice_agreement_reference(self):
        """Gets the e_invoice_agreement_reference of this Customer.  # noqa: E501


        :return: The e_invoice_agreement_reference of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._e_invoice_agreement_reference

    @e_invoice_agreement_reference.setter
    def e_invoice_agreement_reference(self, e_invoice_agreement_reference):
        """Sets the e_invoice_agreement_reference of this Customer.


        :param e_invoice_agreement_reference: The e_invoice_agreement_reference of this Customer.  # noqa: E501
        :type: str
        """

        self._e_invoice_agreement_reference = e_invoice_agreement_reference

    @property
    def customer_number(self):
        """Gets the customer_number of this Customer.  # noqa: E501


        :return: The customer_number of this Customer.  # noqa: E501
        :rtype: int
        """
        return self._customer_number

    @customer_number.setter
    def customer_number(self, customer_number):
        """Sets the customer_number of this Customer.


        :param customer_number: The customer_number of this Customer.  # noqa: E501
        :type: int
        """

        self._customer_number = customer_number

    @property
    def web_url(self):
        """Gets the web_url of this Customer.  # noqa: E501


        :return: The web_url of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._web_url

    @web_url.setter
    def web_url(self, web_url):
        """Sets the web_url of this Customer.


        :param web_url: The web_url of this Customer.  # noqa: E501
        :type: str
        """

        self._web_url = web_url

    @property
    def reminder_email_address(self):
        """Gets the reminder_email_address of this Customer.  # noqa: E501


        :return: The reminder_email_address of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._reminder_email_address

    @reminder_email_address.setter
    def reminder_email_address(self, reminder_email_address):
        """Sets the reminder_email_address of this Customer.


        :param reminder_email_address: The reminder_email_address of this Customer.  # noqa: E501
        :type: str
        """

        self._reminder_email_address = reminder_email_address

    @property
    def default_customer_order_report_id(self):
        """Gets the default_customer_order_report_id of this Customer.  # noqa: E501


        :return: The default_customer_order_report_id of this Customer.  # noqa: E501
        :rtype: int
        """
        return self._default_customer_order_report_id

    @default_customer_order_report_id.setter
    def default_customer_order_report_id(self, default_customer_order_report_id):
        """Sets the default_customer_order_report_id of this Customer.


        :param default_customer_order_report_id: The default_customer_order_report_id of this Customer.  # noqa: E501
        :type: int
        """

        self._default_customer_order_report_id = default_customer_order_report_id

    @property
    def dimensions_id(self):
        """Gets the dimensions_id of this Customer.  # noqa: E501


        :return: The dimensions_id of this Customer.  # noqa: E501
        :rtype: int
        """
        return self._dimensions_id

    @dimensions_id.setter
    def dimensions_id(self, dimensions_id):
        """Sets the dimensions_id of this Customer.


        :param dimensions_id: The dimensions_id of this Customer.  # noqa: E501
        :type: int
        """

        self._dimensions_id = dimensions_id

    @property
    def delivery_terms_id(self):
        """Gets the delivery_terms_id of this Customer.  # noqa: E501


        :return: The delivery_terms_id of this Customer.  # noqa: E501
        :rtype: int
        """
        return self._delivery_terms_id

    @delivery_terms_id.setter
    def delivery_terms_id(self, delivery_terms_id):
        """Sets the delivery_terms_id of this Customer.


        :param delivery_terms_id: The delivery_terms_id of this Customer.  # noqa: E501
        :type: int
        """

        self._delivery_terms_id = delivery_terms_id

    @property
    def status_code(self):
        """Gets the status_code of this Customer.  # noqa: E501


        :return: The status_code of this Customer.  # noqa: E501
        :rtype: int
        """
        return self._status_code

    @status_code.setter
    def status_code(self, status_code):
        """Sets the status_code of this Customer.


        :param status_code: The status_code of this Customer.  # noqa: E501
        :type: int
        """

        self._status_code = status_code

    @property
    def deleted(self):
        """Gets the deleted of this Customer.  # noqa: E501


        :return: The deleted of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._deleted

    @deleted.setter
    def deleted(self, deleted):
        """Sets the deleted of this Customer.


        :param deleted: The deleted of this Customer.  # noqa: E501
        :type: bool
        """

        self._deleted = deleted

    @property
    def avtale_giro(self):
        """Gets the avtale_giro of this Customer.  # noqa: E501


        :return: The avtale_giro of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._avtale_giro

    @avtale_giro.setter
    def avtale_giro(self, avtale_giro):
        """Sets the avtale_giro of this Customer.


        :param avtale_giro: The avtale_giro of this Customer.  # noqa: E501
        :type: bool
        """

        self._avtale_giro = avtale_giro

    @property
    def dont_send_reminders(self):
        """Gets the dont_send_reminders of this Customer.  # noqa: E501


        :return: The dont_send_reminders of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._dont_send_reminders

    @dont_send_reminders.setter
    def dont_send_reminders(self, dont_send_reminders):
        """Sets the dont_send_reminders of this Customer.


        :param dont_send_reminders: The dont_send_reminders of this Customer.  # noqa: E501
        :type: bool
        """

        self._dont_send_reminders = dont_send_reminders

    @property
    def efaktura_identifier(self):
        """Gets the efaktura_identifier of this Customer.  # noqa: E501


        :return: The efaktura_identifier of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._efaktura_identifier

    @efaktura_identifier.setter
    def efaktura_identifier(self, efaktura_identifier):
        """Sets the efaktura_identifier of this Customer.


        :param efaktura_identifier: The efaktura_identifier of this Customer.  # noqa: E501
        :type: str
        """

        self._efaktura_identifier = efaktura_identifier

    @property
    def default_customer_invoice_report_id(self):
        """Gets the default_customer_invoice_report_id of this Customer.  # noqa: E501


        :return: The default_customer_invoice_report_id of this Customer.  # noqa: E501
        :rtype: int
        """
        return self._default_customer_invoice_report_id

    @default_customer_invoice_report_id.setter
    def default_customer_invoice_report_id(self, default_customer_invoice_report_id):
        """Sets the default_customer_invoice_report_id of this Customer.


        :param default_customer_invoice_report_id: The default_customer_invoice_report_id of this Customer.  # noqa: E501
        :type: int
        """

        self._default_customer_invoice_report_id = default_customer_invoice_report_id

    @property
    def is_private(self):
        """Gets the is_private of this Customer.  # noqa: E501


        :return: The is_private of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._is_private

    @is_private.setter
    def is_private(self, is_private):
        """Sets the is_private of this Customer.


        :param is_private: The is_private of this Customer.  # noqa: E501
        :type: bool
        """

        self._is_private = is_private

    @property
    def default_distributions_id(self):
        """Gets the default_distributions_id of this Customer.  # noqa: E501


        :return: The default_distributions_id of this Customer.  # noqa: E501
        :rtype: int
        """
        return self._default_distributions_id

    @default_distributions_id.setter
    def default_distributions_id(self, default_distributions_id):
        """Sets the default_distributions_id of this Customer.


        :param default_distributions_id: The default_distributions_id of this Customer.  # noqa: E501
        :type: int
        """

        self._default_distributions_id = default_distributions_id

    @property
    def customer_number_kid_alias(self):
        """Gets the customer_number_kid_alias of this Customer.  # noqa: E501


        :return: The customer_number_kid_alias of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._customer_number_kid_alias

    @customer_number_kid_alias.setter
    def customer_number_kid_alias(self, customer_number_kid_alias):
        """Sets the customer_number_kid_alias of this Customer.


        :param customer_number_kid_alias: The customer_number_kid_alias of this Customer.  # noqa: E501
        :type: str
        """

        self._customer_number_kid_alias = customer_number_kid_alias

    @property
    def id(self):
        """Gets the id of this Customer.  # noqa: E501


        :return: The id of this Customer.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Customer.


        :param id: The id of this Customer.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def avtale_giro_notification(self):
        """Gets the avtale_giro_notification of this Customer.  # noqa: E501


        :return: The avtale_giro_notification of this Customer.  # noqa: E501
        :rtype: bool
        """
        return self._avtale_giro_notification

    @avtale_giro_notification.setter
    def avtale_giro_notification(self, avtale_giro_notification):
        """Sets the avtale_giro_notification of this Customer.


        :param avtale_giro_notification: The avtale_giro_notification of this Customer.  # noqa: E501
        :type: bool
        """

        self._avtale_giro_notification = avtale_giro_notification

    @property
    def peppol_address(self):
        """Gets the peppol_address of this Customer.  # noqa: E501


        :return: The peppol_address of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._peppol_address

    @peppol_address.setter
    def peppol_address(self, peppol_address):
        """Sets the peppol_address of this Customer.


        :param peppol_address: The peppol_address of this Customer.  # noqa: E501
        :type: str
        """

        self._peppol_address = peppol_address

    @property
    def default_seller_id(self):
        """Gets the default_seller_id of this Customer.  # noqa: E501


        :return: The default_seller_id of this Customer.  # noqa: E501
        :rtype: int
        """
        return self._default_seller_id

    @default_seller_id.setter
    def default_seller_id(self, default_seller_id):
        """Sets the default_seller_id of this Customer.


        :param default_seller_id: The default_seller_id of this Customer.  # noqa: E501
        :type: int
        """

        self._default_seller_id = default_seller_id

    @property
    def social_security_number(self):
        """Gets the social_security_number of this Customer.  # noqa: E501


        :return: The social_security_number of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._social_security_number

    @social_security_number.setter
    def social_security_number(self, social_security_number):
        """Sets the social_security_number of this Customer.


        :param social_security_number: The social_security_number of this Customer.  # noqa: E501
        :type: str
        """

        self._social_security_number = social_security_number

    @property
    def currency_code_id(self):
        """Gets the currency_code_id of this Customer.  # noqa: E501


        :return: The currency_code_id of this Customer.  # noqa: E501
        :rtype: int
        """
        return self._currency_code_id

    @currency_code_id.setter
    def currency_code_id(self, currency_code_id):
        """Sets the currency_code_id of this Customer.


        :param currency_code_id: The currency_code_id of this Customer.  # noqa: E501
        :type: int
        """

        self._currency_code_id = currency_code_id

    @property
    def updated_by(self):
        """Gets the updated_by of this Customer.  # noqa: E501


        :return: The updated_by of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._updated_by

    @updated_by.setter
    def updated_by(self, updated_by):
        """Sets the updated_by of this Customer.


        :param updated_by: The updated_by of this Customer.  # noqa: E501
        :type: str
        """

        self._updated_by = updated_by

    @property
    def created_by(self):
        """Gets the created_by of this Customer.  # noqa: E501


        :return: The created_by of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this Customer.


        :param created_by: The created_by of this Customer.  # noqa: E501
        :type: str
        """

        self._created_by = created_by

    @property
    def default_customer_quote_report_id(self):
        """Gets the default_customer_quote_report_id of this Customer.  # noqa: E501


        :return: The default_customer_quote_report_id of this Customer.  # noqa: E501
        :rtype: int
        """
        return self._default_customer_quote_report_id

    @default_customer_quote_report_id.setter
    def default_customer_quote_report_id(self, default_customer_quote_report_id):
        """Sets the default_customer_quote_report_id of this Customer.


        :param default_customer_quote_report_id: The default_customer_quote_report_id of this Customer.  # noqa: E501
        :type: int
        """

        self._default_customer_quote_report_id = default_customer_quote_report_id

    @property
    def factoring_number(self):
        """Gets the factoring_number of this Customer.  # noqa: E501


        :return: The factoring_number of this Customer.  # noqa: E501
        :rtype: int
        """
        return self._factoring_number

    @factoring_number.setter
    def factoring_number(self, factoring_number):
        """Sets the factoring_number of this Customer.


        :param factoring_number: The factoring_number of this Customer.  # noqa: E501
        :type: int
        """

        self._factoring_number = factoring_number

    @property
    def credit_days(self):
        """Gets the credit_days of this Customer.  # noqa: E501


        :return: The credit_days of this Customer.  # noqa: E501
        :rtype: int
        """
        return self._credit_days

    @credit_days.setter
    def credit_days(self, credit_days):
        """Sets the credit_days of this Customer.


        :param credit_days: The credit_days of this Customer.  # noqa: E501
        :type: int
        """

        self._credit_days = credit_days

    @property
    def localization(self):
        """Gets the localization of this Customer.  # noqa: E501


        :return: The localization of this Customer.  # noqa: E501
        :rtype: str
        """
        return self._localization

    @localization.setter
    def localization(self, localization):
        """Sets the localization of this Customer.


        :param localization: The localization of this Customer.  # noqa: E501
        :type: str
        """

        self._localization = localization

    @property
    def acceptable_delta4_customer_payment_account_id(self):
        """Gets the acceptable_delta4_customer_payment_account_id of this Customer.  # noqa: E501


        :return: The acceptable_delta4_customer_payment_account_id of this Customer.  # noqa: E501
        :rtype: int
        """
        return self._acceptable_delta4_customer_payment_account_id

    @acceptable_delta4_customer_payment_account_id.setter
    def acceptable_delta4_customer_payment_account_id(self, acceptable_delta4_customer_payment_account_id):
        """Sets the acceptable_delta4_customer_payment_account_id of this Customer.


        :param acceptable_delta4_customer_payment_account_id: The acceptable_delta4_customer_payment_account_id of this Customer.  # noqa: E501
        :type: int
        """

        self._acceptable_delta4_customer_payment_account_id = acceptable_delta4_customer_payment_account_id

    @property
    def customer_invoice_reminder_settings_id(self):
        """Gets the customer_invoice_reminder_settings_id of this Customer.  # noqa: E501


        :return: The customer_invoice_reminder_settings_id of this Customer.  # noqa: E501
        :rtype: int
        """
        return self._customer_invoice_reminder_settings_id

    @customer_invoice_reminder_settings_id.setter
    def customer_invoice_reminder_settings_id(self, customer_invoice_reminder_settings_id):
        """Sets the customer_invoice_reminder_settings_id of this Customer.


        :param customer_invoice_reminder_settings_id: The customer_invoice_reminder_settings_id of this Customer.  # noqa: E501
        :type: int
        """

        self._customer_invoice_reminder_settings_id = customer_invoice_reminder_settings_id

    @property
    def info(self):
        """Gets the info of this Customer.  # noqa: E501


        :return: The info of this Customer.  # noqa: E501
        :rtype: BusinessRelation
        """
        return self._info

    @info.setter
    def info(self, info):
        """Sets the info of this Customer.


        :param info: The info of this Customer.  # noqa: E501
        :type: BusinessRelation
        """

        self._info = info

    @property
    def distributions(self):
        """Gets the distributions of this Customer.  # noqa: E501


        :return: The distributions of this Customer.  # noqa: E501
        :rtype: Distributions
        """
        return self._distributions

    @distributions.setter
    def distributions(self, distributions):
        """Sets the distributions of this Customer.


        :param distributions: The distributions of this Customer.  # noqa: E501
        :type: Distributions
        """

        self._distributions = distributions

    @property
    def payment_terms(self):
        """Gets the payment_terms of this Customer.  # noqa: E501


        :return: The payment_terms of this Customer.  # noqa: E501
        :rtype: Terms
        """
        return self._payment_terms

    @payment_terms.setter
    def payment_terms(self, payment_terms):
        """Sets the payment_terms of this Customer.


        :param payment_terms: The payment_terms of this Customer.  # noqa: E501
        :type: Terms
        """

        self._payment_terms = payment_terms

    @property
    def delivery_terms(self):
        """Gets the delivery_terms of this Customer.  # noqa: E501


        :return: The delivery_terms of this Customer.  # noqa: E501
        :rtype: Terms
        """
        return self._delivery_terms

    @delivery_terms.setter
    def delivery_terms(self, delivery_terms):
        """Sets the delivery_terms of this Customer.


        :param delivery_terms: The delivery_terms of this Customer.  # noqa: E501
        :type: Terms
        """

        self._delivery_terms = delivery_terms

    @property
    def dimensions(self):
        """Gets the dimensions of this Customer.  # noqa: E501


        :return: The dimensions of this Customer.  # noqa: E501
        :rtype: Dimensions
        """
        return self._dimensions

    @dimensions.setter
    def dimensions(self, dimensions):
        """Sets the dimensions of this Customer.


        :param dimensions: The dimensions of this Customer.  # noqa: E501
        :type: Dimensions
        """

        self._dimensions = dimensions

    @property
    def customer_invoice_reminder_settings(self):
        """Gets the customer_invoice_reminder_settings of this Customer.  # noqa: E501


        :return: The customer_invoice_reminder_settings of this Customer.  # noqa: E501
        :rtype: CustomerInvoiceReminderSettings
        """
        return self._customer_invoice_reminder_settings

    @customer_invoice_reminder_settings.setter
    def customer_invoice_reminder_settings(self, customer_invoice_reminder_settings):
        """Sets the customer_invoice_reminder_settings of this Customer.


        :param customer_invoice_reminder_settings: The customer_invoice_reminder_settings of this Customer.  # noqa: E501
        :type: CustomerInvoiceReminderSettings
        """

        self._customer_invoice_reminder_settings = customer_invoice_reminder_settings

    @property
    def customer_quotes(self):
        """Gets the customer_quotes of this Customer.  # noqa: E501


        :return: The customer_quotes of this Customer.  # noqa: E501
        :rtype: list[CustomerQuote]
        """
        return self._customer_quotes

    @customer_quotes.setter
    def customer_quotes(self, customer_quotes):
        """Sets the customer_quotes of this Customer.


        :param customer_quotes: The customer_quotes of this Customer.  # noqa: E501
        :type: list[CustomerQuote]
        """

        self._customer_quotes = customer_quotes

    @property
    def customer_orders(self):
        """Gets the customer_orders of this Customer.  # noqa: E501


        :return: The customer_orders of this Customer.  # noqa: E501
        :rtype: list[CustomerOrder]
        """
        return self._customer_orders

    @customer_orders.setter
    def customer_orders(self, customer_orders):
        """Sets the customer_orders of this Customer.


        :param customer_orders: The customer_orders of this Customer.  # noqa: E501
        :type: list[CustomerOrder]
        """

        self._customer_orders = customer_orders

    @property
    def customer_invoices(self):
        """Gets the customer_invoices of this Customer.  # noqa: E501


        :return: The customer_invoices of this Customer.  # noqa: E501
        :rtype: list[CustomerInvoice]
        """
        return self._customer_invoices

    @customer_invoices.setter
    def customer_invoices(self, customer_invoices):
        """Sets the customer_invoices of this Customer.


        :param customer_invoices: The customer_invoices of this Customer.  # noqa: E501
        :type: list[CustomerInvoice]
        """

        self._customer_invoices = customer_invoices

    @property
    def default_seller(self):
        """Gets the default_seller of this Customer.  # noqa: E501


        :return: The default_seller of this Customer.  # noqa: E501
        :rtype: Seller
        """
        return self._default_seller

    @default_seller.setter
    def default_seller(self, default_seller):
        """Sets the default_seller of this Customer.


        :param default_seller: The default_seller of this Customer.  # noqa: E501
        :type: Seller
        """

        self._default_seller = default_seller

    @property
    def sellers(self):
        """Gets the sellers of this Customer.  # noqa: E501


        :return: The sellers of this Customer.  # noqa: E501
        :rtype: list[SellerLink]
        """
        return self._sellers

    @sellers.setter
    def sellers(self, sellers):
        """Sets the sellers of this Customer.


        :param sellers: The sellers of this Customer.  # noqa: E501
        :type: list[SellerLink]
        """

        self._sellers = sellers

    @property
    def companies(self):
        """Gets the companies of this Customer.  # noqa: E501


        :return: The companies of this Customer.  # noqa: E501
        :rtype: list[SubCompany]
        """
        return self._companies

    @companies.setter
    def companies(self, companies):
        """Sets the companies of this Customer.


        :param companies: The companies of this Customer.  # noqa: E501
        :type: list[SubCompany]
        """

        self._companies = companies

    @property
    def account(self):
        """Gets the account of this Customer.  # noqa: E501


        :return: The account of this Customer.  # noqa: E501
        :rtype: Account
        """
        return self._account

    @account.setter
    def account(self, account):
        """Sets the account of this Customer.


        :param account: The account of this Customer.  # noqa: E501
        :type: Account
        """

        self._account = account

    @property
    def custom_values(self):
        """Gets the custom_values of this Customer.  # noqa: E501


        :return: The custom_values of this Customer.  # noqa: E501
        :rtype: CustomValues
        """
        return self._custom_values

    @custom_values.setter
    def custom_values(self, custom_values):
        """Sets the custom_values of this Customer.


        :param custom_values: The custom_values of this Customer.  # noqa: E501
        :type: CustomValues
        """

        self._custom_values = custom_values

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(Customer, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, Customer):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other

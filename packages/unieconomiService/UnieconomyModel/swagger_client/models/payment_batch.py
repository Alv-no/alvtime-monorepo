# coding: utf-8

"""

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class PaymentBatch(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'payment_batch_type_id': 'int',
        'camt054_c_msg_id': 'str',
        'payment_file_id': 'int',
        'status_code': 'int',
        'deleted': 'bool',
        'hash_value': 'str',
        'id': 'int',
        'payment_reference_id': 'str',
        'ocr_transmission_number': 'int',
        'updated_by': 'str',
        'payment_status_report_file_id': 'int',
        'created_by': 'str',
        'number_of_payments': 'int',
        'ocr_heading_strings': 'str',
        'is_customer_payment': 'bool',
        'payments': 'list[Payment]',
        'custom_values': 'CustomValues'
    }

    attribute_map = {
        'payment_batch_type_id': 'PaymentBatchTypeID',
        'camt054_c_msg_id': 'Camt054CMsgId',
        'payment_file_id': 'PaymentFileID',
        'status_code': 'StatusCode',
        'deleted': 'Deleted',
        'hash_value': 'HashValue',
        'id': 'ID',
        'payment_reference_id': 'PaymentReferenceID',
        'ocr_transmission_number': 'OcrTransmissionNumber',
        'updated_by': 'UpdatedBy',
        'payment_status_report_file_id': 'PaymentStatusReportFileID',
        'created_by': 'CreatedBy',
        'number_of_payments': 'NumberOfPayments',
        'ocr_heading_strings': 'OcrHeadingStrings',
        'is_customer_payment': 'IsCustomerPayment',
        'payments': 'Payments',
        'custom_values': 'CustomValues'
    }

    def __init__(self, payment_batch_type_id=None, camt054_c_msg_id=None, payment_file_id=None, status_code=None, deleted=None, hash_value=None, id=None, payment_reference_id=None, ocr_transmission_number=None, updated_by=None, payment_status_report_file_id=None, created_by=None, number_of_payments=None, ocr_heading_strings=None, is_customer_payment=None, payments=None, custom_values=None):  # noqa: E501
        """PaymentBatch - a model defined in Swagger"""  # noqa: E501
        self._payment_batch_type_id = None
        self._camt054_c_msg_id = None
        self._payment_file_id = None
        self._status_code = None
        self._deleted = None
        self._hash_value = None
        self._id = None
        self._payment_reference_id = None
        self._ocr_transmission_number = None
        self._updated_by = None
        self._payment_status_report_file_id = None
        self._created_by = None
        self._number_of_payments = None
        self._ocr_heading_strings = None
        self._is_customer_payment = None
        self._payments = None
        self._custom_values = None
        self.discriminator = None
        if payment_batch_type_id is not None:
            self.payment_batch_type_id = payment_batch_type_id
        if camt054_c_msg_id is not None:
            self.camt054_c_msg_id = camt054_c_msg_id
        if payment_file_id is not None:
            self.payment_file_id = payment_file_id
        if status_code is not None:
            self.status_code = status_code
        if deleted is not None:
            self.deleted = deleted
        if hash_value is not None:
            self.hash_value = hash_value
        if id is not None:
            self.id = id
        if payment_reference_id is not None:
            self.payment_reference_id = payment_reference_id
        if ocr_transmission_number is not None:
            self.ocr_transmission_number = ocr_transmission_number
        if updated_by is not None:
            self.updated_by = updated_by
        if payment_status_report_file_id is not None:
            self.payment_status_report_file_id = payment_status_report_file_id
        if created_by is not None:
            self.created_by = created_by
        if number_of_payments is not None:
            self.number_of_payments = number_of_payments
        if ocr_heading_strings is not None:
            self.ocr_heading_strings = ocr_heading_strings
        if is_customer_payment is not None:
            self.is_customer_payment = is_customer_payment
        if payments is not None:
            self.payments = payments
        if custom_values is not None:
            self.custom_values = custom_values

    @property
    def payment_batch_type_id(self):
        """Gets the payment_batch_type_id of this PaymentBatch.  # noqa: E501


        :return: The payment_batch_type_id of this PaymentBatch.  # noqa: E501
        :rtype: int
        """
        return self._payment_batch_type_id

    @payment_batch_type_id.setter
    def payment_batch_type_id(self, payment_batch_type_id):
        """Sets the payment_batch_type_id of this PaymentBatch.


        :param payment_batch_type_id: The payment_batch_type_id of this PaymentBatch.  # noqa: E501
        :type: int
        """

        self._payment_batch_type_id = payment_batch_type_id

    @property
    def camt054_c_msg_id(self):
        """Gets the camt054_c_msg_id of this PaymentBatch.  # noqa: E501


        :return: The camt054_c_msg_id of this PaymentBatch.  # noqa: E501
        :rtype: str
        """
        return self._camt054_c_msg_id

    @camt054_c_msg_id.setter
    def camt054_c_msg_id(self, camt054_c_msg_id):
        """Sets the camt054_c_msg_id of this PaymentBatch.


        :param camt054_c_msg_id: The camt054_c_msg_id of this PaymentBatch.  # noqa: E501
        :type: str
        """

        self._camt054_c_msg_id = camt054_c_msg_id

    @property
    def payment_file_id(self):
        """Gets the payment_file_id of this PaymentBatch.  # noqa: E501


        :return: The payment_file_id of this PaymentBatch.  # noqa: E501
        :rtype: int
        """
        return self._payment_file_id

    @payment_file_id.setter
    def payment_file_id(self, payment_file_id):
        """Sets the payment_file_id of this PaymentBatch.


        :param payment_file_id: The payment_file_id of this PaymentBatch.  # noqa: E501
        :type: int
        """

        self._payment_file_id = payment_file_id

    @property
    def status_code(self):
        """Gets the status_code of this PaymentBatch.  # noqa: E501


        :return: The status_code of this PaymentBatch.  # noqa: E501
        :rtype: int
        """
        return self._status_code

    @status_code.setter
    def status_code(self, status_code):
        """Sets the status_code of this PaymentBatch.


        :param status_code: The status_code of this PaymentBatch.  # noqa: E501
        :type: int
        """

        self._status_code = status_code

    @property
    def deleted(self):
        """Gets the deleted of this PaymentBatch.  # noqa: E501


        :return: The deleted of this PaymentBatch.  # noqa: E501
        :rtype: bool
        """
        return self._deleted

    @deleted.setter
    def deleted(self, deleted):
        """Sets the deleted of this PaymentBatch.


        :param deleted: The deleted of this PaymentBatch.  # noqa: E501
        :type: bool
        """

        self._deleted = deleted

    @property
    def hash_value(self):
        """Gets the hash_value of this PaymentBatch.  # noqa: E501


        :return: The hash_value of this PaymentBatch.  # noqa: E501
        :rtype: str
        """
        return self._hash_value

    @hash_value.setter
    def hash_value(self, hash_value):
        """Sets the hash_value of this PaymentBatch.


        :param hash_value: The hash_value of this PaymentBatch.  # noqa: E501
        :type: str
        """

        self._hash_value = hash_value

    @property
    def id(self):
        """Gets the id of this PaymentBatch.  # noqa: E501


        :return: The id of this PaymentBatch.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this PaymentBatch.


        :param id: The id of this PaymentBatch.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def payment_reference_id(self):
        """Gets the payment_reference_id of this PaymentBatch.  # noqa: E501


        :return: The payment_reference_id of this PaymentBatch.  # noqa: E501
        :rtype: str
        """
        return self._payment_reference_id

    @payment_reference_id.setter
    def payment_reference_id(self, payment_reference_id):
        """Sets the payment_reference_id of this PaymentBatch.


        :param payment_reference_id: The payment_reference_id of this PaymentBatch.  # noqa: E501
        :type: str
        """

        self._payment_reference_id = payment_reference_id

    @property
    def ocr_transmission_number(self):
        """Gets the ocr_transmission_number of this PaymentBatch.  # noqa: E501


        :return: The ocr_transmission_number of this PaymentBatch.  # noqa: E501
        :rtype: int
        """
        return self._ocr_transmission_number

    @ocr_transmission_number.setter
    def ocr_transmission_number(self, ocr_transmission_number):
        """Sets the ocr_transmission_number of this PaymentBatch.


        :param ocr_transmission_number: The ocr_transmission_number of this PaymentBatch.  # noqa: E501
        :type: int
        """

        self._ocr_transmission_number = ocr_transmission_number

    @property
    def updated_by(self):
        """Gets the updated_by of this PaymentBatch.  # noqa: E501


        :return: The updated_by of this PaymentBatch.  # noqa: E501
        :rtype: str
        """
        return self._updated_by

    @updated_by.setter
    def updated_by(self, updated_by):
        """Sets the updated_by of this PaymentBatch.


        :param updated_by: The updated_by of this PaymentBatch.  # noqa: E501
        :type: str
        """

        self._updated_by = updated_by

    @property
    def payment_status_report_file_id(self):
        """Gets the payment_status_report_file_id of this PaymentBatch.  # noqa: E501


        :return: The payment_status_report_file_id of this PaymentBatch.  # noqa: E501
        :rtype: int
        """
        return self._payment_status_report_file_id

    @payment_status_report_file_id.setter
    def payment_status_report_file_id(self, payment_status_report_file_id):
        """Sets the payment_status_report_file_id of this PaymentBatch.


        :param payment_status_report_file_id: The payment_status_report_file_id of this PaymentBatch.  # noqa: E501
        :type: int
        """

        self._payment_status_report_file_id = payment_status_report_file_id

    @property
    def created_by(self):
        """Gets the created_by of this PaymentBatch.  # noqa: E501


        :return: The created_by of this PaymentBatch.  # noqa: E501
        :rtype: str
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this PaymentBatch.


        :param created_by: The created_by of this PaymentBatch.  # noqa: E501
        :type: str
        """

        self._created_by = created_by

    @property
    def number_of_payments(self):
        """Gets the number_of_payments of this PaymentBatch.  # noqa: E501


        :return: The number_of_payments of this PaymentBatch.  # noqa: E501
        :rtype: int
        """
        return self._number_of_payments

    @number_of_payments.setter
    def number_of_payments(self, number_of_payments):
        """Sets the number_of_payments of this PaymentBatch.


        :param number_of_payments: The number_of_payments of this PaymentBatch.  # noqa: E501
        :type: int
        """

        self._number_of_payments = number_of_payments

    @property
    def ocr_heading_strings(self):
        """Gets the ocr_heading_strings of this PaymentBatch.  # noqa: E501


        :return: The ocr_heading_strings of this PaymentBatch.  # noqa: E501
        :rtype: str
        """
        return self._ocr_heading_strings

    @ocr_heading_strings.setter
    def ocr_heading_strings(self, ocr_heading_strings):
        """Sets the ocr_heading_strings of this PaymentBatch.


        :param ocr_heading_strings: The ocr_heading_strings of this PaymentBatch.  # noqa: E501
        :type: str
        """

        self._ocr_heading_strings = ocr_heading_strings

    @property
    def is_customer_payment(self):
        """Gets the is_customer_payment of this PaymentBatch.  # noqa: E501


        :return: The is_customer_payment of this PaymentBatch.  # noqa: E501
        :rtype: bool
        """
        return self._is_customer_payment

    @is_customer_payment.setter
    def is_customer_payment(self, is_customer_payment):
        """Sets the is_customer_payment of this PaymentBatch.


        :param is_customer_payment: The is_customer_payment of this PaymentBatch.  # noqa: E501
        :type: bool
        """

        self._is_customer_payment = is_customer_payment

    @property
    def payments(self):
        """Gets the payments of this PaymentBatch.  # noqa: E501


        :return: The payments of this PaymentBatch.  # noqa: E501
        :rtype: list[Payment]
        """
        return self._payments

    @payments.setter
    def payments(self, payments):
        """Sets the payments of this PaymentBatch.


        :param payments: The payments of this PaymentBatch.  # noqa: E501
        :type: list[Payment]
        """

        self._payments = payments

    @property
    def custom_values(self):
        """Gets the custom_values of this PaymentBatch.  # noqa: E501


        :return: The custom_values of this PaymentBatch.  # noqa: E501
        :rtype: CustomValues
        """
        return self._custom_values

    @custom_values.setter
    def custom_values(self, custom_values):
        """Sets the custom_values of this PaymentBatch.


        :param custom_values: The custom_values of this PaymentBatch.  # noqa: E501
        :type: CustomValues
        """

        self._custom_values = custom_values

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(PaymentBatch, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, PaymentBatch):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other

# coding: utf-8

"""

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class AmeldingData(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'year': 'int',
        'message_id': 'str',
        'altinn_status': 'str',
        'main_file_id': 'int',
        'status_code': 'int',
        'deleted': 'bool',
        'status': 'int',
        'type': 'str',
        'feedback_file_id': 'int',
        'receipt_id': 'int',
        'id': 'int',
        'oppgave_hash': 'str',
        'replaces_id': 'int',
        'updated_by': 'str',
        'created_by': 'str',
        'attachment_file_id': 'int',
        'period': 'int',
        'payroll_run_id': 'int',
        'custom_values': 'CustomValues'
    }

    attribute_map = {
        'year': 'year',
        'message_id': 'messageID',
        'altinn_status': 'altinnStatus',
        'main_file_id': 'mainFileID',
        'status_code': 'StatusCode',
        'deleted': 'Deleted',
        'status': 'status',
        'type': 'type',
        'feedback_file_id': 'feedbackFileID',
        'receipt_id': 'receiptID',
        'id': 'ID',
        'oppgave_hash': 'OppgaveHash',
        'replaces_id': 'replacesID',
        'updated_by': 'UpdatedBy',
        'created_by': 'CreatedBy',
        'attachment_file_id': 'attachmentFileID',
        'period': 'period',
        'payroll_run_id': 'PayrollRunID',
        'custom_values': 'CustomValues'
    }

    def __init__(self, year=None, message_id=None, altinn_status=None, main_file_id=None, status_code=None, deleted=None, status=None, type=None, feedback_file_id=None, receipt_id=None, id=None, oppgave_hash=None, replaces_id=None, updated_by=None, created_by=None, attachment_file_id=None, period=None, payroll_run_id=None, custom_values=None):  # noqa: E501
        """AmeldingData - a model defined in Swagger"""  # noqa: E501
        self._year = None
        self._message_id = None
        self._altinn_status = None
        self._main_file_id = None
        self._status_code = None
        self._deleted = None
        self._status = None
        self._type = None
        self._feedback_file_id = None
        self._receipt_id = None
        self._id = None
        self._oppgave_hash = None
        self._replaces_id = None
        self._updated_by = None
        self._created_by = None
        self._attachment_file_id = None
        self._period = None
        self._payroll_run_id = None
        self._custom_values = None
        self.discriminator = None
        if year is not None:
            self.year = year
        if message_id is not None:
            self.message_id = message_id
        if altinn_status is not None:
            self.altinn_status = altinn_status
        if main_file_id is not None:
            self.main_file_id = main_file_id
        if status_code is not None:
            self.status_code = status_code
        if deleted is not None:
            self.deleted = deleted
        if status is not None:
            self.status = status
        if type is not None:
            self.type = type
        if feedback_file_id is not None:
            self.feedback_file_id = feedback_file_id
        if receipt_id is not None:
            self.receipt_id = receipt_id
        if id is not None:
            self.id = id
        if oppgave_hash is not None:
            self.oppgave_hash = oppgave_hash
        if replaces_id is not None:
            self.replaces_id = replaces_id
        if updated_by is not None:
            self.updated_by = updated_by
        if created_by is not None:
            self.created_by = created_by
        if attachment_file_id is not None:
            self.attachment_file_id = attachment_file_id
        if period is not None:
            self.period = period
        if payroll_run_id is not None:
            self.payroll_run_id = payroll_run_id
        if custom_values is not None:
            self.custom_values = custom_values

    @property
    def year(self):
        """Gets the year of this AmeldingData.  # noqa: E501


        :return: The year of this AmeldingData.  # noqa: E501
        :rtype: int
        """
        return self._year

    @year.setter
    def year(self, year):
        """Sets the year of this AmeldingData.


        :param year: The year of this AmeldingData.  # noqa: E501
        :type: int
        """

        self._year = year

    @property
    def message_id(self):
        """Gets the message_id of this AmeldingData.  # noqa: E501


        :return: The message_id of this AmeldingData.  # noqa: E501
        :rtype: str
        """
        return self._message_id

    @message_id.setter
    def message_id(self, message_id):
        """Sets the message_id of this AmeldingData.


        :param message_id: The message_id of this AmeldingData.  # noqa: E501
        :type: str
        """

        self._message_id = message_id

    @property
    def altinn_status(self):
        """Gets the altinn_status of this AmeldingData.  # noqa: E501


        :return: The altinn_status of this AmeldingData.  # noqa: E501
        :rtype: str
        """
        return self._altinn_status

    @altinn_status.setter
    def altinn_status(self, altinn_status):
        """Sets the altinn_status of this AmeldingData.


        :param altinn_status: The altinn_status of this AmeldingData.  # noqa: E501
        :type: str
        """

        self._altinn_status = altinn_status

    @property
    def main_file_id(self):
        """Gets the main_file_id of this AmeldingData.  # noqa: E501


        :return: The main_file_id of this AmeldingData.  # noqa: E501
        :rtype: int
        """
        return self._main_file_id

    @main_file_id.setter
    def main_file_id(self, main_file_id):
        """Sets the main_file_id of this AmeldingData.


        :param main_file_id: The main_file_id of this AmeldingData.  # noqa: E501
        :type: int
        """

        self._main_file_id = main_file_id

    @property
    def status_code(self):
        """Gets the status_code of this AmeldingData.  # noqa: E501


        :return: The status_code of this AmeldingData.  # noqa: E501
        :rtype: int
        """
        return self._status_code

    @status_code.setter
    def status_code(self, status_code):
        """Sets the status_code of this AmeldingData.


        :param status_code: The status_code of this AmeldingData.  # noqa: E501
        :type: int
        """

        self._status_code = status_code

    @property
    def deleted(self):
        """Gets the deleted of this AmeldingData.  # noqa: E501


        :return: The deleted of this AmeldingData.  # noqa: E501
        :rtype: bool
        """
        return self._deleted

    @deleted.setter
    def deleted(self, deleted):
        """Sets the deleted of this AmeldingData.


        :param deleted: The deleted of this AmeldingData.  # noqa: E501
        :type: bool
        """

        self._deleted = deleted

    @property
    def status(self):
        """Gets the status of this AmeldingData.  # noqa: E501


        :return: The status of this AmeldingData.  # noqa: E501
        :rtype: int
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this AmeldingData.


        :param status: The status of this AmeldingData.  # noqa: E501
        :type: int
        """

        self._status = status

    @property
    def type(self):
        """Gets the type of this AmeldingData.  # noqa: E501


        :return: The type of this AmeldingData.  # noqa: E501
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this AmeldingData.


        :param type: The type of this AmeldingData.  # noqa: E501
        :type: str
        """

        self._type = type

    @property
    def feedback_file_id(self):
        """Gets the feedback_file_id of this AmeldingData.  # noqa: E501


        :return: The feedback_file_id of this AmeldingData.  # noqa: E501
        :rtype: int
        """
        return self._feedback_file_id

    @feedback_file_id.setter
    def feedback_file_id(self, feedback_file_id):
        """Sets the feedback_file_id of this AmeldingData.


        :param feedback_file_id: The feedback_file_id of this AmeldingData.  # noqa: E501
        :type: int
        """

        self._feedback_file_id = feedback_file_id

    @property
    def receipt_id(self):
        """Gets the receipt_id of this AmeldingData.  # noqa: E501


        :return: The receipt_id of this AmeldingData.  # noqa: E501
        :rtype: int
        """
        return self._receipt_id

    @receipt_id.setter
    def receipt_id(self, receipt_id):
        """Sets the receipt_id of this AmeldingData.


        :param receipt_id: The receipt_id of this AmeldingData.  # noqa: E501
        :type: int
        """

        self._receipt_id = receipt_id

    @property
    def id(self):
        """Gets the id of this AmeldingData.  # noqa: E501


        :return: The id of this AmeldingData.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this AmeldingData.


        :param id: The id of this AmeldingData.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def oppgave_hash(self):
        """Gets the oppgave_hash of this AmeldingData.  # noqa: E501


        :return: The oppgave_hash of this AmeldingData.  # noqa: E501
        :rtype: str
        """
        return self._oppgave_hash

    @oppgave_hash.setter
    def oppgave_hash(self, oppgave_hash):
        """Sets the oppgave_hash of this AmeldingData.


        :param oppgave_hash: The oppgave_hash of this AmeldingData.  # noqa: E501
        :type: str
        """

        self._oppgave_hash = oppgave_hash

    @property
    def replaces_id(self):
        """Gets the replaces_id of this AmeldingData.  # noqa: E501


        :return: The replaces_id of this AmeldingData.  # noqa: E501
        :rtype: int
        """
        return self._replaces_id

    @replaces_id.setter
    def replaces_id(self, replaces_id):
        """Sets the replaces_id of this AmeldingData.


        :param replaces_id: The replaces_id of this AmeldingData.  # noqa: E501
        :type: int
        """

        self._replaces_id = replaces_id

    @property
    def updated_by(self):
        """Gets the updated_by of this AmeldingData.  # noqa: E501


        :return: The updated_by of this AmeldingData.  # noqa: E501
        :rtype: str
        """
        return self._updated_by

    @updated_by.setter
    def updated_by(self, updated_by):
        """Sets the updated_by of this AmeldingData.


        :param updated_by: The updated_by of this AmeldingData.  # noqa: E501
        :type: str
        """

        self._updated_by = updated_by

    @property
    def created_by(self):
        """Gets the created_by of this AmeldingData.  # noqa: E501


        :return: The created_by of this AmeldingData.  # noqa: E501
        :rtype: str
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this AmeldingData.


        :param created_by: The created_by of this AmeldingData.  # noqa: E501
        :type: str
        """

        self._created_by = created_by

    @property
    def attachment_file_id(self):
        """Gets the attachment_file_id of this AmeldingData.  # noqa: E501


        :return: The attachment_file_id of this AmeldingData.  # noqa: E501
        :rtype: int
        """
        return self._attachment_file_id

    @attachment_file_id.setter
    def attachment_file_id(self, attachment_file_id):
        """Sets the attachment_file_id of this AmeldingData.


        :param attachment_file_id: The attachment_file_id of this AmeldingData.  # noqa: E501
        :type: int
        """

        self._attachment_file_id = attachment_file_id

    @property
    def period(self):
        """Gets the period of this AmeldingData.  # noqa: E501


        :return: The period of this AmeldingData.  # noqa: E501
        :rtype: int
        """
        return self._period

    @period.setter
    def period(self, period):
        """Sets the period of this AmeldingData.


        :param period: The period of this AmeldingData.  # noqa: E501
        :type: int
        """

        self._period = period

    @property
    def payroll_run_id(self):
        """Gets the payroll_run_id of this AmeldingData.  # noqa: E501


        :return: The payroll_run_id of this AmeldingData.  # noqa: E501
        :rtype: int
        """
        return self._payroll_run_id

    @payroll_run_id.setter
    def payroll_run_id(self, payroll_run_id):
        """Sets the payroll_run_id of this AmeldingData.


        :param payroll_run_id: The payroll_run_id of this AmeldingData.  # noqa: E501
        :type: int
        """

        self._payroll_run_id = payroll_run_id

    @property
    def custom_values(self):
        """Gets the custom_values of this AmeldingData.  # noqa: E501


        :return: The custom_values of this AmeldingData.  # noqa: E501
        :rtype: CustomValues
        """
        return self._custom_values

    @custom_values.setter
    def custom_values(self, custom_values):
        """Sets the custom_values of this AmeldingData.


        :param custom_values: The custom_values of this AmeldingData.  # noqa: E501
        :type: CustomValues
        """

        self._custom_values = custom_values

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(AmeldingData, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, AmeldingData):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other

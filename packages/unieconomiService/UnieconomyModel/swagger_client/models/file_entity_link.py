# coding: utf-8

"""

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class FileEntityLink(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'is_attachment': 'bool',
        'status_code': 'int',
        'deleted': 'bool',
        'entity_type': 'str',
        'id': 'int',
        'updated_by': 'str',
        'created_by': 'str',
        'file_id': 'int',
        'entity_id': 'int',
        'file': 'File',
        'custom_values': 'CustomValues'
    }

    attribute_map = {
        'is_attachment': 'IsAttachment',
        'status_code': 'StatusCode',
        'deleted': 'Deleted',
        'entity_type': 'EntityType',
        'id': 'ID',
        'updated_by': 'UpdatedBy',
        'created_by': 'CreatedBy',
        'file_id': 'FileID',
        'entity_id': 'EntityID',
        'file': 'File',
        'custom_values': 'CustomValues'
    }

    def __init__(self, is_attachment=None, status_code=None, deleted=None, entity_type=None, id=None, updated_by=None, created_by=None, file_id=None, entity_id=None, file=None, custom_values=None):  # noqa: E501
        """FileEntityLink - a model defined in Swagger"""  # noqa: E501
        self._is_attachment = None
        self._status_code = None
        self._deleted = None
        self._entity_type = None
        self._id = None
        self._updated_by = None
        self._created_by = None
        self._file_id = None
        self._entity_id = None
        self._file = None
        self._custom_values = None
        self.discriminator = None
        if is_attachment is not None:
            self.is_attachment = is_attachment
        if status_code is not None:
            self.status_code = status_code
        if deleted is not None:
            self.deleted = deleted
        if entity_type is not None:
            self.entity_type = entity_type
        if id is not None:
            self.id = id
        if updated_by is not None:
            self.updated_by = updated_by
        if created_by is not None:
            self.created_by = created_by
        if file_id is not None:
            self.file_id = file_id
        if entity_id is not None:
            self.entity_id = entity_id
        if file is not None:
            self.file = file
        if custom_values is not None:
            self.custom_values = custom_values

    @property
    def is_attachment(self):
        """Gets the is_attachment of this FileEntityLink.  # noqa: E501


        :return: The is_attachment of this FileEntityLink.  # noqa: E501
        :rtype: bool
        """
        return self._is_attachment

    @is_attachment.setter
    def is_attachment(self, is_attachment):
        """Sets the is_attachment of this FileEntityLink.


        :param is_attachment: The is_attachment of this FileEntityLink.  # noqa: E501
        :type: bool
        """

        self._is_attachment = is_attachment

    @property
    def status_code(self):
        """Gets the status_code of this FileEntityLink.  # noqa: E501


        :return: The status_code of this FileEntityLink.  # noqa: E501
        :rtype: int
        """
        return self._status_code

    @status_code.setter
    def status_code(self, status_code):
        """Sets the status_code of this FileEntityLink.


        :param status_code: The status_code of this FileEntityLink.  # noqa: E501
        :type: int
        """

        self._status_code = status_code

    @property
    def deleted(self):
        """Gets the deleted of this FileEntityLink.  # noqa: E501


        :return: The deleted of this FileEntityLink.  # noqa: E501
        :rtype: bool
        """
        return self._deleted

    @deleted.setter
    def deleted(self, deleted):
        """Sets the deleted of this FileEntityLink.


        :param deleted: The deleted of this FileEntityLink.  # noqa: E501
        :type: bool
        """

        self._deleted = deleted

    @property
    def entity_type(self):
        """Gets the entity_type of this FileEntityLink.  # noqa: E501


        :return: The entity_type of this FileEntityLink.  # noqa: E501
        :rtype: str
        """
        return self._entity_type

    @entity_type.setter
    def entity_type(self, entity_type):
        """Sets the entity_type of this FileEntityLink.


        :param entity_type: The entity_type of this FileEntityLink.  # noqa: E501
        :type: str
        """

        self._entity_type = entity_type

    @property
    def id(self):
        """Gets the id of this FileEntityLink.  # noqa: E501


        :return: The id of this FileEntityLink.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this FileEntityLink.


        :param id: The id of this FileEntityLink.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def updated_by(self):
        """Gets the updated_by of this FileEntityLink.  # noqa: E501


        :return: The updated_by of this FileEntityLink.  # noqa: E501
        :rtype: str
        """
        return self._updated_by

    @updated_by.setter
    def updated_by(self, updated_by):
        """Sets the updated_by of this FileEntityLink.


        :param updated_by: The updated_by of this FileEntityLink.  # noqa: E501
        :type: str
        """

        self._updated_by = updated_by

    @property
    def created_by(self):
        """Gets the created_by of this FileEntityLink.  # noqa: E501


        :return: The created_by of this FileEntityLink.  # noqa: E501
        :rtype: str
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this FileEntityLink.


        :param created_by: The created_by of this FileEntityLink.  # noqa: E501
        :type: str
        """

        self._created_by = created_by

    @property
    def file_id(self):
        """Gets the file_id of this FileEntityLink.  # noqa: E501


        :return: The file_id of this FileEntityLink.  # noqa: E501
        :rtype: int
        """
        return self._file_id

    @file_id.setter
    def file_id(self, file_id):
        """Sets the file_id of this FileEntityLink.


        :param file_id: The file_id of this FileEntityLink.  # noqa: E501
        :type: int
        """

        self._file_id = file_id

    @property
    def entity_id(self):
        """Gets the entity_id of this FileEntityLink.  # noqa: E501


        :return: The entity_id of this FileEntityLink.  # noqa: E501
        :rtype: int
        """
        return self._entity_id

    @entity_id.setter
    def entity_id(self, entity_id):
        """Sets the entity_id of this FileEntityLink.


        :param entity_id: The entity_id of this FileEntityLink.  # noqa: E501
        :type: int
        """

        self._entity_id = entity_id

    @property
    def file(self):
        """Gets the file of this FileEntityLink.  # noqa: E501


        :return: The file of this FileEntityLink.  # noqa: E501
        :rtype: File
        """
        return self._file

    @file.setter
    def file(self, file):
        """Sets the file of this FileEntityLink.


        :param file: The file of this FileEntityLink.  # noqa: E501
        :type: File
        """

        self._file = file

    @property
    def custom_values(self):
        """Gets the custom_values of this FileEntityLink.  # noqa: E501


        :return: The custom_values of this FileEntityLink.  # noqa: E501
        :rtype: CustomValues
        """
        return self._custom_values

    @custom_values.setter
    def custom_values(self, custom_values):
        """Sets the custom_values of this FileEntityLink.


        :param custom_values: The custom_values of this FileEntityLink.  # noqa: E501
        :type: CustomValues
        """

        self._custom_values = custom_values

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(FileEntityLink, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, FileEntityLink):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other

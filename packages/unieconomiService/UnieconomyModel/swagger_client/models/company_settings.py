# coding: utf-8

"""

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class CompanySettings(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'customer_credit_days': 'int',
        'default_tof_currency_settings_id': 'int',
        'xtra_payment_org_xml_tag_value': 'str',
        'payment_bank_identification': 'str',
        'default_phone_id': 'int',
        'allow_avtalegiro_regular_invoice': 'bool',
        'gln': 'str',
        'tax_mandatory_type': 'int',
        'saf_timport_account_id': 'int',
        'enable_checkboxes_for_supplier_invoice_list': 'bool',
        'rounding_number_of_decimals': 'int',
        'two_stage_autobank_enabled': 'bool',
        'default_accrual_account_id': 'int',
        'ignore_payments_without_end_to_end_id': 'bool',
        'nets_integration_activated': 'bool',
        'show_number_of_decimals': 'int',
        'period_series_vat_id': 'int',
        'ap_activated': 'bool',
        'company_type_id': 'int',
        'rounding_type': 'str',
        'logo_file_id': 'int',
        'period_series_account_id': 'int',
        'logo_align': 'int',
        'bank_charge_account_id': 'int',
        'agio_gain_account_id': 'int',
        'ap_contact_id': 'int',
        'save_customers_from_quote_as_lead': 'bool',
        'use_financial_date_to_calculate_vat_percent': 'bool',
        'factoring': 'int',
        'enable_approval_flow': 'bool',
        'default_customer_order_report_id': 'int',
        'organization_number': 'str',
        'tax_bank_account_id': 'int',
        'has_autobank': 'bool',
        'status_code': 'int',
        'company_bank_account_id': 'int',
        'deleted': 'bool',
        'default_email_id': 'int',
        'default_customer_invoice_reminder_report_id': 'int',
        'enable_archive_supplier_invoice': 'bool',
        'logo_hide_field': 'int',
        'interrim_payment_account_id': 'int',
        'payment_bank_agreement_number': 'str',
        'default_customer_invoice_report_id': 'int',
        'enable_send_payment_before_journaled': 'bool',
        'use_ocr_interpretation': 'bool',
        'company_name': 'str',
        'default_distributions_id': 'int',
        'store_distributed_invoice': 'bool',
        'enable_advanced_journal_entry': 'bool',
        'hide_in_active_customers': 'bool',
        'auto_journal_payment': 'str',
        'account_visibility_group_id': 'int',
        'factoring_email_id': 'int',
        'id': 'int',
        'book_customer_invoice_on_delivery_date': 'bool',
        'agio_loss_account_id': 'int',
        'use_payment_bank_values': 'bool',
        'show_kid_on_customer_invoice': 'bool',
        'company_registered': 'bool',
        'hide_in_active_suppliers': 'bool',
        'tax_mandatory': 'bool',
        'default_address_id': 'int',
        'updated_by': 'str',
        'auto_distribute_invoice': 'bool',
        'web_address': 'str',
        'office_municipality_no': 'str',
        'use_asset_register': 'bool',
        'created_by': 'str',
        'default_customer_quote_report_id': 'int',
        'supplier_account_id': 'int',
        'default_sales_account_id': 'int',
        'settlement_vat_account_id': 'int',
        'ap_include_attachment': 'bool',
        'vat_report_form_id': 'int',
        'customer_account_id': 'int',
        'salary_bank_account_id': 'int',
        'ap_guid': 'str',
        'factoring_number': 'int',
        'use_nets_integration': 'bool',
        'interrim_remit_account_id': 'int',
        'localization': 'str',
        'force_supplier_invoice_approval': 'bool',
        'acceptable_delta4_customer_payment_account_id': 'int',
        'use_xtra_payment_org_xml_tag': 'bool',
        'customer_invoice_reminder_settings_id': 'int',
        'account_group_set_id': 'int',
        'base_currency_code_id': 'int',
        'default_address': 'Address',
        'default_phone': 'Phone',
        'default_email': 'Email',
        'saf_timport_account': 'Account',
        'bank_accounts': 'list[BankAccount]',
        'company_bank_account': 'BankAccount',
        'tax_bank_account': 'BankAccount',
        'salary_bank_account': 'BankAccount',
        'ap_contact': 'Contact',
        'ap_incomming': 'list[AccessPointFormat]',
        'ap_outgoing': 'list[AccessPointFormat]',
        'distributions': 'Distributions',
        'customer_invoice_reminder_settings': 'CustomerInvoiceReminderSettings',
        'default_tof_currency_settings': 'TOFCurrencySettings',
        'factoring_email': 'Email',
        'custom_values': 'CustomValues'
    }

    attribute_map = {
        'customer_credit_days': 'CustomerCreditDays',
        'default_tof_currency_settings_id': 'DefaultTOFCurrencySettingsID',
        'xtra_payment_org_xml_tag_value': 'XtraPaymentOrgXmlTagValue',
        'payment_bank_identification': 'PaymentBankIdentification',
        'default_phone_id': 'DefaultPhoneID',
        'allow_avtalegiro_regular_invoice': 'AllowAvtalegiroRegularInvoice',
        'gln': 'GLN',
        'tax_mandatory_type': 'TaxMandatoryType',
        'saf_timport_account_id': 'SAFTimportAccountID',
        'enable_checkboxes_for_supplier_invoice_list': 'EnableCheckboxesForSupplierInvoiceList',
        'rounding_number_of_decimals': 'RoundingNumberOfDecimals',
        'two_stage_autobank_enabled': 'TwoStageAutobankEnabled',
        'default_accrual_account_id': 'DefaultAccrualAccountID',
        'ignore_payments_without_end_to_end_id': 'IgnorePaymentsWithoutEndToEndID',
        'nets_integration_activated': 'NetsIntegrationActivated',
        'show_number_of_decimals': 'ShowNumberOfDecimals',
        'period_series_vat_id': 'PeriodSeriesVatID',
        'ap_activated': 'APActivated',
        'company_type_id': 'CompanyTypeID',
        'rounding_type': 'RoundingType',
        'logo_file_id': 'LogoFileID',
        'period_series_account_id': 'PeriodSeriesAccountID',
        'logo_align': 'LogoAlign',
        'bank_charge_account_id': 'BankChargeAccountID',
        'agio_gain_account_id': 'AgioGainAccountID',
        'ap_contact_id': 'APContactID',
        'save_customers_from_quote_as_lead': 'SaveCustomersFromQuoteAsLead',
        'use_financial_date_to_calculate_vat_percent': 'UseFinancialDateToCalculateVatPercent',
        'factoring': 'Factoring',
        'enable_approval_flow': 'EnableApprovalFlow',
        'default_customer_order_report_id': 'DefaultCustomerOrderReportID',
        'organization_number': 'OrganizationNumber',
        'tax_bank_account_id': 'TaxBankAccountID',
        'has_autobank': 'HasAutobank',
        'status_code': 'StatusCode',
        'company_bank_account_id': 'CompanyBankAccountID',
        'deleted': 'Deleted',
        'default_email_id': 'DefaultEmailID',
        'default_customer_invoice_reminder_report_id': 'DefaultCustomerInvoiceReminderReportID',
        'enable_archive_supplier_invoice': 'EnableArchiveSupplierInvoice',
        'logo_hide_field': 'LogoHideField',
        'interrim_payment_account_id': 'InterrimPaymentAccountID',
        'payment_bank_agreement_number': 'PaymentBankAgreementNumber',
        'default_customer_invoice_report_id': 'DefaultCustomerInvoiceReportID',
        'enable_send_payment_before_journaled': 'EnableSendPaymentBeforeJournaled',
        'use_ocr_interpretation': 'UseOcrInterpretation',
        'company_name': 'CompanyName',
        'default_distributions_id': 'DefaultDistributionsID',
        'store_distributed_invoice': 'StoreDistributedInvoice',
        'enable_advanced_journal_entry': 'EnableAdvancedJournalEntry',
        'hide_in_active_customers': 'HideInActiveCustomers',
        'auto_journal_payment': 'AutoJournalPayment',
        'account_visibility_group_id': 'AccountVisibilityGroupID',
        'factoring_email_id': 'FactoringEmailID',
        'id': 'ID',
        'book_customer_invoice_on_delivery_date': 'BookCustomerInvoiceOnDeliveryDate',
        'agio_loss_account_id': 'AgioLossAccountID',
        'use_payment_bank_values': 'UsePaymentBankValues',
        'show_kid_on_customer_invoice': 'ShowKIDOnCustomerInvoice',
        'company_registered': 'CompanyRegistered',
        'hide_in_active_suppliers': 'HideInActiveSuppliers',
        'tax_mandatory': 'TaxMandatory',
        'default_address_id': 'DefaultAddressID',
        'updated_by': 'UpdatedBy',
        'auto_distribute_invoice': 'AutoDistributeInvoice',
        'web_address': 'WebAddress',
        'office_municipality_no': 'OfficeMunicipalityNo',
        'use_asset_register': 'UseAssetRegister',
        'created_by': 'CreatedBy',
        'default_customer_quote_report_id': 'DefaultCustomerQuoteReportID',
        'supplier_account_id': 'SupplierAccountID',
        'default_sales_account_id': 'DefaultSalesAccountID',
        'settlement_vat_account_id': 'SettlementVatAccountID',
        'ap_include_attachment': 'APIncludeAttachment',
        'vat_report_form_id': 'VatReportFormID',
        'customer_account_id': 'CustomerAccountID',
        'salary_bank_account_id': 'SalaryBankAccountID',
        'ap_guid': 'APGuid',
        'factoring_number': 'FactoringNumber',
        'use_nets_integration': 'UseNetsIntegration',
        'interrim_remit_account_id': 'InterrimRemitAccountID',
        'localization': 'Localization',
        'force_supplier_invoice_approval': 'ForceSupplierInvoiceApproval',
        'acceptable_delta4_customer_payment_account_id': 'AcceptableDelta4CustomerPaymentAccountID',
        'use_xtra_payment_org_xml_tag': 'UseXtraPaymentOrgXmlTag',
        'customer_invoice_reminder_settings_id': 'CustomerInvoiceReminderSettingsID',
        'account_group_set_id': 'AccountGroupSetID',
        'base_currency_code_id': 'BaseCurrencyCodeID',
        'default_address': 'DefaultAddress',
        'default_phone': 'DefaultPhone',
        'default_email': 'DefaultEmail',
        'saf_timport_account': 'SAFTimportAccount',
        'bank_accounts': 'BankAccounts',
        'company_bank_account': 'CompanyBankAccount',
        'tax_bank_account': 'TaxBankAccount',
        'salary_bank_account': 'SalaryBankAccount',
        'ap_contact': 'APContact',
        'ap_incomming': 'APIncomming',
        'ap_outgoing': 'APOutgoing',
        'distributions': 'Distributions',
        'customer_invoice_reminder_settings': 'CustomerInvoiceReminderSettings',
        'default_tof_currency_settings': 'DefaultTOFCurrencySettings',
        'factoring_email': 'FactoringEmail',
        'custom_values': 'CustomValues'
    }

    def __init__(self, customer_credit_days=None, default_tof_currency_settings_id=None, xtra_payment_org_xml_tag_value=None, payment_bank_identification=None, default_phone_id=None, allow_avtalegiro_regular_invoice=None, gln=None, tax_mandatory_type=None, saf_timport_account_id=None, enable_checkboxes_for_supplier_invoice_list=None, rounding_number_of_decimals=None, two_stage_autobank_enabled=None, default_accrual_account_id=None, ignore_payments_without_end_to_end_id=None, nets_integration_activated=None, show_number_of_decimals=None, period_series_vat_id=None, ap_activated=None, company_type_id=None, rounding_type=None, logo_file_id=None, period_series_account_id=None, logo_align=None, bank_charge_account_id=None, agio_gain_account_id=None, ap_contact_id=None, save_customers_from_quote_as_lead=None, use_financial_date_to_calculate_vat_percent=None, factoring=None, enable_approval_flow=None, default_customer_order_report_id=None, organization_number=None, tax_bank_account_id=None, has_autobank=None, status_code=None, company_bank_account_id=None, deleted=None, default_email_id=None, default_customer_invoice_reminder_report_id=None, enable_archive_supplier_invoice=None, logo_hide_field=None, interrim_payment_account_id=None, payment_bank_agreement_number=None, default_customer_invoice_report_id=None, enable_send_payment_before_journaled=None, use_ocr_interpretation=None, company_name=None, default_distributions_id=None, store_distributed_invoice=None, enable_advanced_journal_entry=None, hide_in_active_customers=None, auto_journal_payment=None, account_visibility_group_id=None, factoring_email_id=None, id=None, book_customer_invoice_on_delivery_date=None, agio_loss_account_id=None, use_payment_bank_values=None, show_kid_on_customer_invoice=None, company_registered=None, hide_in_active_suppliers=None, tax_mandatory=None, default_address_id=None, updated_by=None, auto_distribute_invoice=None, web_address=None, office_municipality_no=None, use_asset_register=None, created_by=None, default_customer_quote_report_id=None, supplier_account_id=None, default_sales_account_id=None, settlement_vat_account_id=None, ap_include_attachment=None, vat_report_form_id=None, customer_account_id=None, salary_bank_account_id=None, ap_guid=None, factoring_number=None, use_nets_integration=None, interrim_remit_account_id=None, localization=None, force_supplier_invoice_approval=None, acceptable_delta4_customer_payment_account_id=None, use_xtra_payment_org_xml_tag=None, customer_invoice_reminder_settings_id=None, account_group_set_id=None, base_currency_code_id=None, default_address=None, default_phone=None, default_email=None, saf_timport_account=None, bank_accounts=None, company_bank_account=None, tax_bank_account=None, salary_bank_account=None, ap_contact=None, ap_incomming=None, ap_outgoing=None, distributions=None, customer_invoice_reminder_settings=None, default_tof_currency_settings=None, factoring_email=None, custom_values=None):  # noqa: E501
        """CompanySettings - a model defined in Swagger"""  # noqa: E501
        self._customer_credit_days = None
        self._default_tof_currency_settings_id = None
        self._xtra_payment_org_xml_tag_value = None
        self._payment_bank_identification = None
        self._default_phone_id = None
        self._allow_avtalegiro_regular_invoice = None
        self._gln = None
        self._tax_mandatory_type = None
        self._saf_timport_account_id = None
        self._enable_checkboxes_for_supplier_invoice_list = None
        self._rounding_number_of_decimals = None
        self._two_stage_autobank_enabled = None
        self._default_accrual_account_id = None
        self._ignore_payments_without_end_to_end_id = None
        self._nets_integration_activated = None
        self._show_number_of_decimals = None
        self._period_series_vat_id = None
        self._ap_activated = None
        self._company_type_id = None
        self._rounding_type = None
        self._logo_file_id = None
        self._period_series_account_id = None
        self._logo_align = None
        self._bank_charge_account_id = None
        self._agio_gain_account_id = None
        self._ap_contact_id = None
        self._save_customers_from_quote_as_lead = None
        self._use_financial_date_to_calculate_vat_percent = None
        self._factoring = None
        self._enable_approval_flow = None
        self._default_customer_order_report_id = None
        self._organization_number = None
        self._tax_bank_account_id = None
        self._has_autobank = None
        self._status_code = None
        self._company_bank_account_id = None
        self._deleted = None
        self._default_email_id = None
        self._default_customer_invoice_reminder_report_id = None
        self._enable_archive_supplier_invoice = None
        self._logo_hide_field = None
        self._interrim_payment_account_id = None
        self._payment_bank_agreement_number = None
        self._default_customer_invoice_report_id = None
        self._enable_send_payment_before_journaled = None
        self._use_ocr_interpretation = None
        self._company_name = None
        self._default_distributions_id = None
        self._store_distributed_invoice = None
        self._enable_advanced_journal_entry = None
        self._hide_in_active_customers = None
        self._auto_journal_payment = None
        self._account_visibility_group_id = None
        self._factoring_email_id = None
        self._id = None
        self._book_customer_invoice_on_delivery_date = None
        self._agio_loss_account_id = None
        self._use_payment_bank_values = None
        self._show_kid_on_customer_invoice = None
        self._company_registered = None
        self._hide_in_active_suppliers = None
        self._tax_mandatory = None
        self._default_address_id = None
        self._updated_by = None
        self._auto_distribute_invoice = None
        self._web_address = None
        self._office_municipality_no = None
        self._use_asset_register = None
        self._created_by = None
        self._default_customer_quote_report_id = None
        self._supplier_account_id = None
        self._default_sales_account_id = None
        self._settlement_vat_account_id = None
        self._ap_include_attachment = None
        self._vat_report_form_id = None
        self._customer_account_id = None
        self._salary_bank_account_id = None
        self._ap_guid = None
        self._factoring_number = None
        self._use_nets_integration = None
        self._interrim_remit_account_id = None
        self._localization = None
        self._force_supplier_invoice_approval = None
        self._acceptable_delta4_customer_payment_account_id = None
        self._use_xtra_payment_org_xml_tag = None
        self._customer_invoice_reminder_settings_id = None
        self._account_group_set_id = None
        self._base_currency_code_id = None
        self._default_address = None
        self._default_phone = None
        self._default_email = None
        self._saf_timport_account = None
        self._bank_accounts = None
        self._company_bank_account = None
        self._tax_bank_account = None
        self._salary_bank_account = None
        self._ap_contact = None
        self._ap_incomming = None
        self._ap_outgoing = None
        self._distributions = None
        self._customer_invoice_reminder_settings = None
        self._default_tof_currency_settings = None
        self._factoring_email = None
        self._custom_values = None
        self.discriminator = None
        if customer_credit_days is not None:
            self.customer_credit_days = customer_credit_days
        if default_tof_currency_settings_id is not None:
            self.default_tof_currency_settings_id = default_tof_currency_settings_id
        if xtra_payment_org_xml_tag_value is not None:
            self.xtra_payment_org_xml_tag_value = xtra_payment_org_xml_tag_value
        if payment_bank_identification is not None:
            self.payment_bank_identification = payment_bank_identification
        if default_phone_id is not None:
            self.default_phone_id = default_phone_id
        if allow_avtalegiro_regular_invoice is not None:
            self.allow_avtalegiro_regular_invoice = allow_avtalegiro_regular_invoice
        if gln is not None:
            self.gln = gln
        if tax_mandatory_type is not None:
            self.tax_mandatory_type = tax_mandatory_type
        if saf_timport_account_id is not None:
            self.saf_timport_account_id = saf_timport_account_id
        if enable_checkboxes_for_supplier_invoice_list is not None:
            self.enable_checkboxes_for_supplier_invoice_list = enable_checkboxes_for_supplier_invoice_list
        if rounding_number_of_decimals is not None:
            self.rounding_number_of_decimals = rounding_number_of_decimals
        if two_stage_autobank_enabled is not None:
            self.two_stage_autobank_enabled = two_stage_autobank_enabled
        if default_accrual_account_id is not None:
            self.default_accrual_account_id = default_accrual_account_id
        if ignore_payments_without_end_to_end_id is not None:
            self.ignore_payments_without_end_to_end_id = ignore_payments_without_end_to_end_id
        if nets_integration_activated is not None:
            self.nets_integration_activated = nets_integration_activated
        if show_number_of_decimals is not None:
            self.show_number_of_decimals = show_number_of_decimals
        if period_series_vat_id is not None:
            self.period_series_vat_id = period_series_vat_id
        if ap_activated is not None:
            self.ap_activated = ap_activated
        if company_type_id is not None:
            self.company_type_id = company_type_id
        if rounding_type is not None:
            self.rounding_type = rounding_type
        if logo_file_id is not None:
            self.logo_file_id = logo_file_id
        if period_series_account_id is not None:
            self.period_series_account_id = period_series_account_id
        if logo_align is not None:
            self.logo_align = logo_align
        if bank_charge_account_id is not None:
            self.bank_charge_account_id = bank_charge_account_id
        if agio_gain_account_id is not None:
            self.agio_gain_account_id = agio_gain_account_id
        if ap_contact_id is not None:
            self.ap_contact_id = ap_contact_id
        if save_customers_from_quote_as_lead is not None:
            self.save_customers_from_quote_as_lead = save_customers_from_quote_as_lead
        if use_financial_date_to_calculate_vat_percent is not None:
            self.use_financial_date_to_calculate_vat_percent = use_financial_date_to_calculate_vat_percent
        if factoring is not None:
            self.factoring = factoring
        if enable_approval_flow is not None:
            self.enable_approval_flow = enable_approval_flow
        if default_customer_order_report_id is not None:
            self.default_customer_order_report_id = default_customer_order_report_id
        if organization_number is not None:
            self.organization_number = organization_number
        if tax_bank_account_id is not None:
            self.tax_bank_account_id = tax_bank_account_id
        if has_autobank is not None:
            self.has_autobank = has_autobank
        if status_code is not None:
            self.status_code = status_code
        if company_bank_account_id is not None:
            self.company_bank_account_id = company_bank_account_id
        if deleted is not None:
            self.deleted = deleted
        if default_email_id is not None:
            self.default_email_id = default_email_id
        if default_customer_invoice_reminder_report_id is not None:
            self.default_customer_invoice_reminder_report_id = default_customer_invoice_reminder_report_id
        if enable_archive_supplier_invoice is not None:
            self.enable_archive_supplier_invoice = enable_archive_supplier_invoice
        if logo_hide_field is not None:
            self.logo_hide_field = logo_hide_field
        if interrim_payment_account_id is not None:
            self.interrim_payment_account_id = interrim_payment_account_id
        if payment_bank_agreement_number is not None:
            self.payment_bank_agreement_number = payment_bank_agreement_number
        if default_customer_invoice_report_id is not None:
            self.default_customer_invoice_report_id = default_customer_invoice_report_id
        if enable_send_payment_before_journaled is not None:
            self.enable_send_payment_before_journaled = enable_send_payment_before_journaled
        if use_ocr_interpretation is not None:
            self.use_ocr_interpretation = use_ocr_interpretation
        if company_name is not None:
            self.company_name = company_name
        if default_distributions_id is not None:
            self.default_distributions_id = default_distributions_id
        if store_distributed_invoice is not None:
            self.store_distributed_invoice = store_distributed_invoice
        if enable_advanced_journal_entry is not None:
            self.enable_advanced_journal_entry = enable_advanced_journal_entry
        if hide_in_active_customers is not None:
            self.hide_in_active_customers = hide_in_active_customers
        if auto_journal_payment is not None:
            self.auto_journal_payment = auto_journal_payment
        if account_visibility_group_id is not None:
            self.account_visibility_group_id = account_visibility_group_id
        if factoring_email_id is not None:
            self.factoring_email_id = factoring_email_id
        if id is not None:
            self.id = id
        if book_customer_invoice_on_delivery_date is not None:
            self.book_customer_invoice_on_delivery_date = book_customer_invoice_on_delivery_date
        if agio_loss_account_id is not None:
            self.agio_loss_account_id = agio_loss_account_id
        if use_payment_bank_values is not None:
            self.use_payment_bank_values = use_payment_bank_values
        if show_kid_on_customer_invoice is not None:
            self.show_kid_on_customer_invoice = show_kid_on_customer_invoice
        if company_registered is not None:
            self.company_registered = company_registered
        if hide_in_active_suppliers is not None:
            self.hide_in_active_suppliers = hide_in_active_suppliers
        if tax_mandatory is not None:
            self.tax_mandatory = tax_mandatory
        if default_address_id is not None:
            self.default_address_id = default_address_id
        if updated_by is not None:
            self.updated_by = updated_by
        if auto_distribute_invoice is not None:
            self.auto_distribute_invoice = auto_distribute_invoice
        if web_address is not None:
            self.web_address = web_address
        if office_municipality_no is not None:
            self.office_municipality_no = office_municipality_no
        if use_asset_register is not None:
            self.use_asset_register = use_asset_register
        if created_by is not None:
            self.created_by = created_by
        if default_customer_quote_report_id is not None:
            self.default_customer_quote_report_id = default_customer_quote_report_id
        if supplier_account_id is not None:
            self.supplier_account_id = supplier_account_id
        if default_sales_account_id is not None:
            self.default_sales_account_id = default_sales_account_id
        if settlement_vat_account_id is not None:
            self.settlement_vat_account_id = settlement_vat_account_id
        if ap_include_attachment is not None:
            self.ap_include_attachment = ap_include_attachment
        if vat_report_form_id is not None:
            self.vat_report_form_id = vat_report_form_id
        if customer_account_id is not None:
            self.customer_account_id = customer_account_id
        if salary_bank_account_id is not None:
            self.salary_bank_account_id = salary_bank_account_id
        if ap_guid is not None:
            self.ap_guid = ap_guid
        if factoring_number is not None:
            self.factoring_number = factoring_number
        if use_nets_integration is not None:
            self.use_nets_integration = use_nets_integration
        if interrim_remit_account_id is not None:
            self.interrim_remit_account_id = interrim_remit_account_id
        if localization is not None:
            self.localization = localization
        if force_supplier_invoice_approval is not None:
            self.force_supplier_invoice_approval = force_supplier_invoice_approval
        if acceptable_delta4_customer_payment_account_id is not None:
            self.acceptable_delta4_customer_payment_account_id = acceptable_delta4_customer_payment_account_id
        if use_xtra_payment_org_xml_tag is not None:
            self.use_xtra_payment_org_xml_tag = use_xtra_payment_org_xml_tag
        if customer_invoice_reminder_settings_id is not None:
            self.customer_invoice_reminder_settings_id = customer_invoice_reminder_settings_id
        if account_group_set_id is not None:
            self.account_group_set_id = account_group_set_id
        if base_currency_code_id is not None:
            self.base_currency_code_id = base_currency_code_id
        if default_address is not None:
            self.default_address = default_address
        if default_phone is not None:
            self.default_phone = default_phone
        if default_email is not None:
            self.default_email = default_email
        if saf_timport_account is not None:
            self.saf_timport_account = saf_timport_account
        if bank_accounts is not None:
            self.bank_accounts = bank_accounts
        if company_bank_account is not None:
            self.company_bank_account = company_bank_account
        if tax_bank_account is not None:
            self.tax_bank_account = tax_bank_account
        if salary_bank_account is not None:
            self.salary_bank_account = salary_bank_account
        if ap_contact is not None:
            self.ap_contact = ap_contact
        if ap_incomming is not None:
            self.ap_incomming = ap_incomming
        if ap_outgoing is not None:
            self.ap_outgoing = ap_outgoing
        if distributions is not None:
            self.distributions = distributions
        if customer_invoice_reminder_settings is not None:
            self.customer_invoice_reminder_settings = customer_invoice_reminder_settings
        if default_tof_currency_settings is not None:
            self.default_tof_currency_settings = default_tof_currency_settings
        if factoring_email is not None:
            self.factoring_email = factoring_email
        if custom_values is not None:
            self.custom_values = custom_values

    @property
    def customer_credit_days(self):
        """Gets the customer_credit_days of this CompanySettings.  # noqa: E501


        :return: The customer_credit_days of this CompanySettings.  # noqa: E501
        :rtype: int
        """
        return self._customer_credit_days

    @customer_credit_days.setter
    def customer_credit_days(self, customer_credit_days):
        """Sets the customer_credit_days of this CompanySettings.


        :param customer_credit_days: The customer_credit_days of this CompanySettings.  # noqa: E501
        :type: int
        """

        self._customer_credit_days = customer_credit_days

    @property
    def default_tof_currency_settings_id(self):
        """Gets the default_tof_currency_settings_id of this CompanySettings.  # noqa: E501


        :return: The default_tof_currency_settings_id of this CompanySettings.  # noqa: E501
        :rtype: int
        """
        return self._default_tof_currency_settings_id

    @default_tof_currency_settings_id.setter
    def default_tof_currency_settings_id(self, default_tof_currency_settings_id):
        """Sets the default_tof_currency_settings_id of this CompanySettings.


        :param default_tof_currency_settings_id: The default_tof_currency_settings_id of this CompanySettings.  # noqa: E501
        :type: int
        """

        self._default_tof_currency_settings_id = default_tof_currency_settings_id

    @property
    def xtra_payment_org_xml_tag_value(self):
        """Gets the xtra_payment_org_xml_tag_value of this CompanySettings.  # noqa: E501


        :return: The xtra_payment_org_xml_tag_value of this CompanySettings.  # noqa: E501
        :rtype: str
        """
        return self._xtra_payment_org_xml_tag_value

    @xtra_payment_org_xml_tag_value.setter
    def xtra_payment_org_xml_tag_value(self, xtra_payment_org_xml_tag_value):
        """Sets the xtra_payment_org_xml_tag_value of this CompanySettings.


        :param xtra_payment_org_xml_tag_value: The xtra_payment_org_xml_tag_value of this CompanySettings.  # noqa: E501
        :type: str
        """

        self._xtra_payment_org_xml_tag_value = xtra_payment_org_xml_tag_value

    @property
    def payment_bank_identification(self):
        """Gets the payment_bank_identification of this CompanySettings.  # noqa: E501


        :return: The payment_bank_identification of this CompanySettings.  # noqa: E501
        :rtype: str
        """
        return self._payment_bank_identification

    @payment_bank_identification.setter
    def payment_bank_identification(self, payment_bank_identification):
        """Sets the payment_bank_identification of this CompanySettings.


        :param payment_bank_identification: The payment_bank_identification of this CompanySettings.  # noqa: E501
        :type: str
        """

        self._payment_bank_identification = payment_bank_identification

    @property
    def default_phone_id(self):
        """Gets the default_phone_id of this CompanySettings.  # noqa: E501


        :return: The default_phone_id of this CompanySettings.  # noqa: E501
        :rtype: int
        """
        return self._default_phone_id

    @default_phone_id.setter
    def default_phone_id(self, default_phone_id):
        """Sets the default_phone_id of this CompanySettings.


        :param default_phone_id: The default_phone_id of this CompanySettings.  # noqa: E501
        :type: int
        """

        self._default_phone_id = default_phone_id

    @property
    def allow_avtalegiro_regular_invoice(self):
        """Gets the allow_avtalegiro_regular_invoice of this CompanySettings.  # noqa: E501


        :return: The allow_avtalegiro_regular_invoice of this CompanySettings.  # noqa: E501
        :rtype: bool
        """
        return self._allow_avtalegiro_regular_invoice

    @allow_avtalegiro_regular_invoice.setter
    def allow_avtalegiro_regular_invoice(self, allow_avtalegiro_regular_invoice):
        """Sets the allow_avtalegiro_regular_invoice of this CompanySettings.


        :param allow_avtalegiro_regular_invoice: The allow_avtalegiro_regular_invoice of this CompanySettings.  # noqa: E501
        :type: bool
        """

        self._allow_avtalegiro_regular_invoice = allow_avtalegiro_regular_invoice

    @property
    def gln(self):
        """Gets the gln of this CompanySettings.  # noqa: E501


        :return: The gln of this CompanySettings.  # noqa: E501
        :rtype: str
        """
        return self._gln

    @gln.setter
    def gln(self, gln):
        """Sets the gln of this CompanySettings.


        :param gln: The gln of this CompanySettings.  # noqa: E501
        :type: str
        """

        self._gln = gln

    @property
    def tax_mandatory_type(self):
        """Gets the tax_mandatory_type of this CompanySettings.  # noqa: E501


        :return: The tax_mandatory_type of this CompanySettings.  # noqa: E501
        :rtype: int
        """
        return self._tax_mandatory_type

    @tax_mandatory_type.setter
    def tax_mandatory_type(self, tax_mandatory_type):
        """Sets the tax_mandatory_type of this CompanySettings.


        :param tax_mandatory_type: The tax_mandatory_type of this CompanySettings.  # noqa: E501
        :type: int
        """

        self._tax_mandatory_type = tax_mandatory_type

    @property
    def saf_timport_account_id(self):
        """Gets the saf_timport_account_id of this CompanySettings.  # noqa: E501


        :return: The saf_timport_account_id of this CompanySettings.  # noqa: E501
        :rtype: int
        """
        return self._saf_timport_account_id

    @saf_timport_account_id.setter
    def saf_timport_account_id(self, saf_timport_account_id):
        """Sets the saf_timport_account_id of this CompanySettings.


        :param saf_timport_account_id: The saf_timport_account_id of this CompanySettings.  # noqa: E501
        :type: int
        """

        self._saf_timport_account_id = saf_timport_account_id

    @property
    def enable_checkboxes_for_supplier_invoice_list(self):
        """Gets the enable_checkboxes_for_supplier_invoice_list of this CompanySettings.  # noqa: E501


        :return: The enable_checkboxes_for_supplier_invoice_list of this CompanySettings.  # noqa: E501
        :rtype: bool
        """
        return self._enable_checkboxes_for_supplier_invoice_list

    @enable_checkboxes_for_supplier_invoice_list.setter
    def enable_checkboxes_for_supplier_invoice_list(self, enable_checkboxes_for_supplier_invoice_list):
        """Sets the enable_checkboxes_for_supplier_invoice_list of this CompanySettings.


        :param enable_checkboxes_for_supplier_invoice_list: The enable_checkboxes_for_supplier_invoice_list of this CompanySettings.  # noqa: E501
        :type: bool
        """

        self._enable_checkboxes_for_supplier_invoice_list = enable_checkboxes_for_supplier_invoice_list

    @property
    def rounding_number_of_decimals(self):
        """Gets the rounding_number_of_decimals of this CompanySettings.  # noqa: E501


        :return: The rounding_number_of_decimals of this CompanySettings.  # noqa: E501
        :rtype: int
        """
        return self._rounding_number_of_decimals

    @rounding_number_of_decimals.setter
    def rounding_number_of_decimals(self, rounding_number_of_decimals):
        """Sets the rounding_number_of_decimals of this CompanySettings.


        :param rounding_number_of_decimals: The rounding_number_of_decimals of this CompanySettings.  # noqa: E501
        :type: int
        """

        self._rounding_number_of_decimals = rounding_number_of_decimals

    @property
    def two_stage_autobank_enabled(self):
        """Gets the two_stage_autobank_enabled of this CompanySettings.  # noqa: E501


        :return: The two_stage_autobank_enabled of this CompanySettings.  # noqa: E501
        :rtype: bool
        """
        return self._two_stage_autobank_enabled

    @two_stage_autobank_enabled.setter
    def two_stage_autobank_enabled(self, two_stage_autobank_enabled):
        """Sets the two_stage_autobank_enabled of this CompanySettings.


        :param two_stage_autobank_enabled: The two_stage_autobank_enabled of this CompanySettings.  # noqa: E501
        :type: bool
        """

        self._two_stage_autobank_enabled = two_stage_autobank_enabled

    @property
    def default_accrual_account_id(self):
        """Gets the default_accrual_account_id of this CompanySettings.  # noqa: E501


        :return: The default_accrual_account_id of this CompanySettings.  # noqa: E501
        :rtype: int
        """
        return self._default_accrual_account_id

    @default_accrual_account_id.setter
    def default_accrual_account_id(self, default_accrual_account_id):
        """Sets the default_accrual_account_id of this CompanySettings.


        :param default_accrual_account_id: The default_accrual_account_id of this CompanySettings.  # noqa: E501
        :type: int
        """

        self._default_accrual_account_id = default_accrual_account_id

    @property
    def ignore_payments_without_end_to_end_id(self):
        """Gets the ignore_payments_without_end_to_end_id of this CompanySettings.  # noqa: E501


        :return: The ignore_payments_without_end_to_end_id of this CompanySettings.  # noqa: E501
        :rtype: bool
        """
        return self._ignore_payments_without_end_to_end_id

    @ignore_payments_without_end_to_end_id.setter
    def ignore_payments_without_end_to_end_id(self, ignore_payments_without_end_to_end_id):
        """Sets the ignore_payments_without_end_to_end_id of this CompanySettings.


        :param ignore_payments_without_end_to_end_id: The ignore_payments_without_end_to_end_id of this CompanySettings.  # noqa: E501
        :type: bool
        """

        self._ignore_payments_without_end_to_end_id = ignore_payments_without_end_to_end_id

    @property
    def nets_integration_activated(self):
        """Gets the nets_integration_activated of this CompanySettings.  # noqa: E501


        :return: The nets_integration_activated of this CompanySettings.  # noqa: E501
        :rtype: bool
        """
        return self._nets_integration_activated

    @nets_integration_activated.setter
    def nets_integration_activated(self, nets_integration_activated):
        """Sets the nets_integration_activated of this CompanySettings.


        :param nets_integration_activated: The nets_integration_activated of this CompanySettings.  # noqa: E501
        :type: bool
        """

        self._nets_integration_activated = nets_integration_activated

    @property
    def show_number_of_decimals(self):
        """Gets the show_number_of_decimals of this CompanySettings.  # noqa: E501


        :return: The show_number_of_decimals of this CompanySettings.  # noqa: E501
        :rtype: int
        """
        return self._show_number_of_decimals

    @show_number_of_decimals.setter
    def show_number_of_decimals(self, show_number_of_decimals):
        """Sets the show_number_of_decimals of this CompanySettings.


        :param show_number_of_decimals: The show_number_of_decimals of this CompanySettings.  # noqa: E501
        :type: int
        """

        self._show_number_of_decimals = show_number_of_decimals

    @property
    def period_series_vat_id(self):
        """Gets the period_series_vat_id of this CompanySettings.  # noqa: E501


        :return: The period_series_vat_id of this CompanySettings.  # noqa: E501
        :rtype: int
        """
        return self._period_series_vat_id

    @period_series_vat_id.setter
    def period_series_vat_id(self, period_series_vat_id):
        """Sets the period_series_vat_id of this CompanySettings.


        :param period_series_vat_id: The period_series_vat_id of this CompanySettings.  # noqa: E501
        :type: int
        """

        self._period_series_vat_id = period_series_vat_id

    @property
    def ap_activated(self):
        """Gets the ap_activated of this CompanySettings.  # noqa: E501


        :return: The ap_activated of this CompanySettings.  # noqa: E501
        :rtype: bool
        """
        return self._ap_activated

    @ap_activated.setter
    def ap_activated(self, ap_activated):
        """Sets the ap_activated of this CompanySettings.


        :param ap_activated: The ap_activated of this CompanySettings.  # noqa: E501
        :type: bool
        """

        self._ap_activated = ap_activated

    @property
    def company_type_id(self):
        """Gets the company_type_id of this CompanySettings.  # noqa: E501


        :return: The company_type_id of this CompanySettings.  # noqa: E501
        :rtype: int
        """
        return self._company_type_id

    @company_type_id.setter
    def company_type_id(self, company_type_id):
        """Sets the company_type_id of this CompanySettings.


        :param company_type_id: The company_type_id of this CompanySettings.  # noqa: E501
        :type: int
        """

        self._company_type_id = company_type_id

    @property
    def rounding_type(self):
        """Gets the rounding_type of this CompanySettings.  # noqa: E501


        :return: The rounding_type of this CompanySettings.  # noqa: E501
        :rtype: str
        """
        return self._rounding_type

    @rounding_type.setter
    def rounding_type(self, rounding_type):
        """Sets the rounding_type of this CompanySettings.


        :param rounding_type: The rounding_type of this CompanySettings.  # noqa: E501
        :type: str
        """

        self._rounding_type = rounding_type

    @property
    def logo_file_id(self):
        """Gets the logo_file_id of this CompanySettings.  # noqa: E501


        :return: The logo_file_id of this CompanySettings.  # noqa: E501
        :rtype: int
        """
        return self._logo_file_id

    @logo_file_id.setter
    def logo_file_id(self, logo_file_id):
        """Sets the logo_file_id of this CompanySettings.


        :param logo_file_id: The logo_file_id of this CompanySettings.  # noqa: E501
        :type: int
        """

        self._logo_file_id = logo_file_id

    @property
    def period_series_account_id(self):
        """Gets the period_series_account_id of this CompanySettings.  # noqa: E501


        :return: The period_series_account_id of this CompanySettings.  # noqa: E501
        :rtype: int
        """
        return self._period_series_account_id

    @period_series_account_id.setter
    def period_series_account_id(self, period_series_account_id):
        """Sets the period_series_account_id of this CompanySettings.


        :param period_series_account_id: The period_series_account_id of this CompanySettings.  # noqa: E501
        :type: int
        """

        self._period_series_account_id = period_series_account_id

    @property
    def logo_align(self):
        """Gets the logo_align of this CompanySettings.  # noqa: E501


        :return: The logo_align of this CompanySettings.  # noqa: E501
        :rtype: int
        """
        return self._logo_align

    @logo_align.setter
    def logo_align(self, logo_align):
        """Sets the logo_align of this CompanySettings.


        :param logo_align: The logo_align of this CompanySettings.  # noqa: E501
        :type: int
        """

        self._logo_align = logo_align

    @property
    def bank_charge_account_id(self):
        """Gets the bank_charge_account_id of this CompanySettings.  # noqa: E501


        :return: The bank_charge_account_id of this CompanySettings.  # noqa: E501
        :rtype: int
        """
        return self._bank_charge_account_id

    @bank_charge_account_id.setter
    def bank_charge_account_id(self, bank_charge_account_id):
        """Sets the bank_charge_account_id of this CompanySettings.


        :param bank_charge_account_id: The bank_charge_account_id of this CompanySettings.  # noqa: E501
        :type: int
        """

        self._bank_charge_account_id = bank_charge_account_id

    @property
    def agio_gain_account_id(self):
        """Gets the agio_gain_account_id of this CompanySettings.  # noqa: E501


        :return: The agio_gain_account_id of this CompanySettings.  # noqa: E501
        :rtype: int
        """
        return self._agio_gain_account_id

    @agio_gain_account_id.setter
    def agio_gain_account_id(self, agio_gain_account_id):
        """Sets the agio_gain_account_id of this CompanySettings.


        :param agio_gain_account_id: The agio_gain_account_id of this CompanySettings.  # noqa: E501
        :type: int
        """

        self._agio_gain_account_id = agio_gain_account_id

    @property
    def ap_contact_id(self):
        """Gets the ap_contact_id of this CompanySettings.  # noqa: E501


        :return: The ap_contact_id of this CompanySettings.  # noqa: E501
        :rtype: int
        """
        return self._ap_contact_id

    @ap_contact_id.setter
    def ap_contact_id(self, ap_contact_id):
        """Sets the ap_contact_id of this CompanySettings.


        :param ap_contact_id: The ap_contact_id of this CompanySettings.  # noqa: E501
        :type: int
        """

        self._ap_contact_id = ap_contact_id

    @property
    def save_customers_from_quote_as_lead(self):
        """Gets the save_customers_from_quote_as_lead of this CompanySettings.  # noqa: E501


        :return: The save_customers_from_quote_as_lead of this CompanySettings.  # noqa: E501
        :rtype: bool
        """
        return self._save_customers_from_quote_as_lead

    @save_customers_from_quote_as_lead.setter
    def save_customers_from_quote_as_lead(self, save_customers_from_quote_as_lead):
        """Sets the save_customers_from_quote_as_lead of this CompanySettings.


        :param save_customers_from_quote_as_lead: The save_customers_from_quote_as_lead of this CompanySettings.  # noqa: E501
        :type: bool
        """

        self._save_customers_from_quote_as_lead = save_customers_from_quote_as_lead

    @property
    def use_financial_date_to_calculate_vat_percent(self):
        """Gets the use_financial_date_to_calculate_vat_percent of this CompanySettings.  # noqa: E501


        :return: The use_financial_date_to_calculate_vat_percent of this CompanySettings.  # noqa: E501
        :rtype: bool
        """
        return self._use_financial_date_to_calculate_vat_percent

    @use_financial_date_to_calculate_vat_percent.setter
    def use_financial_date_to_calculate_vat_percent(self, use_financial_date_to_calculate_vat_percent):
        """Sets the use_financial_date_to_calculate_vat_percent of this CompanySettings.


        :param use_financial_date_to_calculate_vat_percent: The use_financial_date_to_calculate_vat_percent of this CompanySettings.  # noqa: E501
        :type: bool
        """

        self._use_financial_date_to_calculate_vat_percent = use_financial_date_to_calculate_vat_percent

    @property
    def factoring(self):
        """Gets the factoring of this CompanySettings.  # noqa: E501


        :return: The factoring of this CompanySettings.  # noqa: E501
        :rtype: int
        """
        return self._factoring

    @factoring.setter
    def factoring(self, factoring):
        """Sets the factoring of this CompanySettings.


        :param factoring: The factoring of this CompanySettings.  # noqa: E501
        :type: int
        """

        self._factoring = factoring

    @property
    def enable_approval_flow(self):
        """Gets the enable_approval_flow of this CompanySettings.  # noqa: E501


        :return: The enable_approval_flow of this CompanySettings.  # noqa: E501
        :rtype: bool
        """
        return self._enable_approval_flow

    @enable_approval_flow.setter
    def enable_approval_flow(self, enable_approval_flow):
        """Sets the enable_approval_flow of this CompanySettings.


        :param enable_approval_flow: The enable_approval_flow of this CompanySettings.  # noqa: E501
        :type: bool
        """

        self._enable_approval_flow = enable_approval_flow

    @property
    def default_customer_order_report_id(self):
        """Gets the default_customer_order_report_id of this CompanySettings.  # noqa: E501


        :return: The default_customer_order_report_id of this CompanySettings.  # noqa: E501
        :rtype: int
        """
        return self._default_customer_order_report_id

    @default_customer_order_report_id.setter
    def default_customer_order_report_id(self, default_customer_order_report_id):
        """Sets the default_customer_order_report_id of this CompanySettings.


        :param default_customer_order_report_id: The default_customer_order_report_id of this CompanySettings.  # noqa: E501
        :type: int
        """

        self._default_customer_order_report_id = default_customer_order_report_id

    @property
    def organization_number(self):
        """Gets the organization_number of this CompanySettings.  # noqa: E501


        :return: The organization_number of this CompanySettings.  # noqa: E501
        :rtype: str
        """
        return self._organization_number

    @organization_number.setter
    def organization_number(self, organization_number):
        """Sets the organization_number of this CompanySettings.


        :param organization_number: The organization_number of this CompanySettings.  # noqa: E501
        :type: str
        """

        self._organization_number = organization_number

    @property
    def tax_bank_account_id(self):
        """Gets the tax_bank_account_id of this CompanySettings.  # noqa: E501


        :return: The tax_bank_account_id of this CompanySettings.  # noqa: E501
        :rtype: int
        """
        return self._tax_bank_account_id

    @tax_bank_account_id.setter
    def tax_bank_account_id(self, tax_bank_account_id):
        """Sets the tax_bank_account_id of this CompanySettings.


        :param tax_bank_account_id: The tax_bank_account_id of this CompanySettings.  # noqa: E501
        :type: int
        """

        self._tax_bank_account_id = tax_bank_account_id

    @property
    def has_autobank(self):
        """Gets the has_autobank of this CompanySettings.  # noqa: E501


        :return: The has_autobank of this CompanySettings.  # noqa: E501
        :rtype: bool
        """
        return self._has_autobank

    @has_autobank.setter
    def has_autobank(self, has_autobank):
        """Sets the has_autobank of this CompanySettings.


        :param has_autobank: The has_autobank of this CompanySettings.  # noqa: E501
        :type: bool
        """

        self._has_autobank = has_autobank

    @property
    def status_code(self):
        """Gets the status_code of this CompanySettings.  # noqa: E501


        :return: The status_code of this CompanySettings.  # noqa: E501
        :rtype: int
        """
        return self._status_code

    @status_code.setter
    def status_code(self, status_code):
        """Sets the status_code of this CompanySettings.


        :param status_code: The status_code of this CompanySettings.  # noqa: E501
        :type: int
        """

        self._status_code = status_code

    @property
    def company_bank_account_id(self):
        """Gets the company_bank_account_id of this CompanySettings.  # noqa: E501


        :return: The company_bank_account_id of this CompanySettings.  # noqa: E501
        :rtype: int
        """
        return self._company_bank_account_id

    @company_bank_account_id.setter
    def company_bank_account_id(self, company_bank_account_id):
        """Sets the company_bank_account_id of this CompanySettings.


        :param company_bank_account_id: The company_bank_account_id of this CompanySettings.  # noqa: E501
        :type: int
        """

        self._company_bank_account_id = company_bank_account_id

    @property
    def deleted(self):
        """Gets the deleted of this CompanySettings.  # noqa: E501


        :return: The deleted of this CompanySettings.  # noqa: E501
        :rtype: bool
        """
        return self._deleted

    @deleted.setter
    def deleted(self, deleted):
        """Sets the deleted of this CompanySettings.


        :param deleted: The deleted of this CompanySettings.  # noqa: E501
        :type: bool
        """

        self._deleted = deleted

    @property
    def default_email_id(self):
        """Gets the default_email_id of this CompanySettings.  # noqa: E501


        :return: The default_email_id of this CompanySettings.  # noqa: E501
        :rtype: int
        """
        return self._default_email_id

    @default_email_id.setter
    def default_email_id(self, default_email_id):
        """Sets the default_email_id of this CompanySettings.


        :param default_email_id: The default_email_id of this CompanySettings.  # noqa: E501
        :type: int
        """

        self._default_email_id = default_email_id

    @property
    def default_customer_invoice_reminder_report_id(self):
        """Gets the default_customer_invoice_reminder_report_id of this CompanySettings.  # noqa: E501


        :return: The default_customer_invoice_reminder_report_id of this CompanySettings.  # noqa: E501
        :rtype: int
        """
        return self._default_customer_invoice_reminder_report_id

    @default_customer_invoice_reminder_report_id.setter
    def default_customer_invoice_reminder_report_id(self, default_customer_invoice_reminder_report_id):
        """Sets the default_customer_invoice_reminder_report_id of this CompanySettings.


        :param default_customer_invoice_reminder_report_id: The default_customer_invoice_reminder_report_id of this CompanySettings.  # noqa: E501
        :type: int
        """

        self._default_customer_invoice_reminder_report_id = default_customer_invoice_reminder_report_id

    @property
    def enable_archive_supplier_invoice(self):
        """Gets the enable_archive_supplier_invoice of this CompanySettings.  # noqa: E501


        :return: The enable_archive_supplier_invoice of this CompanySettings.  # noqa: E501
        :rtype: bool
        """
        return self._enable_archive_supplier_invoice

    @enable_archive_supplier_invoice.setter
    def enable_archive_supplier_invoice(self, enable_archive_supplier_invoice):
        """Sets the enable_archive_supplier_invoice of this CompanySettings.


        :param enable_archive_supplier_invoice: The enable_archive_supplier_invoice of this CompanySettings.  # noqa: E501
        :type: bool
        """

        self._enable_archive_supplier_invoice = enable_archive_supplier_invoice

    @property
    def logo_hide_field(self):
        """Gets the logo_hide_field of this CompanySettings.  # noqa: E501


        :return: The logo_hide_field of this CompanySettings.  # noqa: E501
        :rtype: int
        """
        return self._logo_hide_field

    @logo_hide_field.setter
    def logo_hide_field(self, logo_hide_field):
        """Sets the logo_hide_field of this CompanySettings.


        :param logo_hide_field: The logo_hide_field of this CompanySettings.  # noqa: E501
        :type: int
        """

        self._logo_hide_field = logo_hide_field

    @property
    def interrim_payment_account_id(self):
        """Gets the interrim_payment_account_id of this CompanySettings.  # noqa: E501


        :return: The interrim_payment_account_id of this CompanySettings.  # noqa: E501
        :rtype: int
        """
        return self._interrim_payment_account_id

    @interrim_payment_account_id.setter
    def interrim_payment_account_id(self, interrim_payment_account_id):
        """Sets the interrim_payment_account_id of this CompanySettings.


        :param interrim_payment_account_id: The interrim_payment_account_id of this CompanySettings.  # noqa: E501
        :type: int
        """

        self._interrim_payment_account_id = interrim_payment_account_id

    @property
    def payment_bank_agreement_number(self):
        """Gets the payment_bank_agreement_number of this CompanySettings.  # noqa: E501


        :return: The payment_bank_agreement_number of this CompanySettings.  # noqa: E501
        :rtype: str
        """
        return self._payment_bank_agreement_number

    @payment_bank_agreement_number.setter
    def payment_bank_agreement_number(self, payment_bank_agreement_number):
        """Sets the payment_bank_agreement_number of this CompanySettings.


        :param payment_bank_agreement_number: The payment_bank_agreement_number of this CompanySettings.  # noqa: E501
        :type: str
        """

        self._payment_bank_agreement_number = payment_bank_agreement_number

    @property
    def default_customer_invoice_report_id(self):
        """Gets the default_customer_invoice_report_id of this CompanySettings.  # noqa: E501


        :return: The default_customer_invoice_report_id of this CompanySettings.  # noqa: E501
        :rtype: int
        """
        return self._default_customer_invoice_report_id

    @default_customer_invoice_report_id.setter
    def default_customer_invoice_report_id(self, default_customer_invoice_report_id):
        """Sets the default_customer_invoice_report_id of this CompanySettings.


        :param default_customer_invoice_report_id: The default_customer_invoice_report_id of this CompanySettings.  # noqa: E501
        :type: int
        """

        self._default_customer_invoice_report_id = default_customer_invoice_report_id

    @property
    def enable_send_payment_before_journaled(self):
        """Gets the enable_send_payment_before_journaled of this CompanySettings.  # noqa: E501


        :return: The enable_send_payment_before_journaled of this CompanySettings.  # noqa: E501
        :rtype: bool
        """
        return self._enable_send_payment_before_journaled

    @enable_send_payment_before_journaled.setter
    def enable_send_payment_before_journaled(self, enable_send_payment_before_journaled):
        """Sets the enable_send_payment_before_journaled of this CompanySettings.


        :param enable_send_payment_before_journaled: The enable_send_payment_before_journaled of this CompanySettings.  # noqa: E501
        :type: bool
        """

        self._enable_send_payment_before_journaled = enable_send_payment_before_journaled

    @property
    def use_ocr_interpretation(self):
        """Gets the use_ocr_interpretation of this CompanySettings.  # noqa: E501


        :return: The use_ocr_interpretation of this CompanySettings.  # noqa: E501
        :rtype: bool
        """
        return self._use_ocr_interpretation

    @use_ocr_interpretation.setter
    def use_ocr_interpretation(self, use_ocr_interpretation):
        """Sets the use_ocr_interpretation of this CompanySettings.


        :param use_ocr_interpretation: The use_ocr_interpretation of this CompanySettings.  # noqa: E501
        :type: bool
        """

        self._use_ocr_interpretation = use_ocr_interpretation

    @property
    def company_name(self):
        """Gets the company_name of this CompanySettings.  # noqa: E501


        :return: The company_name of this CompanySettings.  # noqa: E501
        :rtype: str
        """
        return self._company_name

    @company_name.setter
    def company_name(self, company_name):
        """Sets the company_name of this CompanySettings.


        :param company_name: The company_name of this CompanySettings.  # noqa: E501
        :type: str
        """

        self._company_name = company_name

    @property
    def default_distributions_id(self):
        """Gets the default_distributions_id of this CompanySettings.  # noqa: E501


        :return: The default_distributions_id of this CompanySettings.  # noqa: E501
        :rtype: int
        """
        return self._default_distributions_id

    @default_distributions_id.setter
    def default_distributions_id(self, default_distributions_id):
        """Sets the default_distributions_id of this CompanySettings.


        :param default_distributions_id: The default_distributions_id of this CompanySettings.  # noqa: E501
        :type: int
        """

        self._default_distributions_id = default_distributions_id

    @property
    def store_distributed_invoice(self):
        """Gets the store_distributed_invoice of this CompanySettings.  # noqa: E501


        :return: The store_distributed_invoice of this CompanySettings.  # noqa: E501
        :rtype: bool
        """
        return self._store_distributed_invoice

    @store_distributed_invoice.setter
    def store_distributed_invoice(self, store_distributed_invoice):
        """Sets the store_distributed_invoice of this CompanySettings.


        :param store_distributed_invoice: The store_distributed_invoice of this CompanySettings.  # noqa: E501
        :type: bool
        """

        self._store_distributed_invoice = store_distributed_invoice

    @property
    def enable_advanced_journal_entry(self):
        """Gets the enable_advanced_journal_entry of this CompanySettings.  # noqa: E501


        :return: The enable_advanced_journal_entry of this CompanySettings.  # noqa: E501
        :rtype: bool
        """
        return self._enable_advanced_journal_entry

    @enable_advanced_journal_entry.setter
    def enable_advanced_journal_entry(self, enable_advanced_journal_entry):
        """Sets the enable_advanced_journal_entry of this CompanySettings.


        :param enable_advanced_journal_entry: The enable_advanced_journal_entry of this CompanySettings.  # noqa: E501
        :type: bool
        """

        self._enable_advanced_journal_entry = enable_advanced_journal_entry

    @property
    def hide_in_active_customers(self):
        """Gets the hide_in_active_customers of this CompanySettings.  # noqa: E501


        :return: The hide_in_active_customers of this CompanySettings.  # noqa: E501
        :rtype: bool
        """
        return self._hide_in_active_customers

    @hide_in_active_customers.setter
    def hide_in_active_customers(self, hide_in_active_customers):
        """Sets the hide_in_active_customers of this CompanySettings.


        :param hide_in_active_customers: The hide_in_active_customers of this CompanySettings.  # noqa: E501
        :type: bool
        """

        self._hide_in_active_customers = hide_in_active_customers

    @property
    def auto_journal_payment(self):
        """Gets the auto_journal_payment of this CompanySettings.  # noqa: E501


        :return: The auto_journal_payment of this CompanySettings.  # noqa: E501
        :rtype: str
        """
        return self._auto_journal_payment

    @auto_journal_payment.setter
    def auto_journal_payment(self, auto_journal_payment):
        """Sets the auto_journal_payment of this CompanySettings.


        :param auto_journal_payment: The auto_journal_payment of this CompanySettings.  # noqa: E501
        :type: str
        """

        self._auto_journal_payment = auto_journal_payment

    @property
    def account_visibility_group_id(self):
        """Gets the account_visibility_group_id of this CompanySettings.  # noqa: E501


        :return: The account_visibility_group_id of this CompanySettings.  # noqa: E501
        :rtype: int
        """
        return self._account_visibility_group_id

    @account_visibility_group_id.setter
    def account_visibility_group_id(self, account_visibility_group_id):
        """Sets the account_visibility_group_id of this CompanySettings.


        :param account_visibility_group_id: The account_visibility_group_id of this CompanySettings.  # noqa: E501
        :type: int
        """

        self._account_visibility_group_id = account_visibility_group_id

    @property
    def factoring_email_id(self):
        """Gets the factoring_email_id of this CompanySettings.  # noqa: E501


        :return: The factoring_email_id of this CompanySettings.  # noqa: E501
        :rtype: int
        """
        return self._factoring_email_id

    @factoring_email_id.setter
    def factoring_email_id(self, factoring_email_id):
        """Sets the factoring_email_id of this CompanySettings.


        :param factoring_email_id: The factoring_email_id of this CompanySettings.  # noqa: E501
        :type: int
        """

        self._factoring_email_id = factoring_email_id

    @property
    def id(self):
        """Gets the id of this CompanySettings.  # noqa: E501


        :return: The id of this CompanySettings.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CompanySettings.


        :param id: The id of this CompanySettings.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def book_customer_invoice_on_delivery_date(self):
        """Gets the book_customer_invoice_on_delivery_date of this CompanySettings.  # noqa: E501


        :return: The book_customer_invoice_on_delivery_date of this CompanySettings.  # noqa: E501
        :rtype: bool
        """
        return self._book_customer_invoice_on_delivery_date

    @book_customer_invoice_on_delivery_date.setter
    def book_customer_invoice_on_delivery_date(self, book_customer_invoice_on_delivery_date):
        """Sets the book_customer_invoice_on_delivery_date of this CompanySettings.


        :param book_customer_invoice_on_delivery_date: The book_customer_invoice_on_delivery_date of this CompanySettings.  # noqa: E501
        :type: bool
        """

        self._book_customer_invoice_on_delivery_date = book_customer_invoice_on_delivery_date

    @property
    def agio_loss_account_id(self):
        """Gets the agio_loss_account_id of this CompanySettings.  # noqa: E501


        :return: The agio_loss_account_id of this CompanySettings.  # noqa: E501
        :rtype: int
        """
        return self._agio_loss_account_id

    @agio_loss_account_id.setter
    def agio_loss_account_id(self, agio_loss_account_id):
        """Sets the agio_loss_account_id of this CompanySettings.


        :param agio_loss_account_id: The agio_loss_account_id of this CompanySettings.  # noqa: E501
        :type: int
        """

        self._agio_loss_account_id = agio_loss_account_id

    @property
    def use_payment_bank_values(self):
        """Gets the use_payment_bank_values of this CompanySettings.  # noqa: E501


        :return: The use_payment_bank_values of this CompanySettings.  # noqa: E501
        :rtype: bool
        """
        return self._use_payment_bank_values

    @use_payment_bank_values.setter
    def use_payment_bank_values(self, use_payment_bank_values):
        """Sets the use_payment_bank_values of this CompanySettings.


        :param use_payment_bank_values: The use_payment_bank_values of this CompanySettings.  # noqa: E501
        :type: bool
        """

        self._use_payment_bank_values = use_payment_bank_values

    @property
    def show_kid_on_customer_invoice(self):
        """Gets the show_kid_on_customer_invoice of this CompanySettings.  # noqa: E501


        :return: The show_kid_on_customer_invoice of this CompanySettings.  # noqa: E501
        :rtype: bool
        """
        return self._show_kid_on_customer_invoice

    @show_kid_on_customer_invoice.setter
    def show_kid_on_customer_invoice(self, show_kid_on_customer_invoice):
        """Sets the show_kid_on_customer_invoice of this CompanySettings.


        :param show_kid_on_customer_invoice: The show_kid_on_customer_invoice of this CompanySettings.  # noqa: E501
        :type: bool
        """

        self._show_kid_on_customer_invoice = show_kid_on_customer_invoice

    @property
    def company_registered(self):
        """Gets the company_registered of this CompanySettings.  # noqa: E501


        :return: The company_registered of this CompanySettings.  # noqa: E501
        :rtype: bool
        """
        return self._company_registered

    @company_registered.setter
    def company_registered(self, company_registered):
        """Sets the company_registered of this CompanySettings.


        :param company_registered: The company_registered of this CompanySettings.  # noqa: E501
        :type: bool
        """

        self._company_registered = company_registered

    @property
    def hide_in_active_suppliers(self):
        """Gets the hide_in_active_suppliers of this CompanySettings.  # noqa: E501


        :return: The hide_in_active_suppliers of this CompanySettings.  # noqa: E501
        :rtype: bool
        """
        return self._hide_in_active_suppliers

    @hide_in_active_suppliers.setter
    def hide_in_active_suppliers(self, hide_in_active_suppliers):
        """Sets the hide_in_active_suppliers of this CompanySettings.


        :param hide_in_active_suppliers: The hide_in_active_suppliers of this CompanySettings.  # noqa: E501
        :type: bool
        """

        self._hide_in_active_suppliers = hide_in_active_suppliers

    @property
    def tax_mandatory(self):
        """Gets the tax_mandatory of this CompanySettings.  # noqa: E501


        :return: The tax_mandatory of this CompanySettings.  # noqa: E501
        :rtype: bool
        """
        return self._tax_mandatory

    @tax_mandatory.setter
    def tax_mandatory(self, tax_mandatory):
        """Sets the tax_mandatory of this CompanySettings.


        :param tax_mandatory: The tax_mandatory of this CompanySettings.  # noqa: E501
        :type: bool
        """

        self._tax_mandatory = tax_mandatory

    @property
    def default_address_id(self):
        """Gets the default_address_id of this CompanySettings.  # noqa: E501


        :return: The default_address_id of this CompanySettings.  # noqa: E501
        :rtype: int
        """
        return self._default_address_id

    @default_address_id.setter
    def default_address_id(self, default_address_id):
        """Sets the default_address_id of this CompanySettings.


        :param default_address_id: The default_address_id of this CompanySettings.  # noqa: E501
        :type: int
        """

        self._default_address_id = default_address_id

    @property
    def updated_by(self):
        """Gets the updated_by of this CompanySettings.  # noqa: E501


        :return: The updated_by of this CompanySettings.  # noqa: E501
        :rtype: str
        """
        return self._updated_by

    @updated_by.setter
    def updated_by(self, updated_by):
        """Sets the updated_by of this CompanySettings.


        :param updated_by: The updated_by of this CompanySettings.  # noqa: E501
        :type: str
        """

        self._updated_by = updated_by

    @property
    def auto_distribute_invoice(self):
        """Gets the auto_distribute_invoice of this CompanySettings.  # noqa: E501


        :return: The auto_distribute_invoice of this CompanySettings.  # noqa: E501
        :rtype: bool
        """
        return self._auto_distribute_invoice

    @auto_distribute_invoice.setter
    def auto_distribute_invoice(self, auto_distribute_invoice):
        """Sets the auto_distribute_invoice of this CompanySettings.


        :param auto_distribute_invoice: The auto_distribute_invoice of this CompanySettings.  # noqa: E501
        :type: bool
        """

        self._auto_distribute_invoice = auto_distribute_invoice

    @property
    def web_address(self):
        """Gets the web_address of this CompanySettings.  # noqa: E501


        :return: The web_address of this CompanySettings.  # noqa: E501
        :rtype: str
        """
        return self._web_address

    @web_address.setter
    def web_address(self, web_address):
        """Sets the web_address of this CompanySettings.


        :param web_address: The web_address of this CompanySettings.  # noqa: E501
        :type: str
        """

        self._web_address = web_address

    @property
    def office_municipality_no(self):
        """Gets the office_municipality_no of this CompanySettings.  # noqa: E501


        :return: The office_municipality_no of this CompanySettings.  # noqa: E501
        :rtype: str
        """
        return self._office_municipality_no

    @office_municipality_no.setter
    def office_municipality_no(self, office_municipality_no):
        """Sets the office_municipality_no of this CompanySettings.


        :param office_municipality_no: The office_municipality_no of this CompanySettings.  # noqa: E501
        :type: str
        """

        self._office_municipality_no = office_municipality_no

    @property
    def use_asset_register(self):
        """Gets the use_asset_register of this CompanySettings.  # noqa: E501


        :return: The use_asset_register of this CompanySettings.  # noqa: E501
        :rtype: bool
        """
        return self._use_asset_register

    @use_asset_register.setter
    def use_asset_register(self, use_asset_register):
        """Sets the use_asset_register of this CompanySettings.


        :param use_asset_register: The use_asset_register of this CompanySettings.  # noqa: E501
        :type: bool
        """

        self._use_asset_register = use_asset_register

    @property
    def created_by(self):
        """Gets the created_by of this CompanySettings.  # noqa: E501


        :return: The created_by of this CompanySettings.  # noqa: E501
        :rtype: str
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this CompanySettings.


        :param created_by: The created_by of this CompanySettings.  # noqa: E501
        :type: str
        """

        self._created_by = created_by

    @property
    def default_customer_quote_report_id(self):
        """Gets the default_customer_quote_report_id of this CompanySettings.  # noqa: E501


        :return: The default_customer_quote_report_id of this CompanySettings.  # noqa: E501
        :rtype: int
        """
        return self._default_customer_quote_report_id

    @default_customer_quote_report_id.setter
    def default_customer_quote_report_id(self, default_customer_quote_report_id):
        """Sets the default_customer_quote_report_id of this CompanySettings.


        :param default_customer_quote_report_id: The default_customer_quote_report_id of this CompanySettings.  # noqa: E501
        :type: int
        """

        self._default_customer_quote_report_id = default_customer_quote_report_id

    @property
    def supplier_account_id(self):
        """Gets the supplier_account_id of this CompanySettings.  # noqa: E501


        :return: The supplier_account_id of this CompanySettings.  # noqa: E501
        :rtype: int
        """
        return self._supplier_account_id

    @supplier_account_id.setter
    def supplier_account_id(self, supplier_account_id):
        """Sets the supplier_account_id of this CompanySettings.


        :param supplier_account_id: The supplier_account_id of this CompanySettings.  # noqa: E501
        :type: int
        """

        self._supplier_account_id = supplier_account_id

    @property
    def default_sales_account_id(self):
        """Gets the default_sales_account_id of this CompanySettings.  # noqa: E501


        :return: The default_sales_account_id of this CompanySettings.  # noqa: E501
        :rtype: int
        """
        return self._default_sales_account_id

    @default_sales_account_id.setter
    def default_sales_account_id(self, default_sales_account_id):
        """Sets the default_sales_account_id of this CompanySettings.


        :param default_sales_account_id: The default_sales_account_id of this CompanySettings.  # noqa: E501
        :type: int
        """

        self._default_sales_account_id = default_sales_account_id

    @property
    def settlement_vat_account_id(self):
        """Gets the settlement_vat_account_id of this CompanySettings.  # noqa: E501


        :return: The settlement_vat_account_id of this CompanySettings.  # noqa: E501
        :rtype: int
        """
        return self._settlement_vat_account_id

    @settlement_vat_account_id.setter
    def settlement_vat_account_id(self, settlement_vat_account_id):
        """Sets the settlement_vat_account_id of this CompanySettings.


        :param settlement_vat_account_id: The settlement_vat_account_id of this CompanySettings.  # noqa: E501
        :type: int
        """

        self._settlement_vat_account_id = settlement_vat_account_id

    @property
    def ap_include_attachment(self):
        """Gets the ap_include_attachment of this CompanySettings.  # noqa: E501


        :return: The ap_include_attachment of this CompanySettings.  # noqa: E501
        :rtype: bool
        """
        return self._ap_include_attachment

    @ap_include_attachment.setter
    def ap_include_attachment(self, ap_include_attachment):
        """Sets the ap_include_attachment of this CompanySettings.


        :param ap_include_attachment: The ap_include_attachment of this CompanySettings.  # noqa: E501
        :type: bool
        """

        self._ap_include_attachment = ap_include_attachment

    @property
    def vat_report_form_id(self):
        """Gets the vat_report_form_id of this CompanySettings.  # noqa: E501


        :return: The vat_report_form_id of this CompanySettings.  # noqa: E501
        :rtype: int
        """
        return self._vat_report_form_id

    @vat_report_form_id.setter
    def vat_report_form_id(self, vat_report_form_id):
        """Sets the vat_report_form_id of this CompanySettings.


        :param vat_report_form_id: The vat_report_form_id of this CompanySettings.  # noqa: E501
        :type: int
        """

        self._vat_report_form_id = vat_report_form_id

    @property
    def customer_account_id(self):
        """Gets the customer_account_id of this CompanySettings.  # noqa: E501


        :return: The customer_account_id of this CompanySettings.  # noqa: E501
        :rtype: int
        """
        return self._customer_account_id

    @customer_account_id.setter
    def customer_account_id(self, customer_account_id):
        """Sets the customer_account_id of this CompanySettings.


        :param customer_account_id: The customer_account_id of this CompanySettings.  # noqa: E501
        :type: int
        """

        self._customer_account_id = customer_account_id

    @property
    def salary_bank_account_id(self):
        """Gets the salary_bank_account_id of this CompanySettings.  # noqa: E501


        :return: The salary_bank_account_id of this CompanySettings.  # noqa: E501
        :rtype: int
        """
        return self._salary_bank_account_id

    @salary_bank_account_id.setter
    def salary_bank_account_id(self, salary_bank_account_id):
        """Sets the salary_bank_account_id of this CompanySettings.


        :param salary_bank_account_id: The salary_bank_account_id of this CompanySettings.  # noqa: E501
        :type: int
        """

        self._salary_bank_account_id = salary_bank_account_id

    @property
    def ap_guid(self):
        """Gets the ap_guid of this CompanySettings.  # noqa: E501


        :return: The ap_guid of this CompanySettings.  # noqa: E501
        :rtype: str
        """
        return self._ap_guid

    @ap_guid.setter
    def ap_guid(self, ap_guid):
        """Sets the ap_guid of this CompanySettings.


        :param ap_guid: The ap_guid of this CompanySettings.  # noqa: E501
        :type: str
        """

        self._ap_guid = ap_guid

    @property
    def factoring_number(self):
        """Gets the factoring_number of this CompanySettings.  # noqa: E501


        :return: The factoring_number of this CompanySettings.  # noqa: E501
        :rtype: int
        """
        return self._factoring_number

    @factoring_number.setter
    def factoring_number(self, factoring_number):
        """Sets the factoring_number of this CompanySettings.


        :param factoring_number: The factoring_number of this CompanySettings.  # noqa: E501
        :type: int
        """

        self._factoring_number = factoring_number

    @property
    def use_nets_integration(self):
        """Gets the use_nets_integration of this CompanySettings.  # noqa: E501


        :return: The use_nets_integration of this CompanySettings.  # noqa: E501
        :rtype: bool
        """
        return self._use_nets_integration

    @use_nets_integration.setter
    def use_nets_integration(self, use_nets_integration):
        """Sets the use_nets_integration of this CompanySettings.


        :param use_nets_integration: The use_nets_integration of this CompanySettings.  # noqa: E501
        :type: bool
        """

        self._use_nets_integration = use_nets_integration

    @property
    def interrim_remit_account_id(self):
        """Gets the interrim_remit_account_id of this CompanySettings.  # noqa: E501


        :return: The interrim_remit_account_id of this CompanySettings.  # noqa: E501
        :rtype: int
        """
        return self._interrim_remit_account_id

    @interrim_remit_account_id.setter
    def interrim_remit_account_id(self, interrim_remit_account_id):
        """Sets the interrim_remit_account_id of this CompanySettings.


        :param interrim_remit_account_id: The interrim_remit_account_id of this CompanySettings.  # noqa: E501
        :type: int
        """

        self._interrim_remit_account_id = interrim_remit_account_id

    @property
    def localization(self):
        """Gets the localization of this CompanySettings.  # noqa: E501


        :return: The localization of this CompanySettings.  # noqa: E501
        :rtype: str
        """
        return self._localization

    @localization.setter
    def localization(self, localization):
        """Sets the localization of this CompanySettings.


        :param localization: The localization of this CompanySettings.  # noqa: E501
        :type: str
        """

        self._localization = localization

    @property
    def force_supplier_invoice_approval(self):
        """Gets the force_supplier_invoice_approval of this CompanySettings.  # noqa: E501


        :return: The force_supplier_invoice_approval of this CompanySettings.  # noqa: E501
        :rtype: bool
        """
        return self._force_supplier_invoice_approval

    @force_supplier_invoice_approval.setter
    def force_supplier_invoice_approval(self, force_supplier_invoice_approval):
        """Sets the force_supplier_invoice_approval of this CompanySettings.


        :param force_supplier_invoice_approval: The force_supplier_invoice_approval of this CompanySettings.  # noqa: E501
        :type: bool
        """

        self._force_supplier_invoice_approval = force_supplier_invoice_approval

    @property
    def acceptable_delta4_customer_payment_account_id(self):
        """Gets the acceptable_delta4_customer_payment_account_id of this CompanySettings.  # noqa: E501


        :return: The acceptable_delta4_customer_payment_account_id of this CompanySettings.  # noqa: E501
        :rtype: int
        """
        return self._acceptable_delta4_customer_payment_account_id

    @acceptable_delta4_customer_payment_account_id.setter
    def acceptable_delta4_customer_payment_account_id(self, acceptable_delta4_customer_payment_account_id):
        """Sets the acceptable_delta4_customer_payment_account_id of this CompanySettings.


        :param acceptable_delta4_customer_payment_account_id: The acceptable_delta4_customer_payment_account_id of this CompanySettings.  # noqa: E501
        :type: int
        """

        self._acceptable_delta4_customer_payment_account_id = acceptable_delta4_customer_payment_account_id

    @property
    def use_xtra_payment_org_xml_tag(self):
        """Gets the use_xtra_payment_org_xml_tag of this CompanySettings.  # noqa: E501


        :return: The use_xtra_payment_org_xml_tag of this CompanySettings.  # noqa: E501
        :rtype: bool
        """
        return self._use_xtra_payment_org_xml_tag

    @use_xtra_payment_org_xml_tag.setter
    def use_xtra_payment_org_xml_tag(self, use_xtra_payment_org_xml_tag):
        """Sets the use_xtra_payment_org_xml_tag of this CompanySettings.


        :param use_xtra_payment_org_xml_tag: The use_xtra_payment_org_xml_tag of this CompanySettings.  # noqa: E501
        :type: bool
        """

        self._use_xtra_payment_org_xml_tag = use_xtra_payment_org_xml_tag

    @property
    def customer_invoice_reminder_settings_id(self):
        """Gets the customer_invoice_reminder_settings_id of this CompanySettings.  # noqa: E501


        :return: The customer_invoice_reminder_settings_id of this CompanySettings.  # noqa: E501
        :rtype: int
        """
        return self._customer_invoice_reminder_settings_id

    @customer_invoice_reminder_settings_id.setter
    def customer_invoice_reminder_settings_id(self, customer_invoice_reminder_settings_id):
        """Sets the customer_invoice_reminder_settings_id of this CompanySettings.


        :param customer_invoice_reminder_settings_id: The customer_invoice_reminder_settings_id of this CompanySettings.  # noqa: E501
        :type: int
        """

        self._customer_invoice_reminder_settings_id = customer_invoice_reminder_settings_id

    @property
    def account_group_set_id(self):
        """Gets the account_group_set_id of this CompanySettings.  # noqa: E501


        :return: The account_group_set_id of this CompanySettings.  # noqa: E501
        :rtype: int
        """
        return self._account_group_set_id

    @account_group_set_id.setter
    def account_group_set_id(self, account_group_set_id):
        """Sets the account_group_set_id of this CompanySettings.


        :param account_group_set_id: The account_group_set_id of this CompanySettings.  # noqa: E501
        :type: int
        """

        self._account_group_set_id = account_group_set_id

    @property
    def base_currency_code_id(self):
        """Gets the base_currency_code_id of this CompanySettings.  # noqa: E501


        :return: The base_currency_code_id of this CompanySettings.  # noqa: E501
        :rtype: int
        """
        return self._base_currency_code_id

    @base_currency_code_id.setter
    def base_currency_code_id(self, base_currency_code_id):
        """Sets the base_currency_code_id of this CompanySettings.


        :param base_currency_code_id: The base_currency_code_id of this CompanySettings.  # noqa: E501
        :type: int
        """

        self._base_currency_code_id = base_currency_code_id

    @property
    def default_address(self):
        """Gets the default_address of this CompanySettings.  # noqa: E501


        :return: The default_address of this CompanySettings.  # noqa: E501
        :rtype: Address
        """
        return self._default_address

    @default_address.setter
    def default_address(self, default_address):
        """Sets the default_address of this CompanySettings.


        :param default_address: The default_address of this CompanySettings.  # noqa: E501
        :type: Address
        """

        self._default_address = default_address

    @property
    def default_phone(self):
        """Gets the default_phone of this CompanySettings.  # noqa: E501


        :return: The default_phone of this CompanySettings.  # noqa: E501
        :rtype: Phone
        """
        return self._default_phone

    @default_phone.setter
    def default_phone(self, default_phone):
        """Sets the default_phone of this CompanySettings.


        :param default_phone: The default_phone of this CompanySettings.  # noqa: E501
        :type: Phone
        """

        self._default_phone = default_phone

    @property
    def default_email(self):
        """Gets the default_email of this CompanySettings.  # noqa: E501


        :return: The default_email of this CompanySettings.  # noqa: E501
        :rtype: Email
        """
        return self._default_email

    @default_email.setter
    def default_email(self, default_email):
        """Sets the default_email of this CompanySettings.


        :param default_email: The default_email of this CompanySettings.  # noqa: E501
        :type: Email
        """

        self._default_email = default_email

    @property
    def saf_timport_account(self):
        """Gets the saf_timport_account of this CompanySettings.  # noqa: E501


        :return: The saf_timport_account of this CompanySettings.  # noqa: E501
        :rtype: Account
        """
        return self._saf_timport_account

    @saf_timport_account.setter
    def saf_timport_account(self, saf_timport_account):
        """Sets the saf_timport_account of this CompanySettings.


        :param saf_timport_account: The saf_timport_account of this CompanySettings.  # noqa: E501
        :type: Account
        """

        self._saf_timport_account = saf_timport_account

    @property
    def bank_accounts(self):
        """Gets the bank_accounts of this CompanySettings.  # noqa: E501


        :return: The bank_accounts of this CompanySettings.  # noqa: E501
        :rtype: list[BankAccount]
        """
        return self._bank_accounts

    @bank_accounts.setter
    def bank_accounts(self, bank_accounts):
        """Sets the bank_accounts of this CompanySettings.


        :param bank_accounts: The bank_accounts of this CompanySettings.  # noqa: E501
        :type: list[BankAccount]
        """

        self._bank_accounts = bank_accounts

    @property
    def company_bank_account(self):
        """Gets the company_bank_account of this CompanySettings.  # noqa: E501


        :return: The company_bank_account of this CompanySettings.  # noqa: E501
        :rtype: BankAccount
        """
        return self._company_bank_account

    @company_bank_account.setter
    def company_bank_account(self, company_bank_account):
        """Sets the company_bank_account of this CompanySettings.


        :param company_bank_account: The company_bank_account of this CompanySettings.  # noqa: E501
        :type: BankAccount
        """

        self._company_bank_account = company_bank_account

    @property
    def tax_bank_account(self):
        """Gets the tax_bank_account of this CompanySettings.  # noqa: E501


        :return: The tax_bank_account of this CompanySettings.  # noqa: E501
        :rtype: BankAccount
        """
        return self._tax_bank_account

    @tax_bank_account.setter
    def tax_bank_account(self, tax_bank_account):
        """Sets the tax_bank_account of this CompanySettings.


        :param tax_bank_account: The tax_bank_account of this CompanySettings.  # noqa: E501
        :type: BankAccount
        """

        self._tax_bank_account = tax_bank_account

    @property
    def salary_bank_account(self):
        """Gets the salary_bank_account of this CompanySettings.  # noqa: E501


        :return: The salary_bank_account of this CompanySettings.  # noqa: E501
        :rtype: BankAccount
        """
        return self._salary_bank_account

    @salary_bank_account.setter
    def salary_bank_account(self, salary_bank_account):
        """Sets the salary_bank_account of this CompanySettings.


        :param salary_bank_account: The salary_bank_account of this CompanySettings.  # noqa: E501
        :type: BankAccount
        """

        self._salary_bank_account = salary_bank_account

    @property
    def ap_contact(self):
        """Gets the ap_contact of this CompanySettings.  # noqa: E501


        :return: The ap_contact of this CompanySettings.  # noqa: E501
        :rtype: Contact
        """
        return self._ap_contact

    @ap_contact.setter
    def ap_contact(self, ap_contact):
        """Sets the ap_contact of this CompanySettings.


        :param ap_contact: The ap_contact of this CompanySettings.  # noqa: E501
        :type: Contact
        """

        self._ap_contact = ap_contact

    @property
    def ap_incomming(self):
        """Gets the ap_incomming of this CompanySettings.  # noqa: E501


        :return: The ap_incomming of this CompanySettings.  # noqa: E501
        :rtype: list[AccessPointFormat]
        """
        return self._ap_incomming

    @ap_incomming.setter
    def ap_incomming(self, ap_incomming):
        """Sets the ap_incomming of this CompanySettings.


        :param ap_incomming: The ap_incomming of this CompanySettings.  # noqa: E501
        :type: list[AccessPointFormat]
        """

        self._ap_incomming = ap_incomming

    @property
    def ap_outgoing(self):
        """Gets the ap_outgoing of this CompanySettings.  # noqa: E501


        :return: The ap_outgoing of this CompanySettings.  # noqa: E501
        :rtype: list[AccessPointFormat]
        """
        return self._ap_outgoing

    @ap_outgoing.setter
    def ap_outgoing(self, ap_outgoing):
        """Sets the ap_outgoing of this CompanySettings.


        :param ap_outgoing: The ap_outgoing of this CompanySettings.  # noqa: E501
        :type: list[AccessPointFormat]
        """

        self._ap_outgoing = ap_outgoing

    @property
    def distributions(self):
        """Gets the distributions of this CompanySettings.  # noqa: E501


        :return: The distributions of this CompanySettings.  # noqa: E501
        :rtype: Distributions
        """
        return self._distributions

    @distributions.setter
    def distributions(self, distributions):
        """Sets the distributions of this CompanySettings.


        :param distributions: The distributions of this CompanySettings.  # noqa: E501
        :type: Distributions
        """

        self._distributions = distributions

    @property
    def customer_invoice_reminder_settings(self):
        """Gets the customer_invoice_reminder_settings of this CompanySettings.  # noqa: E501


        :return: The customer_invoice_reminder_settings of this CompanySettings.  # noqa: E501
        :rtype: CustomerInvoiceReminderSettings
        """
        return self._customer_invoice_reminder_settings

    @customer_invoice_reminder_settings.setter
    def customer_invoice_reminder_settings(self, customer_invoice_reminder_settings):
        """Sets the customer_invoice_reminder_settings of this CompanySettings.


        :param customer_invoice_reminder_settings: The customer_invoice_reminder_settings of this CompanySettings.  # noqa: E501
        :type: CustomerInvoiceReminderSettings
        """

        self._customer_invoice_reminder_settings = customer_invoice_reminder_settings

    @property
    def default_tof_currency_settings(self):
        """Gets the default_tof_currency_settings of this CompanySettings.  # noqa: E501


        :return: The default_tof_currency_settings of this CompanySettings.  # noqa: E501
        :rtype: TOFCurrencySettings
        """
        return self._default_tof_currency_settings

    @default_tof_currency_settings.setter
    def default_tof_currency_settings(self, default_tof_currency_settings):
        """Sets the default_tof_currency_settings of this CompanySettings.


        :param default_tof_currency_settings: The default_tof_currency_settings of this CompanySettings.  # noqa: E501
        :type: TOFCurrencySettings
        """

        self._default_tof_currency_settings = default_tof_currency_settings

    @property
    def factoring_email(self):
        """Gets the factoring_email of this CompanySettings.  # noqa: E501


        :return: The factoring_email of this CompanySettings.  # noqa: E501
        :rtype: Email
        """
        return self._factoring_email

    @factoring_email.setter
    def factoring_email(self, factoring_email):
        """Sets the factoring_email of this CompanySettings.


        :param factoring_email: The factoring_email of this CompanySettings.  # noqa: E501
        :type: Email
        """

        self._factoring_email = factoring_email

    @property
    def custom_values(self):
        """Gets the custom_values of this CompanySettings.  # noqa: E501


        :return: The custom_values of this CompanySettings.  # noqa: E501
        :rtype: CustomValues
        """
        return self._custom_values

    @custom_values.setter
    def custom_values(self, custom_values):
        """Sets the custom_values of this CompanySettings.


        :param custom_values: The custom_values of this CompanySettings.  # noqa: E501
        :type: CustomValues
        """

        self._custom_values = custom_values

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(CompanySettings, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CompanySettings):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
